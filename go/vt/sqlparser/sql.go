// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const THROTTLE = 57624
const UNTHROTTLE = 57625
const EXPIRE = 57626
const RATIO = 57627
const BEGIN = 57628
const START = 57629
const TRANSACTION = 57630
const COMMIT = 57631
const ROLLBACK = 57632
const SAVEPOINT = 57633
const RELEASE = 57634
const WORK = 57635
const BIT = 57636
const TINYINT = 57637
const SMALLINT = 57638
const MEDIUMINT = 57639
const INT = 57640
const INTEGER = 57641
const BIGINT = 57642
const INTNUM = 57643
const REAL = 57644
const DOUBLE = 57645
const FLOAT_TYPE = 57646
const DECIMAL_TYPE = 57647
const NUMERIC = 57648
const TIME = 57649
const TIMESTAMP = 57650
const DATETIME = 57651
const YEAR = 57652
const CHAR = 57653
const VARCHAR = 57654
const BOOL = 57655
const CHARACTER = 57656
const VARBINARY = 57657
const NCHAR = 57658
const TEXT = 57659
const TINYTEXT = 57660
const MEDIUMTEXT = 57661
const LONGTEXT = 57662
const BLOB = 57663
const TINYBLOB = 57664
const MEDIUMBLOB = 57665
const LONGBLOB = 57666
const JSON = 57667
const JSON_SCHEMA_VALID = 57668
const JSON_SCHEMA_VALIDATION_REPORT = 57669
const ENUM = 57670
const GEOMETRY = 57671
const POINT = 57672
const LINESTRING = 57673
const POLYGON = 57674
const GEOMETRYCOLLECTION = 57675
const MULTIPOINT = 57676
const MULTILINESTRING = 57677
const MULTIPOLYGON = 57678
const ASCII = 57679
const UNICODE = 57680
const NULLX = 57681
const AUTO_INCREMENT = 57682
const APPROXNUM = 57683
const SIGNED = 57684
const UNSIGNED = 57685
const ZEROFILL = 57686
const CODE = 57687
const COLLATION = 57688
const COLUMNS = 57689
const DATABASES = 57690
const ENGINES = 57691
const EVENT = 57692
const EXTENDED = 57693
const FIELDS = 57694
const FULL = 57695
const FUNCTION = 57696
const GTID_EXECUTED = 57697
const KEYSPACES = 57698
const OPEN = 57699
const PLUGINS = 57700
const PRIVILEGES = 57701
const PROCESSLIST = 57702
const SCHEMAS = 57703
const TABLES = 57704
const TRIGGERS = 57705
const USER = 57706
const VGTID_EXECUTED = 57707
const VITESS_KEYSPACES = 57708
const VITESS_METADATA = 57709
const VITESS_MIGRATIONS = 57710
const VITESS_REPLICATION_STATUS = 57711
const VITESS_SHARDS = 57712
const VITESS_TABLETS = 57713
const VITESS_TARGET = 57714
const VSCHEMA = 57715
const VITESS_THROTTLED_APPS = 57716
const NAMES = 57717
const GLOBAL = 57718
const SESSION = 57719
const ISOLATION = 57720
const LEVEL = 57721
const READ = 57722
const WRITE = 57723
const ONLY = 57724
const REPEATABLE = 57725
const COMMITTED = 57726
const UNCOMMITTED = 57727
const SERIALIZABLE = 57728
const CURRENT_TIMESTAMP = 57729
const DATABASE = 57730
const CURRENT_DATE = 57731
const NOW = 57732
const CURRENT_TIME = 57733
const LOCALTIME = 57734
const LOCALTIMESTAMP = 57735
const CURRENT_USER = 57736
const UTC_DATE = 57737
const UTC_TIME = 57738
const UTC_TIMESTAMP = 57739
const DAY = 57740
const DAY_HOUR = 57741
const DAY_MICROSECOND = 57742
const DAY_MINUTE = 57743
const DAY_SECOND = 57744
const HOUR = 57745
const HOUR_MICROSECOND = 57746
const HOUR_MINUTE = 57747
const HOUR_SECOND = 57748
const MICROSECOND = 57749
const MINUTE = 57750
const MINUTE_MICROSECOND = 57751
const MINUTE_SECOND = 57752
const MONTH = 57753
const QUARTER = 57754
const SECOND = 57755
const SECOND_MICROSECOND = 57756
const YEAR_MONTH = 57757
const WEEK = 57758
const REPLACE = 57759
const CONVERT = 57760
const CAST = 57761
const SUBSTR = 57762
const SUBSTRING = 57763
const GROUP_CONCAT = 57764
const SEPARATOR = 57765
const TIMESTAMPADD = 57766
const TIMESTAMPDIFF = 57767
const WEIGHT_STRING = 57768
const LTRIM = 57769
const RTRIM = 57770
const TRIM = 57771
const JSON_ARRAY = 57772
const JSON_OBJECT = 57773
const JSON_QUOTE = 57774
const JSON_DEPTH = 57775
const JSON_TYPE = 57776
const JSON_LENGTH = 57777
const JSON_VALID = 57778
const JSON_ARRAY_APPEND = 57779
const JSON_ARRAY_INSERT = 57780
const JSON_INSERT = 57781
const JSON_MERGE = 57782
const JSON_MERGE_PATCH = 57783
const JSON_MERGE_PRESERVE = 57784
const JSON_REMOVE = 57785
const JSON_REPLACE = 57786
const JSON_SET = 57787
const JSON_UNQUOTE = 57788
const MATCH = 57789
const AGAINST = 57790
const BOOLEAN = 57791
const LANGUAGE = 57792
const WITH = 57793
const QUERY = 57794
const EXPANSION = 57795
const WITHOUT = 57796
const VALIDATION = 57797
const UNUSED = 57798
const ARRAY = 57799
const CUME_DIST = 57800
const DESCRIPTION = 57801
const DENSE_RANK = 57802
const EMPTY = 57803
const EXCEPT = 57804
const FIRST_VALUE = 57805
const GROUPING = 57806
const GROUPS = 57807
const JSON_TABLE = 57808
const LAG = 57809
const LAST_VALUE = 57810
const LATERAL = 57811
const LEAD = 57812
const NTH_VALUE = 57813
const NTILE = 57814
const OF = 57815
const OVER = 57816
const PERCENT_RANK = 57817
const RANK = 57818
const RECURSIVE = 57819
const ROW_NUMBER = 57820
const SYSTEM = 57821
const WINDOW = 57822
const ACTIVE = 57823
const ADMIN = 57824
const BUCKETS = 57825
const CLONE = 57826
const COMPONENT = 57827
const DEFINITION = 57828
const ENFORCED = 57829
const EXCLUDE = 57830
const FOLLOWING = 57831
const GEOMCOLLECTION = 57832
const GET_MASTER_PUBLIC_KEY = 57833
const HISTOGRAM = 57834
const HISTORY = 57835
const INACTIVE = 57836
const INVISIBLE = 57837
const LOCKED = 57838
const MASTER_COMPRESSION_ALGORITHMS = 57839
const MASTER_PUBLIC_KEY_PATH = 57840
const MASTER_TLS_CIPHERSUITES = 57841
const MASTER_ZSTD_COMPRESSION_LEVEL = 57842
const NESTED = 57843
const NETWORK_NAMESPACE = 57844
const NOWAIT = 57845
const NULLS = 57846
const OJ = 57847
const OLD = 57848
const OPTIONAL = 57849
const ORDINALITY = 57850
const ORGANIZATION = 57851
const OTHERS = 57852
const PATH = 57853
const PERSIST = 57854
const PERSIST_ONLY = 57855
const PRECEDING = 57856
const PRIVILEGE_CHECKS_USER = 57857
const PROCESS = 57858
const RANDOM = 57859
const REFERENCE = 57860
const REQUIRE_ROW_FORMAT = 57861
const RESOURCE = 57862
const RESPECT = 57863
const RESTART = 57864
const RETAIN = 57865
const REUSE = 57866
const ROLE = 57867
const SECONDARY = 57868
const SECONDARY_ENGINE = 57869
const SECONDARY_LOAD = 57870
const SECONDARY_UNLOAD = 57871
const SKIP = 57872
const SRID = 57873
const THREAD_PRIORITY = 57874
const TIES = 57875
const UNBOUNDED = 57876
const VCPU = 57877
const VISIBLE = 57878
const FORMAT = 57879
const TREE = 57880
const VITESS = 57881
const TRADITIONAL = 57882
const LOCAL = 57883
const LOW_PRIORITY = 57884
const NO_WRITE_TO_BINLOG = 57885
const LOGS = 57886
const ERROR = 57887
const GENERAL = 57888
const HOSTS = 57889
const OPTIMIZER_COSTS = 57890
const USER_RESOURCES = 57891
const SLOW = 57892
const CHANNEL = 57893
const RELAY = 57894
const EXPORT = 57895
const AVG_ROW_LENGTH = 57896
const CONNECTION = 57897
const CHECKSUM = 57898
const DELAY_KEY_WRITE = 57899
const ENCRYPTION = 57900
const ENGINE = 57901
const INSERT_METHOD = 57902
const MAX_ROWS = 57903
const MIN_ROWS = 57904
const PACK_KEYS = 57905
const PASSWORD = 57906
const FIXED = 57907
const DYNAMIC = 57908
const COMPRESSED = 57909
const REDUNDANT = 57910
const COMPACT = 57911
const ROW_FORMAT = 57912
const STATS_AUTO_RECALC = 57913
const STATS_PERSISTENT = 57914
const STATS_SAMPLE_PAGES = 57915
const STORAGE = 57916
const MEMORY = 57917
const DISK = 57918
const PARTITIONS = 57919
const LINEAR = 57920
const RANGE = 57921
const LIST = 57922
const SUBPARTITION = 57923
const SUBPARTITIONS = 57924
const HASH = 57925

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	601, 145,
	-2, 151,
	-1, 48,
	131, 151,
	171, 151,
	331, 151,
	-2, 462,
	-1, 55,
	35, 682,
	231, 682,
	242, 682,
	277, 696,
	278, 696,
	-2, 684,
	-1, 60,
	233, 709,
	-2, 707,
	-1, 114,
	230, 1228,
	-2, 119,
	-1, 116,
	1, 146,
	601, 146,
	-2, 151,
	-1, 126,
	132, 358,
	236, 358,
	-2, 451,
	-1, 145,
	131, 151,
	171, 151,
	331, 151,
	-2, 471,
	-1, 682,
	215, 1249,
	-2, 1245,
	-1, 683,
	215, 1250,
	-2, 1246,
	-1, 757,
	59, 777,
	-2, 792,
	-1, 794,
	147, 1649,
	-2, 112,
	-1, 795,
	147, 1494,
	-2, 113,
	-1, 801,
	147, 1577,
	-2, 1222,
	-1, 949,
	147, 1424,
	-2, 1219,
	-1, 988,
	241, 41,
	246, 41,
	-2, 369,
	-1, 1065,
	1, 510,
	601, 510,
	-2, 151,
	-1, 1302,
	59, 778,
	-2, 797,
	-1, 1303,
	59, 779,
	-2, 798,
	-1, 1356,
	131, 151,
	171, 151,
	331, 151,
	-2, 401,
	-1, 1434,
	132, 358,
	236, 358,
	-2, 451,
	-1, 1443,
	241, 42,
	246, 42,
	-2, 370,
	-1, 1744,
	215, 1254,
	-2, 1248,
	-1, 1827,
	131, 151,
	171, 151,
	331, 151,
	-2, 402,
	-1, 1834,
	25, 170,
	-2, 172,
	-1, 2072,
	86, 39,
	-2, 834,
	-1, 2124,
	77, 94,
	86, 94,
	-2, 854,
	-1, 2189,
	576, 609,
	-2, 596,
	-1, 2325,
	49, 1190,
	-2, 1184,
	-1, 2535,
	86, 39,
	-2, 835,
	-1, 2573,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 826,
	-1, 2869,
	22, 1579,
	32, 1579,
	172, 1579,
	253, 1579,
	311, 1579,
	312, 1579,
	313, 1579,
	314, 1579,
	315, 1579,
	316, 1579,
	317, 1579,
	319, 1579,
	320, 1579,
	321, 1579,
	322, 1579,
	323, 1579,
	324, 1579,
	325, 1579,
	326, 1579,
	327, 1579,
	328, 1579,
	329, 1579,
	330, 1579,
	332, 1579,
	334, 1579,
	335, 1579,
	336, 1579,
	337, 1579,
	338, 1579,
	339, 1579,
	340, 1579,
	341, 1579,
	342, 1579,
	345, 1579,
	346, 1579,
	347, 1579,
	348, 1579,
	349, 1579,
	350, 1579,
	351, 1579,
	352, 1579,
	353, 1579,
	466, 1579,
	-2, 554,
}

const yyPrivate = 57344

const yyLast = 42078

var yyAct = [...]int{
	682, 2284, 2920, 2938, 691, 2937, 2805, 1824, 2914, 2870,
	2867, 2871, 2640, 2463, 1778, 2851, 1359, 684, 2378, 2385,
	2764, 1758, 2026, 3, 1128, 2419, 675, 37, 772, 2336,
	2781, 1760, 750, 2672, 676, 1281, 2060, 2339, 2387, 2446,
	1888, 96, 2445, 2340, 1317, 600, 2337, 2544, 2538, 2095,
	597, 182, 2283, 2282, 182, 2677, 565, 182, 1018, 1782,
	685, 673, 580, 674, 182, 626, 2448, 1797, 2334, 2564,
	2118, 2087, 182, 2326, 2530, 1077, 1857, 598, 2156, 596,
	2229, 2468, 2186, 2158, 2157, 1813, 2107, 182, 799, 1878,
	1862, 1801, 38, 1413, 2079, 2062, 154, 1802, 1304, 1713,
	773, 952, 1714, 592, 754, 2246, 758, 1644, 36, 580,
	1738, 996, 580, 182, 580, 140, 1897, 2221, 752, 1877,
	1457, 1602, 1789, 1106, 775, 1864, 2150, 1441, 1348, 1930,
	978, 2126, 983, 796, 609, 1654, 1804, 1326, 95, 1284,
	1213, 1149, 1666, 604, 1621, 1551, 1547, 959, 989, 1448,
	1531, 956, 1875, 960, 91, 986, 1853, 984, 985, 1347,
	1331, 1345, 1710, 1126, 1120, 1783, 764, 1556, 1408, 123,
	124, 786, 760, 1433, 1061, 762, 97, 85, 76, 117,
	118, 587, 1216, 2814, 89, 2921, 2179, 1220, 759, 2416,
	1741, 1890, 98, 157, 1890, 1891, 1892, 2205, 2204, 1928,
	2177, 1020, 1150, 2623, 761, 77, 8, 2237, 2238, 1751,
	2941, 2947, 7, 102, 1034, 1035, 1517, 1038, 1039, 1040,
	1041, 536, 125, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 780, 1000,
	785, 119, 1023, 6, 953, 766, 90, 588, 184, 185,
	186, 2948, 1609, 751, 104, 105, 753, 108, 1755, 1756,
	114, 1608, 1607, 179, 1606, 1031, 531, 1605, 1604, 1587,
	793, 2437, 1596, 2058, 800, 774, 590, 2886, 591, 2322,
	2089, 969, 964, 999, 2434, 976, 746, 747, 748, 749,
	2934, 2896, 757, 2911, 2940, 2948, 975, 974, 2402, 2599,
	1614, 767, 1024, 1025, 1026, 2760, 2759, 1160, 1150, 1182,
	119, 2633, 78, 1022, 2634, 80, 1021, 2933, 1869, 2861,
	788, 789, 2924, 1036, 78, 2831, 2909, 1972, 2435, 178,
	2769, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1190,
	1192, 1193, 1867, 2641, 2852, 1916, 2860, 78, 2098, 78,
	2441, 2245, 2830, 120, 2501, 142, 1423, 2059, 2213, 1113,
	968, 1115, 2212, 970, 2375, 2376, 162, 1819, 1820, 184,
	185, 186, 2135, 2099, 119, 2134, 2374, 1349, 2136, 1350,
	973, 2236, 1070, 1071, 1969, 1818, 1096, 1101, 1102, 87,
	1084, 1970, 1123, 744, 743, 1085, 2690, 152, 2180, 1112,
	1114, 87, 141, 1083, 2806, 1082, 1156, 2147, 1097, 1148,
	178, 1084, 569, 1160, 1073, 2272, 1085, 1090, 1837, 1836,
	1757, 2182, 2465, 159, 87, 160, 87, 2541, 2492, 2490,
	569, 569, 569, 578, 120, 1595, 142, 2469, 971, 576,
	582, 129, 130, 151, 150, 177, 2222, 162, 1288, 2187,
	1936, 1507, 1898, 566, 2208, 2458, 1532, 973, 2438, 965,
	1948, 1060, 1949, 2459, 1950, 1931, 967, 966, 2923, 1117,
	1037, 977, 1942, 1939, 1941, 1940, 1943, 1944, 152, 1099,
	1100, 1866, 1103, 141, 1105, 1597, 1598, 1599, 1066, 2224,
	569, 2625, 1104, 1098, 2467, 1508, 1110, 1509, 1122, 552,
	1111, 2747, 1091, 2624, 159, 1937, 160, 2466, 1537, 1951,
	1116, 550, 1156, 1043, 1042, 971, 1935, 1933, 1901, 1007,
	1798, 980, 1435, 1436, 151, 150, 177, 87, 979, 2621,
	1016, 182, 980, 182, 1109, 1005, 182, 1015, 1064, 1014,
	1013, 146, 127, 153, 134, 126, 1012, 147, 148, 1011,
	1010, 547, 1291, 163, 1009, 2887, 972, 1004, 1934, 1426,
	561, 2928, 168, 135, 1017, 1194, 580, 1130, 580, 580,
	957, 2273, 1970, 2391, 955, 557, 2228, 138, 136, 131,
	132, 133, 137, 580, 580, 957, 2907, 957, 991, 128,
	992, 1155, 1152, 1153, 1154, 1159, 1161, 1158, 139, 1157,
	1447, 2063, 2065, 1548, 1094, 1876, 1151, 787, 1142, 1194,
	2225, 37, 570, 1080, 1922, 1086, 1087, 1088, 1089, 1544,
	998, 1136, 146, 1437, 153, 2918, 1434, 2409, 147, 148,
	570, 570, 570, 972, 163, 1027, 2207, 1421, 1124, 1125,
	2620, 2770, 998, 168, 537, 1420, 539, 553, 2241, 572,
	2813, 571, 543, 2178, 541, 545, 554, 546, 1419, 540,
	2197, 551, 1008, 2401, 542, 555, 556, 559, 562, 563,
	564, 560, 558, 2247, 549, 573, 1545, 2181, 1006, 155,
	1118, 2210, 1417, 1197, 1198, 1199, 1200, 973, 1059, 535,
	570, 530, 1984, 1205, 2802, 1208, 1918, 1155, 1152, 1153,
	1154, 1159, 1161, 1158, 1446, 1157, 2580, 2819, 2560, 1868,
	2542, 1538, 1151, 1784, 1785, 1539, 1540, 2131, 997, 2220,
	1279, 1131, 2219, 1001, 991, 1033, 1195, 1196, 998, 2094,
	2231, 1132, 1133, 1002, 2231, 2230, 2050, 1750, 81, 2230,
	997, 2939, 116, 1335, 182, 2829, 1201, 1260, 580, 580,
	1075, 1825, 1063, 1003, 2249, 1194, 1193, 149, 769, 2373,
	155, 2064, 1121, 2825, 182, 1019, 111, 1519, 1518, 1520,
	1521, 1522, 86, 1971, 1536, 1079, 1107, 998, 1294, 1292,
	2616, 2554, 1298, 580, 86, 1932, 1295, 182, 754, 77,
	143, 1145, 580, 144, 1557, 752, 1297, 1143, 580, 1541,
	1093, 1351, 1280, 1146, 2265, 2439, 2440, 86, 1218, 86,
	1219, 1095, 1667, 1072, 1069, 2170, 796, 1222, 2442, 1081,
	2259, 2258, 2257, 2251, 2686, 2255, 997, 2250, 1144, 2248,
	998, 1001, 991, 998, 2253, 1274, 112, 2916, 149, 574,
	2917, 1002, 2915, 2252, 1667, 1165, 1998, 2591, 1062, 1188,
	1189, 1191, 1190, 1192, 1193, 1296, 2590, 567, 1905, 95,
	2254, 2256, 1626, 972, 1280, 1266, 1267, 1268, 1269, 1270,
	1456, 143, 568, 1455, 144, 997, 1627, 1628, 1625, 1445,
	1285, 991, 994, 995, 1917, 957, 1164, 1165, 1166, 988,
	992, 1915, 1913, 156, 161, 158, 164, 165, 166, 167,
	169, 170, 171, 172, 184, 185, 186, 1007, 1646, 173,
	174, 175, 176, 98, 1005, 1078, 1533, 1910, 1534, 1108,
	2837, 1535, 1910, 1065, 1282, 2795, 2903, 2581, 997, 1293,
	751, 997, 1166, 1032, 991, 994, 995, 1558, 957, 1316,
	753, 2381, 988, 992, 1186, 1187, 1188, 1189, 1191, 1190,
	1192, 1193, 182, 2007, 1914, 2929, 1409, 800, 1346, 1912,
	1341, 1342, 2838, 987, 1336, 2931, 1418, 2796, 2755, 1313,
	1299, 1616, 1618, 1619, 156, 161, 158, 164, 165, 166,
	167, 169, 170, 171, 172, 1526, 2382, 580, 1647, 1443,
	173, 174, 175, 176, 87, 1617, 1524, 1452, 1976, 1977,
	1978, 1454, 2754, 2904, 580, 580, 2745, 580, 1624, 580,
	580, 2384, 580, 580, 580, 580, 580, 580, 2822, 1163,
	1514, 1164, 1165, 1311, 2647, 2379, 2648, 580, 2267, 1166,
	1671, 182, 1490, 2658, 1672, 1424, 1425, 2657, 2598, 2930,
	2597, 2417, 2389, 2390, 2407, 178, 2154, 182, 1525, 2380,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1168, 580, 1523,
	182, 2153, 1872, 1163, 1527, 1164, 1165, 791, 1512, 120,
	1511, 1546, 1510, 1501, 580, 1495, 182, 1492, 1503, 1491,
	1466, 2386, 162, 1513, 1166, 696, 697, 698, 1439, 184,
	185, 186, 182, 2588, 2015, 1493, 1494, 2821, 1432, 182,
	2799, 1499, 1500, 2798, 1320, 2797, 1449, 1449, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 580, 2750, 2685,
	1166, 2683, 2654, 2595, 1451, 1459, 2587, 1460, 1487, 1462,
	1464, 580, 580, 1468, 1470, 1472, 1474, 1476, 1416, 159,
	2470, 160, 2163, 1453, 2151, 1450, 2388, 1276, 1926, 182,
	1925, 1430, 1428, 1321, 1781, 1429, 1763, 1442, 2391, 1588,
	1163, 177, 1164, 1165, 1553, 1554, 1561, 1311, 1485, 1486,
	184, 185, 186, 1565, 2138, 1567, 1568, 1569, 1570, 184,
	185, 186, 1574, 1422, 184, 185, 186, 1515, 1886, 1502,
	1498, 1497, 1496, 1488, 1586, 1645, 1322, 1648, 1652, 1119,
	1651, 1651, 2780, 1311, 2462, 92, 1559, 1560, 1657, 580,
	101, 1135, 1622, 1649, 1649, 1163, 93, 1164, 1165, 1549,
	1564, 100, 1311, 99, 580, 580, 94, 1571, 1572, 1573,
	1629, 2777, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 975, 974, 2085, 2922, 1620,
	92, 1163, 2776, 1164, 1165, 2892, 1311, 94, 1630, 119,
	1563, 93, 2081, 683, 184, 185, 186, 2383, 1884, 163,
	1311, 1711, 2085, 2858, 1182, 2739, 2240, 94, 168, 2738,
	1584, 2639, 1585, 1166, 1311, 1742, 2096, 182, 2085, 2845,
	1311, 2188, 580, 2096, 1592, 1593, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1191, 1190, 1192, 1193, 2085, 2841, 2166,
	1166, 1833, 1623, 2553, 183, 1311, 182, 183, 2335, 580,
	183, 2833, 1311, 1711, 1768, 581, 1769, 183, 2553, 182,
	2085, 2815, 2368, 580, 1985, 183, 1166, 100, 182, 2127,
	182, 1970, 182, 182, 580, 2631, 2812, 580, 2555, 1744,
	183, 1162, 1166, 2824, 2498, 2515, 1311, 2104, 580, 1668,
	1742, 2103, 1994, 2464, 2553, 2496, 1311, 1834, 796, 2085,
	2746, 796, 581, 1746, 1747, 581, 183, 581, 2631, 1311,
	95, 2705, 2707, 2706, 2716, 2717, 2718, 2719, 2720, 2721,
	2722, 632, 2027, 1653, 2085, 155, 2085, 2629, 2104, 95,
	1659, 1660, 2128, 1774, 2877, 1985, 1743, 1910, 1311, 2558,
	1311, 2130, 1800, 580, 1163, 2104, 1164, 1165, 2875, 1311,
	1879, 1880, 1881, 2515, 1744, 1883, 1885, 2879, 2880, 2397,
	1843, 1844, 1845, 1846, 1993, 2389, 2390, 1162, 1311, 580,
	1911, 1163, 2876, 1164, 1165, 580, 1452, 2020, 1311, 1452,
	1762, 1452, 1745, 1828, 2310, 1748, 1749, 1909, 1838, 1829,
	1839, 1840, 1841, 1842, 1811, 2399, 2398, 1163, 766, 1164,
	1165, 1817, 1166, 2395, 2396, 2127, 1849, 1850, 1851, 1852,
	1899, 1795, 1776, 1163, 1859, 1164, 1165, 580, 1985, 1645,
	1832, 2020, 1773, 1793, 1645, 1645, 1182, 1910, 1983, 1166,
	2004, 1865, 2395, 2394, 1816, 1815, 2104, 1311, 2003, 800,
	1985, 1311, 800, 1970, 2206, 1831, 1830, 1910, 1183, 1184,
	1185, 1186, 1187, 1188, 1189, 1191, 1190, 1192, 1193, 1893,
	182, 1412, 2191, 2184, 2185, 2600, 1871, 182, 2128, 2388,
	1896, 2085, 2084, 1788, 182, 182, 1315, 1970, 182, 1000,
	182, 2391, 1412, 1411, 2035, 1311, 1753, 182, 101, 1449,
	1860, 1855, 1856, 1600, 182, 1543, 1870, 1874, 1343, 100,
	982, 99, 1989, 1904, 981, 1882, 1907, 756, 1908, 2883,
	94, 1988, 1357, 1356, 2848, 2601, 2602, 2603, 1919, 2420,
	182, 1902, 1903, 999, 1860, 580, 1921, 1906, 87, 2766,
	1318, 1923, 1924, 1163, 1920, 1164, 1165, 2736, 2697, 156,
	161, 158, 164, 165, 166, 167, 169, 170, 171, 172,
	2711, 2712, 1166, 2615, 2612, 173, 174, 175, 176, 2593,
	1163, 2507, 1164, 1165, 2506, 1961, 1962, 1414, 1311, 1324,
	1964, 1858, 1182, 2460, 2422, 1178, 2418, 1179, 2192, 1965,
	1854, 1929, 1166, 1848, 87, 1847, 1529, 1444, 1166, 1440,
	1622, 1180, 1181, 1177, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1191, 1190, 1192, 1193, 1790, 1791, 1980, 1410, 1982,
	113, 677, 1166, 627, 681, 629, 678, 679, 2160, 625,
	628, 680, 1954, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1191, 1190, 1192, 1193, 1323, 1981, 1184, 1185, 1186, 1187,
	1188, 1189, 1191, 1190, 1192, 1193, 2604, 1166, 630, 631,
	2704, 2708, 2709, 2710, 2713, 2714, 2715, 2723, 2725, 655,
	2724, 2726, 2727, 2728, 2731, 2732, 2733, 2734, 2729, 2730,
	2735, 2905, 1968, 2159, 1166, 1064, 2565, 2566, 1166, 2767,
	1478, 1481, 1869, 1163, 182, 1164, 1165, 1766, 1166, 2946,
	1623, 1590, 182, 2605, 2606, 2810, 2069, 580, 2944, 1651,
	1979, 2900, 2898, 580, 2571, 2056, 2872, 2568, 2414, 2413,
	2412, 2073, 1649, 1163, 580, 1164, 1165, 2335, 1166, 1163,
	2160, 1164, 1165, 2067, 183, 2889, 183, 1479, 1480, 183,
	1311, 1482, 1483, 1484, 2171, 1955, 1319, 182, 1997, 2570,
	2859, 182, 2357, 1163, 1166, 1164, 1165, 2358, 2667, 2354,
	2666, 2100, 2353, 1591, 37, 1780, 2137, 2743, 1772, 581,
	2575, 581, 581, 2120, 1182, 1166, 2559, 2355, 2315, 1744,
	2517, 2086, 2356, 2794, 2013, 1166, 581, 581, 1163, 2314,
	1164, 1165, 2359, 1995, 2113, 2114, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1191, 1190, 1192, 1193, 2676, 2665, 2678,
	580, 2617, 2546, 2082, 2324, 1163, 182, 1164, 1165, 1163,
	2545, 1164, 1165, 182, 2549, 1166, 770, 1542, 2393, 1163,
	1285, 1164, 1165, 2057, 771, 580, 1743, 2155, 742, 2148,
	2149, 2145, 580, 2164, 2327, 2329, 1452, 1452, 1029, 2183,
	1028, 580, 2083, 2330, 1134, 2119, 2478, 2513, 2159, 1163,
	2234, 1164, 1165, 2203, 2141, 2162, 2093, 2504, 2078, 2202,
	2047, 2048, 2125, 2199, 182, 182, 182, 182, 182, 1166,
	1663, 92, 2198, 120, 2129, 1163, 2132, 1164, 1165, 94,
	101, 2551, 93, 1865, 1664, 182, 182, 2139, 2926, 1166,
	2410, 100, 2142, 99, 1958, 1166, 1163, 2503, 1164, 1165,
	2811, 182, 94, 1309, 1305, 2152, 1163, 2762, 1164, 1165,
	2531, 1166, 2392, 1790, 1791, 2117, 1947, 1777, 1306, 2161,
	1645, 2109, 2112, 2113, 2114, 2110, 2167, 2111, 2115, 2172,
	2173, 2174, 1987, 2201, 2168, 778, 779, 183, 1946, 1432,
	1945, 581, 581, 1770, 1771, 1308, 1163, 1307, 1164, 1165,
	1974, 2044, 1166, 99, 2786, 2785, 2684, 183, 2264, 2682,
	1651, 92, 1651, 2193, 2194, 1651, 2200, 752, 94, 2681,
	1651, 2043, 93, 1649, 2313, 1649, 581, 2042, 1649, 100,
	183, 580, 2312, 1649, 2674, 581, 2613, 2550, 101, 2548,
	2423, 581, 2243, 2242, 2223, 1894, 1427, 580, 777, 100,
	1163, 99, 1164, 1165, 101, 2304, 2226, 2297, 2298, 2299,
	2300, 2287, 182, 2290, 2232, 100, 580, 2233, 2291, 2673,
	1163, 2539, 1164, 1165, 2260, 580, 1163, 2261, 1164, 1165,
	2096, 1166, 580, 580, 2041, 182, 182, 182, 182, 182,
	2902, 2901, 1163, 2081, 1164, 1165, 2274, 182, 2005, 2304,
	1764, 2244, 182, 2278, 2332, 182, 1337, 182, 758, 2317,
	182, 182, 182, 2347, 2341, 1328, 2292, 2293, 2294, 2295,
	2296, 106, 107, 2901, 2902, 2800, 2367, 2586, 1298, 2120,
	768, 103, 2318, 1163, 1166, 1164, 1165, 2305, 1166, 88,
	2303, 1, 1166, 2874, 548, 2408, 1166, 1754, 1283, 2285,
	1516, 2285, 182, 2316, 2285, 2306, 2307, 2308, 1506, 2285,
	2642, 2319, 1166, 2040, 1712, 580, 2763, 2309, 2428, 2426,
	1900, 2611, 1863, 580, 760, 990, 2348, 2369, 182, 2351,
	2370, 145, 2360, 2349, 2350, 1826, 2352, 2444, 182, 1827,
	759, 2854, 1309, 1305, 110, 183, 2371, 950, 2405, 2406,
	1553, 95, 109, 2346, 2433, 993, 182, 1306, 1092, 182,
	2364, 2365, 1163, 1895, 1164, 1165, 2039, 2377, 2632, 2479,
	2038, 2403, 2338, 2404, 2037, 2146, 1835, 2338, 2036, 2430,
	581, 2429, 1302, 1303, 1308, 2427, 1307, 1363, 1361, 1362,
	1360, 2452, 1365, 2451, 2030, 1364, 2006, 581, 581, 1594,
	581, 577, 581, 581, 2116, 581, 581, 581, 581, 581,
	581, 1865, 2443, 2455, 180, 1163, 2424, 1164, 1165, 1163,
	581, 1164, 1165, 1163, 183, 1164, 1165, 1163, 1352, 1164,
	1165, 1329, 1030, 2512, 538, 2471, 2474, 2473, 2476, 2477,
	183, 580, 182, 1163, 2400, 1164, 1165, 1927, 1166, 2482,
	2481, 581, 544, 183, 1206, 1589, 1166, 2311, 2488, 2133,
	797, 2425, 790, 1765, 2071, 2343, 2543, 581, 2323, 183,
	1166, 2485, 2486, 2325, 2487, 1166, 2088, 2489, 2328, 2491,
	1166, 2493, 2321, 2793, 2675, 183, 2846, 2143, 1166, 1325,
	1996, 1665, 183, 1805, 1615, 602, 2537, 601, 599, 182,
	2074, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	581, 2097, 2532, 2533, 1169, 686, 2061, 2589, 1166, 1338,
	2108, 2106, 182, 2540, 581, 581, 2105, 2562, 1956, 2547,
	2029, 1812, 2567, 2563, 2936, 2552, 2572, 2866, 2028, 1807,
	182, 1166, 183, 182, 182, 182, 1803, 2080, 610, 2578,
	2579, 2569, 2025, 580, 580, 603, 595, 2024, 2583, 2450,
	2209, 2461, 2023, 2211, 2144, 2576, 2457, 2618, 2619, 2577,
	2021, 1147, 1301, 2452, 589, 2451, 963, 2584, 2585, 1163,
	1662, 1164, 1165, 2768, 2594, 2817, 2596, 1163, 1973, 1164,
	1165, 2500, 1300, 1675, 1676, 580, 580, 580, 580, 2415,
	2017, 1163, 581, 1164, 1165, 2189, 1163, 1887, 1164, 1165,
	63, 1163, 41, 1164, 1165, 1703, 584, 581, 581, 1163,
	2885, 1164, 1165, 2016, 2622, 1138, 784, 32, 2626, 2627,
	2628, 2638, 2109, 2112, 2113, 2114, 2110, 31, 2111, 2115,
	666, 30, 2565, 2566, 2636, 2637, 29, 28, 1651, 1163,
	1651, 1164, 1165, 23, 22, 21, 20, 19, 25, 2653,
	18, 1649, 17, 1649, 2649, 182, 16, 2436, 2895, 2925,
	115, 50, 1163, 47, 1164, 1165, 2650, 45, 122, 121,
	183, 48, 44, 1067, 42, 581, 2670, 27, 26, 580,
	15, 580, 14, 13, 12, 11, 10, 2661, 2662, 9,
	5, 4, 579, 35, 34, 33, 1141, 2699, 24, 183,
	1651, 2691, 581, 2, 37, 2432, 2671, 2431, 2176, 1889,
	2341, 2680, 183, 1649, 2341, 2695, 581, 2693, 2679, 2689,
	2687, 183, 0, 183, 752, 183, 183, 581, 0, 0,
	581, 0, 0, 0, 0, 0, 580, 0, 0, 798,
	0, 581, 954, 0, 961, 0, 2700, 2701, 0, 182,
	2744, 0, 2703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2740, 0, 2742, 2741, 2748, 2285, 0, 2285,
	2756, 0, 0, 0, 0, 580, 2765, 0, 2757, 580,
	580, 2758, 0, 0, 0, 0, 581, 0, 0, 0,
	0, 0, 2751, 2752, 2753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2338, 580, 2787,
	2788, 0, 581, 0, 0, 2790, 0, 2789, 581, 0,
	2792, 0, 2804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2803, 2341, 0, 0, 2801, 0,
	0, 0, 0, 2807, 0, 0, 0, 580, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 0, 0, 0,
	581, 2809, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2826, 2816, 2820, 0, 0, 2823, 0, 0, 37,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 580, 0, 0, 0, 183, 183, 0,
	0, 183, 0, 183, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 580, 580, 183, 0, 0,
	2839, 0, 0, 0, 580, 2847, 2844, 0, 37, 0,
	2849, 0, 0, 182, 580, 2853, 0, 0, 0, 2765,
	2855, 0, 0, 183, 0, 2862, 0, 0, 581, 0,
	0, 0, 0, 2881, 2865, 2873, 2878, 0, 0, 0,
	0, 0, 2888, 0, 0, 0, 0, 0, 0, 0,
	0, 2899, 2897, 0, 580, 2894, 0, 0, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 2913, 2906, 0,
	1651, 2908, 2912, 2910, 0, 0, 0, 0, 0, 0,
	667, 2919, 0, 1649, 0, 0, 0, 0, 0, 0,
	2927, 0, 0, 0, 0, 2932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2935, 0, 0, 1651,
	2943, 0, 2942, 2945, 2338, 0, 1651, 0, 0, 0,
	0, 0, 1649, 0, 0, 0, 0, 0, 0, 1649,
	0, 181, 0, 0, 534, 0, 0, 575, 0, 0,
	0, 0, 0, 0, 534, 0, 0, 0, 0, 178,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 765, 0, 0,
	0, 0, 0, 120, 0, 0, 0, 0, 1696, 0,
	0, 0, 0, 783, 0, 783, 162, 183, 0, 0,
	0, 0, 0, 534, 0, 183, 0, 0, 0, 0,
	581, 0, 0, 0, 0, 0, 581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 159, 183, 160, 798, 0, 798, 798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1137, 1139, 177, 1688, 1677, 1678, 1679,
	1680, 1690, 1681, 1682, 1683, 1695, 1691, 1684, 1685, 1692,
	1693, 1694, 1686, 1687, 1689, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 581, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 581, 0,
	0, 0, 0, 0, 0, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 581, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1431, 0, 183, 183, 183,
	183, 183, 1277, 163, 0, 0, 0, 0, 120, 0,
	142, 0, 168, 0, 0, 0, 0, 0, 183, 183,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 533,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 0, 0, 0, 745, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 141, 1289, 1290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 958, 0,
	0, 0, 0, 1333, 0, 0, 1435, 1436, 151, 150,
	177, 0, 798, 0, 0, 0, 0, 0, 1353, 0,
	0, 0, 0, 0, 581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 581, 0,
	0, 0, 0, 0, 0, 581, 581, 0, 183, 183,
	183, 183, 183, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 183, 0, 0, 183, 0,
	183, 0, 0, 183, 183, 183, 146, 1437, 153, 0,
	1434, 0, 147, 148, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 534, 0, 534, 0, 0, 534, 0, 581, 0,
	0, 0, 0, 0, 0, 0, 581, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 183, 0, 0, 0, 0, 954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 0, 0, 0, 1458, 1458, 0, 1458, 0, 1458,
	1458, 0, 1467, 1458, 1458, 1458, 1458, 1458, 0, 0,
	0, 0, 0, 0, 155, 1277, 1277, 954, 0, 0,
	0, 0, 0, 156, 161, 158, 164, 165, 166, 167,
	169, 170, 171, 172, 0, 0, 0, 0, 0, 173,
	174, 175, 176, 0, 0, 0, 0, 0, 1528, 0,
	0, 0, 0, 0, 581, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 1550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 798, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 798, 798, 0, 0, 143, 0, 0, 144, 0,
	0, 0, 0, 0, 534, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 765, 0, 183, 183, 183, 0,
	0, 0, 0, 0, 0, 0, 581, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 1068, 0, 1074, 0,
	0, 1076, 0, 0, 0, 0, 0, 0, 0, 1658,
	0, 0, 0, 0, 0, 0, 1277, 0, 581, 581,
	581, 581, 0, 0, 1673, 1674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 0,
	0, 0, 0, 0, 173, 174, 175, 176, 0, 0,
	0, 798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 0, 581, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 798, 0, 0, 0,
	0, 0, 0, 0, 798, 0, 0, 798, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 581, 0, 0, 0, 0,
	1278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 961, 0, 0, 0, 0, 581, 0,
	0, 0, 581, 581, 0, 1278, 1278, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 1310, 0, 954,
	0, 0, 0, 0, 0, 961, 0, 1504, 0, 0,
	0, 581, 1340, 0, 0, 0, 0, 0, 0, 0,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 954, 0, 0,
	581, 0, 534, 0, 0, 0, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 183, 0, 0, 1575, 1576,
	534, 534, 534, 534, 534, 534, 534, 0, 2893, 0,
	581, 183, 0, 0, 0, 0, 0, 0, 1380, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 581, 581,
	0, 0, 0, 0, 0, 0, 0, 581, 0, 0,
	0, 0, 0, 0, 0, 1967, 183, 581, 0, 0,
	0, 0, 0, 783, 0, 0, 0, 0, 0, 0,
	783, 783, 0, 0, 0, 0, 1278, 1358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	783, 1552, 783, 783, 783, 783, 783, 0, 1368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 0, 0, 1489, 0, 0, 0,
	0, 0, 783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 765, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 1552, 0, 534, 0,
	534, 0, 534, 1814, 0, 0, 0, 0, 0, 1381,
	0, 798, 0, 0, 0, 0, 0, 1562, 0, 0,
	0, 0, 0, 0, 1566, 0, 0, 1779, 0, 0,
	0, 0, 0, 2075, 0, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1394, 1397, 1398,
	1399, 1400, 1401, 1402, 1603, 1403, 1404, 1405, 1406, 1407,
	1382, 1383, 1384, 1385, 1366, 1367, 1395, 0, 1369, 1380,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 0,
	0, 1379, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 2190, 0, 0, 0, 0, 0, 0, 0,
	0, 2195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 534, 534, 0, 0, 534, 0,
	1959, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	0, 0, 1396, 0, 534, 0, 0, 0, 0, 1368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 0, 0, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 1799, 0, 0, 1603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 0, 1277, 0,
	0, 1277, 0, 0, 0, 0, 1277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1381, 798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 783, 0, 0, 0, 1458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2320, 0, 0, 0,
	0, 0, 0, 0, 0, 798, 0, 0, 0, 1277,
	0, 0, 2345, 1458, 1277, 0, 0, 0, 1394, 1397,
	1398, 1399, 1400, 1401, 1402, 0, 1403, 1404, 1405, 1406,
	1407, 1382, 1383, 1384, 1385, 1366, 1367, 1395, 0, 1369,
	0, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	783, 783, 1379, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1552, 0, 0, 534, 0, 0, 0, 782, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 954, 0, 0, 1277, 0,
	0, 0, 0, 1779, 0, 1603, 0, 1312, 1314, 0,
	0, 0, 1938, 0, 0, 0, 0, 534, 0, 1952,
	1953, 534, 0, 1957, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 593, 0, 0, 1963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1966, 0, 0, 776, 0,
	0, 0, 0, 1396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 2175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 534, 534, 534, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 534, 0, 0, 0,
	0, 693, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 1779, 0, 1278, 0, 1278, 0,
	0, 1278, 0, 0, 0, 0, 1278, 0, 0, 755,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	783, 0, 0, 0, 0, 0, 0, 0, 0, 755,
	0, 0, 0, 0, 0, 2643, 2644, 2645, 2646, 0,
	0, 0, 0, 0, 0, 962, 2124, 0, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1278,
	0, 0, 0, 0, 1278, 534, 534, 534, 534, 534,
	0, 0, 0, 0, 1277, 0, 1277, 2361, 0, 0,
	0, 0, 534, 0, 0, 1504, 0, 534, 0, 0,
	534, 2372, 1552, 0, 0, 0, 0, 0, 0, 0,
	0, 2169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1277, 0, 0, 0, 0, 2692,
	0, 2694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 534, 2214,
	2215, 2216, 2217, 2218, 0, 0, 0, 0, 534, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	1603, 2227, 0, 0, 0, 0, 534, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 2235, 0, 0, 0,
	0, 0, 798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 1670,
	0, 0, 0, 0, 0, 2783, 0, 0, 0, 2783,
	2783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 1312, 1752,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 1167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 1277, 0, 2840, 0, 0, 0, 0, 0, 0,
	534, 0, 0, 534, 534, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 798, 798, 0, 0, 0,
	0, 0, 0, 0, 2863, 0, 0, 2411, 0, 0,
	0, 0, 0, 0, 2868, 0, 0, 0, 0, 0,
	0, 0, 593, 1873, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 2472, 0, 2868, 2475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1278, 0, 1278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1127, 0, 1127,
	1127, 0, 0, 0, 0, 1504, 1327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 1278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 755, 1202, 1203, 1204, 2536, 1207, 0,
	1209, 1210, 1211, 1212, 0, 1215, 1217, 1217, 0, 1217,
	1221, 1221, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1504,
	1261, 1262, 1263, 1264, 1265, 78, 39, 40, 80, 1221,
	1221, 1221, 1221, 1221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 2592, 0, 43,
	69, 70, 0, 67, 71, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 2607, 0, 0, 2608, 2609,
	2610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 1990, 0, 1991, 1992, 0,
	0, 56, 0, 0, 0, 0, 2000, 1287, 0, 2001,
	2002, 0, 87, 755, 0, 0, 0, 755, 0, 0,
	0, 1415, 0, 755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2008, 2009, 2010, 2011,
	2012, 0, 2014, 0, 0, 0, 0, 0, 2018, 0,
	2019, 0, 1504, 0, 2022, 0, 0, 0, 0, 0,
	0, 0, 2031, 2032, 2033, 2034, 0, 0, 534, 0,
	0, 0, 0, 0, 0, 2045, 2046, 0, 0, 0,
	0, 0, 0, 2051, 2052, 2053, 2054, 2055, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2068, 1278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1555, 0,
	0, 0, 0, 1504, 0, 46, 49, 52, 51, 54,
	0, 66, 0, 0, 75, 72, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 55, 83, 82,
	0, 0, 64, 65, 53, 0, 0, 0, 0, 0,
	73, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 1611, 1612, 1613, 0, 0, 0, 0, 0,
	57, 58, 0, 59, 60, 61, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1655, 1656, 0, 0, 0, 0, 0, 0,
	1661, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1697, 1698, 1699, 1700, 1701,
	1702, 1704, 1708, 1709, 593, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2271, 0, 593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 2286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 0,
	0, 0, 1786, 1787, 0, 2301, 2302, 0, 0, 0,
	87, 0, 1127, 1127, 0, 86, 687, 694, 695, 696,
	697, 698, 688, 690, 0, 0, 0, 689, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	692, 699, 700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2070, 0, 2344,
	694, 695, 0, 0, 0, 0, 1650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2362, 2363, 0, 0,
	0, 0, 0, 0, 0, 0, 2453, 2454, 0, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 0,
	0, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2480, 0, 0,
	0, 0, 0, 0, 2484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2494, 2495,
	2497, 2499, 0, 1806, 0, 0, 0, 0, 2505, 0,
	0, 0, 0, 2509, 2510, 2511, 0, 0, 0, 0,
	2514, 0, 0, 0, 0, 0, 2516, 0, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 0,
	0, 2529, 0, 0, 0, 0, 0, 2534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 962, 0, 0, 0, 0, 0,
	2556, 2557, 0, 0, 2561, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2573, 2574, 0, 0, 962, 0, 0, 677,
	0, 0, 681, 0, 678, 679, 0, 0, 0, 680,
	0, 0, 0, 0, 0, 0, 1999, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2630, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 687, 694, 695, 696, 697,
	698, 688, 690, 0, 0, 0, 689, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 692,
	699, 700, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 694, 695, 0,
	0, 0, 0, 1650, 0, 0, 2659, 1327, 0, 0,
	2660, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2453, 2454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2771,
	2772, 2773, 0, 2774, 2775, 0, 0, 0, 0, 2778,
	0, 2779, 2782, 0, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2239, 0, 0, 0, 0, 755,
	2808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2262, 2263, 0, 0, 0, 2266, 0, 2101,
	2102, 0, 2268, 2269, 2270, 0, 0, 0, 2121, 0,
	2122, 2123, 0, 0, 2275, 2276, 2277, 0, 0, 1715,
	2279, 0, 2280, 2281, 0, 0, 0, 2288, 2289, 0,
	0, 0, 0, 0, 0, 1715, 1715, 1715, 1715, 1715,
	593, 593, 593, 593, 0, 0, 2828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2834,
	0, 0, 0, 0, 0, 2835, 2836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2196, 0, 0, 0, 0, 0, 0,
	0, 0, 2366, 0, 0, 0, 0, 0, 2884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2890, 0, 0, 0, 2891, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2502, 0, 0, 0,
	0, 0, 0, 2508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2342, 0, 79, 0, 0, 1806, 1806, 1806, 1806,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2121, 755, 0, 0, 0, 1806, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2483, 2635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2651, 0, 2652, 0, 0,
	0, 0, 2655, 2656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2696, 0, 0, 2698, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2702, 0, 2582, 0, 0, 0, 0, 0, 0,
	0, 0, 2737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2791, 593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2664, 0, 2668, 2669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 2342, 0, 79,
	0, 2342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 593, 0, 0,
	0, 0, 0, 2749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 2843, 0,
	932, 917, 451, 79, 863, 935, 832, 851, 945, 854,
	857, 899, 811, 877, 371, 848, 803, 836, 806, 843,
	807, 834, 865, 244, 831, 919, 881, 934, 326, 241,
	813, 837, 385, 853, 193, 901, 427, 228, 336, 333,
	458, 255, 247, 243, 227, 282, 343, 383, 445, 377,
	941, 330, 887, 0, 436, 356, 0, 0, 0, 867,
	923, 875, 913, 862, 900, 821, 886, 936, 849, 896,
	937, 288, 226, 192, 368, 437, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 2856, 0, 2857, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 845, 893, 931,
	846, 895, 239, 286, 246, 238, 455, 942, 922, 810,
	874, 930, 0, 0, 209, 933, 869, 0, 898, 0,
	948, 805, 889, 0, 808, 812, 944, 926, 840, 249,
	0, 0, 0, 0, 0, 0, 0, 866, 876, 910,
	860, 0, 0, 0, 0, 0, 0, 0, 838, 0,
	885, 0, 0, 0, 817, 809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 864, 0, 0,
	0, 820, 0, 839, 911, 0, 802, 269, 814, 357,
	231, 0, 915, 925, 861, 491, 929, 859, 858, 905,
	818, 921, 852, 325, 816, 294, 188, 205, 0, 850,
	367, 409, 415, 920, 835, 844, 229, 842, 413, 381,
	474, 213, 257, 406, 386, 411, 393, 260, 884, 903,
	412, 331, 460, 400, 471, 492, 493, 237, 361, 482,
	449, 488, 506, 206, 234, 375, 442, 477, 433, 354,
	456, 457, 293, 432, 267, 191, 329, 498, 204, 421,
	221, 211, 462, 480, 262, 404, 197, 444, 469, 218,
	424, 0, 0, 508, 199, 467, 441, 350, 290, 291,
	198, 0, 405, 242, 265, 232, 370, 464, 465, 230,
	509, 208, 487, 201, 1129, 486, 363, 459, 468, 351,
	341, 200, 466, 349, 340, 296, 315, 316, 253, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 478, 0,
	195, 0, 438, 479, 510, 214, 215, 216, 830, 252,
	256, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 916, 454, 472, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 505, 504, 362, 279, 434, 295, 332,
	908, 947, 380, 414, 219, 476, 435, 825, 829, 823,
	890, 824, 879, 880, 826, 938, 939, 940, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 0, 912, 819, 0,
	827, 828, 0, 918, 927, 928, 529, 342, 426, 473,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 883, 187, 202,
	328, 943, 402, 261, 507, 485, 481, 804, 822, 236,
	833, 841, 0, 847, 855, 856, 868, 870, 871, 872,
	873, 891, 892, 894, 902, 904, 907, 909, 914, 924,
	946, 189, 190, 203, 212, 222, 235, 250, 258, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 408, 416,
	417, 418, 419, 420, 422, 423, 428, 429, 430, 431,
	439, 443, 461, 463, 475, 489, 494, 271, 470, 495,
	0, 337, 882, 888, 339, 254, 274, 285, 897, 484,
	440, 207, 410, 263, 196, 225, 210, 233, 248, 251,
	289, 348, 355, 384, 388, 268, 245, 223, 407, 220,
	425, 446, 447, 448, 450, 352, 240, 387, 878, 906,
	335, 452, 453, 281, 353, 0, 0, 932, 917, 451,
	0, 863, 935, 832, 851, 945, 854, 857, 899, 811,
	877, 371, 848, 803, 836, 806, 843, 807, 834, 865,
	244, 831, 919, 881, 934, 326, 241, 813, 837, 385,
	853, 193, 901, 427, 228, 336, 333, 458, 255, 247,
	243, 227, 282, 343, 383, 445, 377, 941, 330, 887,
	0, 436, 356, 0, 0, 0, 867, 923, 875, 913,
	862, 900, 821, 886, 936, 849, 896, 937, 288, 226,
	192, 368, 437, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 311, 320, 319, 300, 301, 303,
	305, 310, 317, 323, 845, 893, 931, 846, 895, 239,
	286, 246, 238, 455, 942, 922, 810, 874, 930, 0,
	0, 209, 933, 869, 0, 898, 0, 948, 805, 889,
	0, 808, 812, 944, 926, 840, 249, 0, 0, 0,
	0, 0, 0, 0, 866, 876, 910, 860, 0, 0,
	0, 0, 0, 2373, 0, 838, 0, 885, 0, 0,
	0, 817, 809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 864, 0, 0, 0, 820, 0,
	839, 911, 0, 802, 269, 814, 357, 231, 0, 915,
	925, 861, 491, 929, 859, 858, 905, 818, 921, 852,
	325, 816, 294, 188, 205, 0, 850, 367, 409, 415,
	920, 835, 844, 229, 842, 413, 381, 474, 213, 257,
	406, 386, 411, 393, 260, 884, 903, 412, 331, 460,
	400, 471, 492, 493, 237, 361, 482, 449, 488, 506,
	206, 234, 375, 442, 477, 433, 354, 456, 457, 293,
	432, 267, 191, 329, 498, 204, 421, 221, 211, 462,
	480, 262, 404, 197, 444, 469, 218, 424, 0, 0,
	508, 199, 467, 441, 350, 290, 291, 198, 0, 405,
	242, 265, 232, 370, 464, 465, 230, 509, 208, 487,
	201, 1129, 486, 363, 459, 468, 351, 341, 200, 466,
	349, 340, 296, 315, 316, 253, 276, 398, 334, 399,
	277, 359, 358, 360, 194, 478, 0, 195, 0, 438,
	479, 510, 214, 215, 216, 830, 252, 256, 264, 266,
	272, 273, 280, 327, 374, 397, 395, 401, 916, 454,
	472, 483, 490, 496, 497, 499, 500, 501, 502, 503,
	505, 504, 362, 279, 434, 295, 332, 908, 947, 380,
	414, 219, 476, 435, 825, 829, 823, 890, 824, 879,
	880, 826, 938, 939, 940, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 0, 912, 819, 0, 827, 828, 0,
	918, 927, 928, 529, 342, 426, 473, 297, 309, 312,
	302, 321, 0, 322, 298, 299, 304, 306, 307, 308,
	313, 314, 318, 324, 883, 187, 202, 328, 943, 402,
	261, 507, 485, 481, 804, 822, 236, 833, 841, 0,
	847, 855, 856, 868, 870, 871, 872, 873, 891, 892,
	894, 902, 904, 907, 909, 914, 924, 946, 189, 190,
	203, 212, 222, 235, 250, 258, 270, 275, 278, 283,
	284, 287, 292, 338, 344, 345, 346, 347, 364, 365,
	366, 369, 372, 373, 376, 378, 379, 382, 389, 390,
	391, 392, 394, 396, 403, 408, 416, 417, 418, 419,
	420, 422, 423, 428, 429, 430, 431, 439, 443, 461,
	463, 475, 489, 494, 271, 470, 495, 0, 337, 882,
	888, 339, 254, 274, 285, 897, 484, 440, 207, 410,
	263, 196, 225, 210, 233, 248, 251, 289, 348, 355,
	384, 388, 268, 245, 223, 407, 220, 425, 446, 447,
	448, 450, 352, 240, 387, 878, 906, 335, 452, 453,
	281, 353, 0, 0, 932, 917, 451, 0, 863, 935,
	832, 851, 945, 854, 857, 899, 811, 877, 371, 848,
	803, 836, 806, 843, 807, 834, 865, 244, 831, 919,
	881, 934, 326, 241, 813, 837, 385, 853, 193, 901,
	427, 228, 336, 333, 458, 255, 247, 243, 227, 282,
	343, 383, 445, 377, 941, 330, 887, 0, 436, 356,
	0, 0, 0, 867, 923, 875, 913, 862, 900, 821,
	886, 936, 849, 896, 937, 288, 226, 192, 368, 437,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 845, 893, 931, 846, 895, 239, 286, 246, 238,
	455, 942, 922, 810, 874, 930, 0, 0, 209, 933,
	869, 0, 898, 0, 948, 805, 889, 0, 808, 812,
	944, 926, 840, 249, 0, 0, 0, 0, 0, 0,
	0, 866, 876, 910, 860, 0, 0, 0, 0, 0,
	2331, 0, 838, 0, 885, 0, 0, 0, 817, 809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 864, 0, 0, 0, 820, 0, 839, 911, 0,
	802, 269, 814, 357, 231, 0, 915, 925, 861, 491,
	929, 859, 858, 905, 818, 921, 852, 325, 816, 294,
	188, 205, 0, 850, 367, 409, 415, 920, 835, 844,
	229, 842, 413, 381, 474, 213, 257, 406, 386, 411,
	393, 260, 884, 903, 412, 331, 460, 400, 471, 492,
	493, 237, 361, 482, 449, 488, 506, 206, 234, 375,
	442, 477, 433, 354, 456, 457, 293, 432, 267, 191,
	329, 498, 204, 421, 221, 211, 462, 480, 262, 404,
	197, 444, 469, 218, 424, 0, 0, 508, 199, 467,
	441, 350, 290, 291, 198, 0, 405, 242, 265, 232,
	370, 464, 465, 230, 509, 208, 487, 201, 1129, 486,
	363, 459, 468, 351, 341, 200, 466, 349, 340, 296,
	315, 316, 253, 276, 398, 334, 399, 277, 359, 358,
	360, 194, 478, 0, 195, 0, 438, 479, 510, 214,
	215, 216, 830, 252, 256, 264, 266, 272, 273, 280,
	327, 374, 397, 395, 401, 916, 454, 472, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 505, 504, 362,
	279, 434, 295, 332, 908, 947, 380, 414, 219, 476,
	435, 825, 829, 823, 890, 824, 879, 880, 826, 938,
	939, 940, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	0, 912, 819, 0, 827, 828, 0, 918, 927, 928,
	529, 342, 426, 473, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 883, 187, 202, 328, 943, 402, 261, 507, 485,
	481, 804, 822, 236, 833, 841, 0, 847, 855, 856,
	868, 870, 871, 872, 873, 891, 892, 894, 902, 904,
	907, 909, 914, 924, 946, 189, 190, 203, 212, 222,
	235, 250, 258, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 408, 416, 417, 418, 419, 420, 422, 423,
	428, 429, 430, 431, 439, 443, 461, 463, 475, 489,
	494, 271, 470, 495, 0, 337, 882, 888, 339, 254,
	274, 285, 897, 484, 440, 207, 410, 263, 196, 225,
	210, 233, 248, 251, 289, 348, 355, 384, 388, 268,
	245, 223, 407, 220, 425, 446, 447, 448, 450, 352,
	240, 387, 878, 906, 335, 452, 453, 281, 353, 0,
	0, 932, 917, 451, 0, 863, 935, 832, 851, 945,
	854, 857, 899, 811, 877, 371, 848, 803, 836, 806,
	843, 807, 834, 865, 244, 831, 919, 881, 934, 326,
	241, 813, 837, 385, 853, 193, 901, 427, 228, 336,
	333, 458, 255, 247, 243, 227, 282, 343, 383, 445,
	377, 941, 330, 887, 0, 436, 356, 0, 0, 0,
	867, 923, 875, 913, 862, 900, 821, 886, 936, 849,
	896, 937, 288, 226, 192, 368, 437, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 311, 320,
	319, 300, 301, 303, 305, 310, 317, 323, 845, 893,
	931, 846, 895, 239, 286, 246, 238, 455, 942, 922,
	810, 874, 930, 0, 0, 209, 933, 869, 0, 898,
	0, 948, 805, 889, 0, 808, 812, 944, 926, 840,
	249, 0, 0, 0, 0, 0, 0, 0, 866, 876,
	910, 860, 0, 0, 0, 0, 0, 1794, 0, 838,
	0, 885, 0, 0, 0, 817, 809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 864, 0,
	0, 0, 820, 0, 839, 911, 0, 802, 269, 814,
	357, 231, 0, 915, 925, 861, 491, 929, 859, 858,
	905, 818, 921, 852, 325, 816, 294, 188, 205, 0,
	850, 367, 409, 415, 920, 835, 844, 229, 842, 413,
	381, 474, 213, 257, 406, 386, 411, 393, 260, 884,
	903, 412, 331, 460, 400, 471, 492, 493, 237, 361,
	482, 449, 488, 506, 206, 234, 375, 442, 477, 433,
	354, 456, 457, 293, 432, 267, 191, 329, 498, 204,
	421, 221, 211, 462, 480, 262, 404, 197, 444, 469,
	218, 424, 0, 0, 508, 199, 467, 441, 350, 290,
	291, 198, 0, 405, 242, 265, 232, 370, 464, 465,
	230, 509, 208, 487, 201, 1129, 486, 363, 459, 468,
	351, 341, 200, 466, 349, 340, 296, 315, 316, 253,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 478,
	0, 195, 0, 438, 479, 510, 214, 215, 216, 830,
	252, 256, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 916, 454, 472, 483, 490, 496, 497, 499,
	500, 501, 502, 503, 505, 504, 362, 279, 434, 295,
	332, 908, 947, 380, 414, 219, 476, 435, 825, 829,
	823, 890, 824, 879, 880, 826, 938, 939, 940, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 0, 912, 819,
	0, 827, 828, 0, 918, 927, 928, 529, 342, 426,
	473, 297, 309, 312, 302, 321, 0, 322, 298, 299,
	304, 306, 307, 308, 313, 314, 318, 324, 883, 187,
	202, 328, 943, 402, 261, 507, 485, 481, 804, 822,
	236, 833, 841, 0, 847, 855, 856, 868, 870, 871,
	872, 873, 891, 892, 894, 902, 904, 907, 909, 914,
	924, 946, 189, 190, 203, 212, 222, 235, 250, 258,
	270, 275, 278, 283, 284, 287, 292, 338, 344, 345,
	346, 347, 364, 365, 366, 369, 372, 373, 376, 378,
	379, 382, 389, 390, 391, 392, 394, 396, 403, 408,
	416, 417, 418, 419, 420, 422, 423, 428, 429, 430,
	431, 439, 443, 461, 463, 475, 489, 494, 271, 470,
	495, 0, 337, 882, 888, 339, 254, 274, 285, 897,
	484, 440, 207, 410, 263, 196, 225, 210, 233, 248,
	251, 289, 348, 355, 384, 388, 268, 245, 223, 407,
	220, 425, 446, 447, 448, 450, 352, 240, 387, 878,
	906, 335, 452, 453, 281, 353, 0, 0, 932, 917,
	451, 0, 863, 935, 832, 851, 945, 854, 857, 899,
	811, 877, 371, 848, 803, 836, 806, 843, 807, 834,
	865, 244, 831, 919, 881, 934, 326, 241, 813, 837,
	385, 853, 193, 901, 427, 228, 336, 333, 458, 255,
	247, 243, 227, 282, 343, 383, 445, 377, 941, 330,
	887, 0, 436, 356, 0, 0, 0, 867, 923, 875,
	913, 862, 900, 821, 886, 936, 849, 896, 937, 288,
	226, 192, 368, 437, 259, 0, 87, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 311, 320, 319, 300, 301,
	303, 305, 310, 317, 323, 845, 893, 931, 846, 895,
	239, 286, 246, 238, 455, 942, 922, 810, 874, 930,
	0, 0, 209, 933, 869, 0, 898, 0, 948, 805,
	889, 0, 808, 812, 944, 926, 840, 249, 0, 0,
	0, 0, 0, 0, 0, 866, 876, 910, 860, 0,
	0, 0, 0, 0, 0, 0, 838, 0, 885, 0,
	0, 0, 817, 809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 864, 0, 0, 0, 820,
	0, 839, 911, 0, 802, 269, 814, 357, 231, 0,
	915, 925, 861, 491, 929, 859, 858, 905, 818, 921,
	852, 325, 816, 294, 188, 205, 0, 850, 367, 409,
	415, 920, 835, 844, 229, 842, 413, 381, 474, 213,
	257, 406, 386, 411, 393, 260, 884, 903, 412, 331,
	460, 400, 471, 492, 493, 237, 361, 482, 449, 488,
	506, 206, 234, 375, 442, 477, 433, 354, 456, 457,
	293, 432, 267, 191, 329, 498, 204, 421, 221, 211,
	462, 480, 262, 404, 197, 444, 469, 218, 424, 0,
	0, 508, 199, 467, 441, 350, 290, 291, 198, 0,
	405, 242, 265, 232, 370, 464, 465, 230, 509, 208,
	487, 201, 1129, 486, 363, 459, 468, 351, 341, 200,
	466, 349, 340, 296, 315, 316, 253, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 478, 0, 195, 0,
	438, 479, 510, 214, 215, 216, 830, 252, 256, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 916,
	454, 472, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 505, 504, 362, 279, 434, 295, 332, 908, 947,
	380, 414, 219, 476, 435, 825, 829, 823, 890, 824,
	879, 880, 826, 938, 939, 940, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 0, 912, 819, 0, 827, 828,
	0, 918, 927, 928, 529, 342, 426, 473, 297, 309,
	312, 302, 321, 0, 322, 298, 299, 304, 306, 307,
	308, 313, 314, 318, 324, 883, 187, 202, 328, 943,
	402, 261, 507, 485, 481, 804, 822, 236, 833, 841,
	0, 847, 855, 856, 868, 870, 871, 872, 873, 891,
	892, 894, 902, 904, 907, 909, 914, 924, 946, 189,
	190, 203, 212, 222, 235, 250, 258, 270, 275, 278,
	283, 284, 287, 292, 338, 344, 345, 346, 347, 364,
	365, 366, 369, 372, 373, 376, 378, 379, 382, 389,
	390, 391, 392, 394, 396, 403, 408, 416, 417, 418,
	419, 420, 422, 423, 428, 429, 430, 431, 439, 443,
	461, 463, 475, 489, 494, 271, 470, 495, 0, 337,
	882, 888, 339, 254, 274, 285, 897, 484, 440, 207,
	410, 263, 196, 225, 210, 233, 248, 251, 289, 348,
	355, 384, 388, 268, 245, 223, 407, 220, 425, 446,
	447, 448, 450, 352, 240, 387, 878, 906, 335, 452,
	453, 281, 353, 0, 0, 932, 917, 451, 0, 863,
	935, 832, 851, 945, 854, 857, 899, 811, 877, 371,
	848, 803, 836, 806, 843, 807, 834, 865, 244, 831,
	919, 881, 934, 326, 241, 813, 837, 385, 853, 193,
	901, 427, 228, 336, 333, 458, 255, 247, 243, 227,
	282, 343, 383, 445, 377, 941, 330, 887, 0, 436,
	356, 0, 0, 0, 867, 923, 875, 913, 862, 900,
	821, 886, 936, 849, 896, 937, 288, 226, 192, 368,
	437, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 845, 893, 931, 846, 895, 239, 286, 246,
	238, 455, 942, 922, 810, 874, 930, 0, 0, 209,
	933, 869, 0, 898, 0, 948, 805, 889, 0, 808,
	812, 944, 926, 840, 249, 0, 0, 0, 0, 0,
	0, 0, 866, 876, 910, 860, 0, 0, 0, 0,
	0, 0, 0, 838, 0, 885, 0, 0, 0, 817,
	809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 864, 0, 0, 0, 820, 0, 839, 911,
	0, 802, 269, 814, 357, 231, 0, 915, 925, 861,
	491, 929, 859, 858, 905, 818, 921, 852, 325, 816,
	294, 188, 205, 0, 850, 367, 409, 415, 920, 835,
	844, 229, 842, 413, 381, 474, 213, 257, 406, 386,
	411, 393, 260, 884, 903, 412, 331, 460, 400, 471,
	492, 493, 237, 361, 482, 449, 488, 506, 206, 234,
	375, 442, 477, 433, 354, 456, 457, 293, 432, 267,
	191, 329, 498, 204, 421, 221, 211, 462, 480, 262,
	404, 197, 444, 469, 218, 424, 0, 0, 508, 199,
	467, 441, 350, 290, 291, 198, 0, 405, 242, 265,
	232, 370, 464, 465, 230, 509, 208, 487, 201, 1129,
	486, 363, 459, 468, 351, 341, 200, 466, 349, 340,
	296, 315, 316, 253, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 478, 0, 195, 0, 438, 479, 510,
	214, 215, 216, 830, 252, 256, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 916, 454, 472, 483,
	490, 496, 497, 499, 500, 501, 502, 503, 505, 504,
	362, 279, 434, 295, 332, 908, 947, 380, 414, 219,
	476, 435, 825, 829, 823, 890, 824, 879, 880, 826,
	938, 939, 940, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 0, 912, 819, 0, 827, 828, 0, 918, 927,
	928, 529, 342, 426, 473, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 883, 187, 202, 328, 943, 402, 261, 507,
	485, 481, 804, 822, 236, 833, 841, 0, 847, 855,
	856, 868, 870, 871, 872, 873, 891, 892, 894, 902,
	904, 907, 909, 914, 924, 946, 189, 190, 203, 212,
	222, 235, 250, 258, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 408, 416, 417, 418, 419, 420, 422,
	423, 428, 429, 430, 431, 439, 443, 461, 463, 475,
	489, 494, 271, 470, 495, 0, 337, 882, 888, 339,
	254, 274, 285, 897, 484, 440, 207, 410, 263, 196,
	225, 210, 233, 248, 251, 289, 348, 355, 384, 388,
	268, 245, 223, 407, 220, 425, 446, 447, 448, 450,
	352, 240, 387, 878, 906, 335, 452, 453, 281, 353,
	0, 0, 932, 917, 451, 0, 863, 935, 832, 851,
	945, 854, 857, 899, 811, 877, 371, 848, 803, 836,
	806, 843, 807, 834, 865, 244, 831, 919, 881, 934,
	326, 241, 813, 837, 385, 853, 193, 901, 427, 228,
	336, 333, 458, 255, 247, 243, 227, 282, 343, 383,
	445, 377, 941, 330, 887, 0, 436, 356, 0, 0,
	0, 867, 923, 875, 913, 862, 900, 821, 886, 936,
	849, 896, 937, 288, 226, 192, 368, 437, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 311,
	320, 319, 300, 301, 303, 305, 310, 317, 323, 845,
	893, 931, 846, 895, 239, 286, 246, 238, 455, 942,
	922, 810, 874, 930, 0, 0, 949, 933, 869, 0,
	898, 0, 948, 805, 889, 0, 808, 812, 944, 926,
	840, 249, 0, 0, 0, 0, 0, 0, 0, 866,
	876, 910, 860, 0, 0, 0, 0, 0, 0, 0,
	838, 0, 885, 0, 0, 0, 817, 809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 864,
	0, 0, 0, 820, 0, 839, 911, 0, 802, 269,
	814, 357, 231, 0, 915, 925, 861, 491, 929, 859,
	858, 905, 818, 921, 852, 325, 816, 294, 188, 205,
	0, 850, 367, 409, 415, 920, 835, 844, 229, 842,
	413, 381, 474, 213, 257, 406, 386, 411, 393, 260,
	884, 903, 412, 331, 460, 400, 471, 492, 493, 237,
	361, 482, 449, 488, 506, 206, 234, 375, 442, 477,
	433, 354, 456, 457, 293, 432, 267, 191, 329, 498,
	204, 421, 221, 211, 462, 480, 262, 404, 197, 444,
	469, 218, 424, 0, 0, 508, 199, 467, 441, 350,
	290, 291, 198, 0, 405, 242, 265, 232, 370, 464,
	465, 230, 509, 208, 487, 201, 815, 486, 363, 459,
	468, 351, 341, 200, 466, 349, 340, 296, 315, 316,
	253, 276, 398, 334, 399, 277, 359, 358, 360, 194,
	478, 0, 195, 0, 438, 479, 510, 214, 215, 216,
	830, 252, 256, 264, 266, 272, 273, 280, 327, 374,
	397, 395, 401, 916, 454, 472, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 505, 504, 801, 795, 794,
	295, 332, 908, 947, 380, 414, 219, 476, 435, 825,
	829, 823, 890, 824, 879, 880, 826, 938, 939, 940,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 0, 912,
	819, 0, 827, 828, 0, 918, 927, 928, 529, 342,
	426, 473, 297, 309, 312, 302, 321, 0, 322, 298,
	299, 304, 306, 307, 308, 313, 314, 318, 324, 883,
	187, 202, 328, 943, 402, 261, 507, 485, 481, 804,
	822, 236, 833, 841, 0, 847, 855, 856, 868, 870,
	871, 872, 873, 891, 892, 894, 902, 904, 907, 909,
	914, 924, 946, 189, 190, 203, 212, 222, 235, 250,
	258, 270, 275, 278, 283, 284, 287, 292, 338, 344,
	345, 346, 347, 364, 365, 366, 369, 372, 373, 376,
	378, 379, 382, 389, 390, 391, 392, 394, 396, 403,
	408, 416, 417, 418, 419, 420, 422, 423, 428, 429,
	430, 431, 439, 443, 461, 463, 475, 489, 494, 271,
	470, 495, 0, 337, 882, 888, 339, 254, 274, 285,
	897, 484, 440, 207, 410, 263, 196, 225, 210, 233,
	248, 251, 289, 348, 355, 384, 388, 268, 245, 223,
	407, 220, 425, 446, 447, 448, 450, 352, 240, 387,
	878, 906, 335, 452, 453, 281, 353, 0, 0, 932,
	917, 451, 0, 863, 935, 832, 851, 945, 854, 857,
	899, 811, 877, 371, 848, 803, 836, 806, 843, 807,
	834, 865, 244, 831, 919, 881, 934, 326, 241, 813,
	837, 385, 853, 193, 901, 427, 228, 336, 333, 458,
	255, 247, 243, 227, 282, 343, 383, 445, 377, 941,
	330, 887, 0, 436, 356, 0, 0, 0, 867, 923,
	875, 913, 862, 900, 821, 886, 936, 849, 896, 937,
	288, 226, 192, 368, 437, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 845, 893, 931, 846,
	895, 239, 286, 246, 238, 455, 942, 922, 810, 874,
	930, 0, 0, 949, 933, 869, 0, 898, 0, 948,
	805, 889, 0, 808, 812, 944, 926, 840, 249, 0,
	0, 0, 0, 0, 0, 0, 866, 876, 910, 860,
	0, 0, 0, 0, 0, 0, 0, 838, 0, 885,
	0, 0, 0, 817, 809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 864, 0, 0, 0,
	820, 0, 839, 911, 0, 802, 269, 814, 357, 231,
	0, 915, 925, 861, 491, 929, 859, 858, 905, 818,
	921, 852, 325, 816, 294, 188, 205, 0, 850, 367,
	409, 415, 920, 835, 844, 229, 842, 413, 381, 474,
	213, 257, 406, 386, 411, 393, 260, 884, 903, 412,
	331, 460, 400, 471, 492, 493, 237, 361, 482, 449,
	488, 506, 206, 234, 375, 442, 477, 433, 354, 456,
	457, 293, 432, 267, 191, 329, 498, 204, 421, 221,
	211, 462, 480, 262, 404, 197, 444, 1344, 218, 424,
	0, 0, 508, 199, 467, 441, 350, 290, 291, 198,
	0, 405, 242, 265, 232, 370, 464, 465, 230, 509,
	208, 487, 201, 815, 486, 363, 459, 468, 351, 341,
	200, 466, 349, 340, 296, 315, 316, 253, 276, 398,
	334, 399, 277, 359, 358, 360, 194, 478, 0, 195,
	0, 438, 479, 510, 214, 215, 216, 830, 252, 256,
	264, 266, 272, 273, 280, 327, 374, 397, 395, 401,
	916, 454, 472, 483, 490, 496, 497, 499, 500, 501,
	502, 503, 505, 504, 801, 795, 794, 295, 332, 908,
	947, 380, 414, 219, 476, 435, 825, 829, 823, 890,
	824, 879, 880, 826, 938, 939, 940, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 0, 912, 819, 0, 827,
	828, 0, 918, 927, 928, 529, 342, 426, 473, 297,
	309, 312, 302, 321, 0, 322, 298, 299, 304, 306,
	307, 308, 313, 314, 318, 324, 883, 187, 202, 328,
	943, 402, 261, 507, 485, 481, 804, 822, 236, 833,
	841, 0, 847, 855, 856, 868, 870, 871, 872, 873,
	891, 892, 894, 902, 904, 907, 909, 914, 924, 946,
	189, 190, 203, 212, 222, 235, 250, 258, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 408, 416, 417,
	418, 419, 420, 422, 423, 428, 429, 430, 431, 439,
	443, 461, 463, 475, 489, 494, 271, 470, 495, 0,
	337, 882, 888, 339, 254, 274, 285, 897, 484, 440,
	207, 410, 263, 196, 225, 210, 233, 248, 251, 289,
	348, 355, 384, 388, 268, 245, 223, 407, 220, 425,
	446, 447, 448, 450, 352, 240, 387, 878, 906, 335,
	452, 453, 281, 353, 0, 0, 932, 917, 451, 0,
	863, 935, 832, 851, 945, 854, 857, 899, 811, 877,
	371, 848, 803, 836, 806, 843, 807, 834, 865, 244,
	831, 919, 881, 934, 326, 241, 813, 837, 385, 853,
	193, 901, 427, 228, 336, 333, 458, 255, 247, 243,
	227, 282, 343, 383, 445, 377, 941, 330, 887, 0,
	436, 356, 0, 0, 0, 867, 923, 875, 913, 862,
	900, 821, 886, 936, 849, 896, 937, 288, 226, 192,
	368, 437, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 311, 320, 319, 300, 301, 303, 305,
	310, 317, 323, 845, 893, 931, 846, 895, 239, 286,
	246, 238, 455, 942, 922, 810, 874, 930, 0, 0,
	949, 933, 869, 0, 898, 0, 948, 805, 889, 0,
	808, 812, 944, 926, 840, 249, 0, 0, 0, 0,
	0, 0, 0, 866, 876, 910, 860, 0, 0, 0,
	0, 0, 0, 0, 838, 0, 885, 0, 0, 0,
	817, 809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 864, 0, 0, 0, 820, 0, 839,
	911, 0, 802, 269, 814, 357, 231, 0, 915, 925,
	861, 491, 929, 859, 858, 905, 818, 921, 852, 325,
	816, 294, 188, 205, 0, 850, 367, 409, 415, 920,
	835, 844, 229, 842, 413, 381, 474, 213, 257, 406,
	386, 411, 393, 260, 884, 903, 412, 331, 460, 400,
	471, 492, 493, 237, 361, 482, 449, 488, 506, 206,
	234, 375, 442, 477, 433, 354, 456, 457, 293, 432,
	267, 191, 329, 498, 204, 421, 221, 211, 462, 480,
	262, 404, 197, 444, 792, 218, 424, 0, 0, 508,
	199, 467, 441, 350, 290, 291, 198, 0, 405, 242,
	265, 232, 370, 464, 465, 230, 509, 208, 487, 201,
	815, 486, 363, 459, 468, 351, 341, 200, 466, 349,
	340, 296, 315, 316, 253, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 478, 0, 195, 0, 438, 479,
	510, 214, 215, 216, 830, 252, 256, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 916, 454, 472,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 505,
	504, 801, 795, 794, 295, 332, 908, 947, 380, 414,
	219, 476, 435, 825, 829, 823, 890, 824, 879, 880,
	826, 938, 939, 940, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 0, 912, 819, 0, 827, 828, 0, 918,
	927, 928, 529, 342, 426, 473, 297, 309, 312, 302,
	321, 0, 322, 298, 299, 304, 306, 307, 308, 313,
	314, 318, 324, 883, 187, 202, 328, 943, 402, 261,
	507, 485, 481, 804, 822, 236, 833, 841, 0, 847,
	855, 856, 868, 870, 871, 872, 873, 891, 892, 894,
	902, 904, 907, 909, 914, 924, 946, 189, 190, 203,
	212, 222, 235, 250, 258, 270, 275, 278, 283, 284,
	287, 292, 338, 344, 345, 346, 347, 364, 365, 366,
	369, 372, 373, 376, 378, 379, 382, 389, 390, 391,
	392, 394, 396, 403, 408, 416, 417, 418, 419, 420,
	422, 423, 428, 429, 430, 431, 439, 443, 461, 463,
	475, 489, 494, 271, 470, 495, 0, 337, 882, 888,
	339, 254, 274, 285, 897, 484, 440, 207, 410, 263,
	196, 225, 210, 233, 248, 251, 289, 348, 355, 384,
	388, 268, 245, 223, 407, 220, 425, 446, 447, 448,
	450, 352, 240, 387, 878, 906, 335, 452, 453, 281,
	353, 0, 0, 0, 0, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	1739, 0, 611, 0, 0, 0, 244, 616, 0, 0,
	0, 326, 241, 0, 1740, 385, 0, 193, 0, 427,
	228, 336, 333, 458, 255, 247, 243, 227, 282, 343,
	383, 445, 377, 623, 330, 0, 0, 436, 356, 0,
	0, 0, 0, 0, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 368, 437, 259,
	0, 87, 0, 0, 184, 185, 186, 687, 694, 695,
	696, 697, 698, 688, 690, 0, 0, 217, 689, 224,
	634, 636, 635, 645, 646, 647, 648, 649, 650, 651,
	632, 692, 699, 700, 0, 239, 286, 246, 238, 455,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 594, 608, 0, 622, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 605, 606, 781,
	0, 0, 0, 671, 0, 607, 0, 0, 615, 701,
	702, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	617, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 357, 231, 0, 670, 0, 0, 491, 0,
	0, 668, 0, 0, 0, 0, 325, 0, 294, 188,
	205, 0, 0, 367, 409, 415, 0, 0, 0, 229,
	0, 413, 381, 474, 213, 257, 406, 386, 411, 393,
	260, 0, 0, 412, 331, 460, 400, 471, 492, 493,
	237, 361, 482, 449, 488, 506, 206, 234, 375, 442,
	477, 433, 354, 456, 457, 293, 432, 267, 191, 329,
	498, 204, 421, 221, 211, 462, 480, 262, 404, 197,
	444, 469, 218, 424, 0, 0, 508, 199, 467, 441,
	350, 290, 291, 198, 0, 405, 242, 265, 232, 370,
	464, 465, 230, 509, 208, 487, 201, 0, 486, 363,
	459, 468, 351, 341, 200, 466, 349, 340, 296, 640,
	641, 253, 276, 398, 334, 399, 277, 359, 358, 360,
	194, 478, 0, 195, 0, 438, 479, 510, 214, 215,
	216, 0, 252, 256, 264, 266, 272, 273, 280, 327,
	374, 397, 395, 401, 0, 454, 472, 483, 490, 496,
	497, 499, 500, 501, 502, 503, 505, 504, 362, 279,
	434, 295, 332, 0, 0, 380, 414, 219, 476, 435,
	677, 669, 627, 681, 629, 678, 679, 624, 625, 628,
	680, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 0,
	672, 614, 613, 0, 620, 621, 0, 630, 631, 633,
	637, 638, 639, 642, 643, 644, 652, 654, 655, 653,
	656, 657, 658, 661, 662, 663, 664, 659, 660, 665,
	612, 187, 202, 328, 0, 402, 261, 507, 485, 481,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 270, 275, 278, 283, 284, 287, 292, 338,
	344, 345, 346, 347, 364, 365, 366, 369, 372, 373,
	376, 378, 379, 382, 389, 390, 391, 392, 394, 396,
	403, 408, 416, 417, 418, 419, 420, 422, 423, 428,
	429, 430, 431, 439, 443, 461, 463, 475, 489, 494,
	271, 470, 495, 0, 337, 0, 0, 339, 254, 274,
	285, 0, 484, 440, 207, 410, 263, 196, 225, 210,
	233, 248, 251, 289, 348, 355, 384, 388, 268, 245,
	223, 407, 220, 425, 446, 447, 448, 450, 352, 240,
	387, 0, 353, 335, 452, 453, 281, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 611, 0, 0, 0, 244, 616,
	0, 0, 0, 326, 241, 0, 0, 385, 0, 193,
	0, 427, 228, 336, 333, 458, 255, 247, 243, 227,
	282, 343, 383, 445, 377, 623, 330, 0, 0, 436,
	356, 0, 0, 0, 0, 0, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	437, 259, 0, 87, 0, 0, 184, 185, 186, 687,
	694, 695, 696, 697, 698, 688, 690, 0, 0, 217,
	689, 224, 634, 636, 635, 645, 646, 647, 648, 649,
	650, 651, 632, 692, 699, 700, 0, 239, 286, 246,
	238, 455, 0, 0, 1705, 1706, 1707, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 594, 608, 0,
	622, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 605,
	606, 0, 0, 0, 0, 671, 0, 607, 0, 0,
	615, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 231, 0, 670, 0, 0,
	491, 0, 0, 668, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 409, 415, 0, 0,
	0, 229, 0, 413, 381, 474, 213, 257, 406, 386,
	411, 393, 260, 0, 0, 412, 331, 460, 400, 471,
	492, 493, 237, 361, 482, 449, 488, 506, 206, 234,
	375, 442, 477, 433, 354, 456, 457, 293, 432, 267,
	191, 329, 498, 204, 421, 221, 211, 462, 480, 262,
	404, 197, 444, 469, 218, 424, 0, 0, 508, 199,
	467, 441, 350, 290, 291, 198, 0, 405, 242, 265,
	232, 370, 464, 465, 230, 509, 208, 487, 201, 0,
	486, 363, 459, 468, 351, 341, 200, 466, 349, 340,
	296, 640, 641, 253, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 478, 0, 195, 0, 438, 479, 510,
	214, 215, 216, 0, 252, 256, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 454, 472, 483,
	490, 496, 497, 499, 500, 501, 502, 503, 505, 504,
	362, 279, 434, 295, 332, 0, 0, 380, 414, 219,
	476, 435, 677, 669, 627, 681, 629, 678, 679, 624,
	625, 628, 680, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 0, 672, 614, 613, 0, 620, 621, 0, 630,
	631, 633, 637, 638, 639, 642, 643, 644, 652, 654,
	655, 653, 656, 657, 658, 661, 662, 663, 664, 659,
	660, 665, 612, 187, 202, 328, 0, 402, 261, 507,
	485, 481, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 408, 416, 417, 418, 419, 420, 422,
	423, 428, 429, 430, 431, 439, 443, 461, 463, 475,
	489, 494, 271, 470, 495, 0, 337, 0, 0, 339,
	254, 274, 285, 0, 484, 440, 207, 410, 263, 196,
	225, 210, 233, 248, 251, 289, 348, 355, 384, 388,
	268, 245, 223, 407, 220, 425, 446, 447, 448, 450,
	352, 240, 387, 0, 353, 335, 452, 453, 281, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 611, 0, 0, 0,
	244, 616, 0, 0, 0, 326, 241, 0, 0, 385,
	0, 193, 0, 427, 228, 336, 333, 458, 255, 247,
	243, 227, 282, 343, 383, 445, 377, 623, 330, 0,
	0, 436, 356, 0, 0, 0, 0, 0, 618, 619,
	0, 0, 0, 0, 0, 0, 1821, 0, 288, 226,
	192, 368, 437, 259, 0, 87, 0, 0, 184, 185,
	186, 687, 694, 695, 696, 697, 698, 688, 690, 0,
	0, 217, 689, 224, 634, 636, 635, 645, 646, 647,
	648, 649, 650, 651, 632, 692, 699, 700, 1822, 239,
	286, 246, 238, 455, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 594,
	608, 0, 622, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 605, 606, 0, 0, 0, 0, 671, 0, 607,
	0, 0, 615, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 357, 231, 0, 670,
	0, 0, 491, 0, 0, 668, 0, 0, 0, 0,
	325, 0, 294, 188, 205, 0, 0, 367, 409, 415,
	0, 0, 0, 229, 0, 413, 381, 474, 213, 257,
	406, 386, 411, 393, 260, 0, 0, 412, 331, 460,
	400, 471, 492, 493, 237, 361, 482, 449, 488, 506,
	206, 234, 375, 442, 477, 433, 354, 456, 457, 293,
	432, 267, 191, 329, 498, 204, 421, 221, 211, 462,
	480, 262, 404, 197, 444, 469, 218, 424, 0, 0,
	508, 199, 467, 441, 350, 290, 291, 198, 0, 405,
	242, 265, 232, 370, 464, 465, 230, 509, 208, 487,
	201, 0, 486, 363, 459, 468, 351, 341, 200, 466,
	349, 340, 296, 640, 641, 253, 276, 398, 334, 399,
	277, 359, 358, 360, 194, 478, 0, 195, 0, 438,
	479, 510, 214, 215, 216, 0, 252, 256, 264, 266,
	272, 273, 280, 327, 374, 397, 395, 401, 0, 454,
	472, 483, 490, 496, 497, 499, 500, 501, 502, 503,
	505, 504, 362, 279, 434, 295, 332, 0, 0, 380,
	414, 219, 476, 435, 677, 669, 627, 681, 629, 678,
	679, 624, 625, 628, 680, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 0, 672, 614, 613, 0, 620, 621,
	0, 630, 631, 633, 637, 638, 639, 642, 643, 644,
	652, 654, 655, 653, 656, 657, 658, 661, 662, 663,
	664, 659, 660, 665, 612, 187, 202, 328, 0, 402,
	261, 507, 485, 481, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 270, 275, 278, 283,
	284, 287, 292, 338, 344, 345, 346, 347, 364, 365,
	366, 369, 372, 373, 376, 378, 379, 382, 389, 390,
	391, 392, 394, 396, 403, 408, 416, 417, 418, 419,
	420, 422, 423, 428, 429, 430, 431, 439, 443, 461,
	463, 475, 489, 494, 271, 470, 495, 0, 337, 0,
	0, 339, 254, 274, 285, 0, 484, 440, 207, 410,
	263, 196, 225, 210, 233, 248, 251, 289, 348, 355,
	384, 388, 268, 245, 223, 407, 220, 425, 446, 447,
	448, 450, 352, 240, 387, 0, 0, 335, 452, 453,
	281, 353, 0, 0, 0, 78, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 611, 0, 0, 0, 244, 616, 0,
	0, 0, 326, 241, 0, 0, 385, 0, 193, 0,
	427, 228, 336, 333, 458, 255, 247, 243, 227, 282,
	343, 383, 445, 377, 623, 330, 0, 0, 436, 356,
	0, 0, 0, 0, 0, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 437,
	259, 0, 87, 0, 0, 184, 185, 186, 687, 694,
	695, 696, 697, 698, 688, 690, 0, 0, 217, 689,
	224, 634, 636, 635, 645, 646, 647, 648, 649, 650,
	651, 632, 692, 699, 700, 0, 239, 286, 246, 238,
	455, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 594, 608, 0, 622,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 605, 606,
	0, 0, 0, 0, 671, 0, 607, 0, 0, 615,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 231, 0, 670, 0, 0, 491,
	0, 0, 668, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 409, 415, 0, 0, 0,
	229, 0, 413, 381, 474, 213, 257, 406, 386, 411,
	393, 260, 0, 0, 412, 331, 460, 400, 471, 492,
	493, 237, 361, 482, 449, 488, 506, 206, 234, 375,
	442, 477, 433, 354, 456, 457, 293, 432, 267, 191,
	329, 498, 204, 421, 221, 211, 462, 480, 262, 404,
	197, 444, 469, 218, 424, 0, 0, 508, 199, 467,
	441, 350, 290, 291, 198, 0, 405, 242, 265, 232,
	370, 464, 465, 230, 509, 208, 487, 201, 0, 486,
	363, 459, 468, 351, 341, 200, 466, 349, 340, 296,
	640, 641, 253, 276, 398, 334, 399, 277, 359, 358,
	360, 194, 478, 0, 195, 0, 438, 479, 510, 214,
	215, 216, 0, 252, 256, 264, 266, 272, 273, 280,
	327, 374, 397, 395, 401, 0, 454, 472, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 505, 504, 362,
	279, 434, 295, 332, 0, 0, 380, 414, 219, 476,
	435, 677, 669, 627, 681, 629, 678, 679, 624, 625,
	628, 680, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	0, 672, 614, 613, 0, 620, 621, 0, 630, 631,
	633, 637, 638, 639, 642, 643, 644, 652, 654, 655,
	653, 656, 657, 658, 661, 662, 663, 664, 659, 660,
	665, 612, 187, 202, 328, 86, 402, 261, 507, 485,
	481, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 408, 416, 417, 418, 419, 420, 422, 423,
	428, 429, 430, 431, 439, 443, 461, 463, 475, 489,
	494, 271, 470, 495, 0, 337, 0, 0, 339, 254,
	274, 285, 0, 484, 440, 207, 410, 263, 196, 225,
	210, 233, 248, 251, 289, 348, 355, 384, 388, 268,
	245, 223, 407, 220, 425, 446, 447, 448, 450, 352,
	240, 387, 0, 353, 335, 452, 453, 281, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 611, 0, 0, 0, 244,
	616, 0, 0, 0, 326, 241, 0, 0, 385, 0,
	193, 0, 427, 228, 336, 333, 458, 255, 247, 243,
	227, 282, 343, 383, 445, 377, 623, 330, 0, 0,
	436, 356, 0, 0, 0, 0, 0, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 226, 192,
	368, 437, 259, 0, 87, 0, 0, 184, 185, 186,
	687, 694, 695, 696, 697, 698, 688, 690, 0, 0,
	217, 689, 224, 634, 636, 635, 645, 646, 647, 648,
	649, 650, 651, 632, 692, 699, 700, 0, 239, 286,
	246, 238, 455, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 594, 608,
	0, 622, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	605, 606, 0, 0, 0, 0, 671, 0, 607, 0,
	0, 615, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 357, 231, 0, 670, 0,
	0, 491, 0, 0, 668, 0, 0, 0, 0, 325,
	0, 294, 188, 205, 0, 0, 367, 409, 415, 0,
	0, 0, 229, 0, 413, 381, 474, 213, 257, 406,
	386, 411, 393, 260, 2850, 0, 412, 331, 460, 400,
	471, 492, 493, 237, 361, 482, 449, 488, 506, 206,
	234, 375, 442, 477, 433, 354, 456, 457, 293, 432,
	267, 191, 329, 498, 204, 421, 221, 211, 462, 480,
	262, 404, 197, 444, 469, 218, 424, 0, 0, 508,
	199, 467, 441, 350, 290, 291, 198, 0, 405, 242,
	265, 232, 370, 464, 465, 230, 509, 208, 487, 201,
	0, 486, 363, 459, 468, 351, 341, 200, 466, 349,
	340, 296, 640, 641, 253, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 478, 0, 195, 0, 438, 479,
	510, 214, 215, 216, 0, 252, 256, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 454, 472,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 505,
	504, 362, 279, 434, 295, 332, 0, 0, 380, 414,
	219, 476, 435, 677, 669, 627, 681, 629, 678, 679,
	624, 625, 628, 680, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 0, 672, 614, 613, 0, 620, 621, 0,
	630, 631, 633, 637, 638, 639, 642, 643, 644, 652,
	654, 655, 653, 656, 657, 658, 661, 662, 663, 664,
	659, 660, 665, 612, 187, 202, 328, 0, 402, 261,
	507, 485, 481, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 270, 275, 278, 283, 284,
	287, 292, 338, 344, 345, 346, 347, 364, 365, 366,
	369, 372, 373, 376, 378, 379, 382, 389, 390, 391,
	392, 394, 396, 403, 408, 416, 417, 418, 419, 420,
	422, 423, 428, 429, 430, 431, 439, 443, 461, 463,
	475, 489, 494, 271, 470, 495, 0, 337, 0, 0,
	339, 254, 274, 285, 0, 484, 440, 207, 410, 263,
	196, 225, 210, 233, 248, 251, 289, 348, 355, 384,
	388, 268, 245, 223, 407, 220, 425, 446, 447, 448,
	450, 352, 240, 387, 0, 353, 335, 452, 453, 281,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 611, 0, 0,
	0, 244, 616, 0, 0, 0, 326, 241, 0, 0,
	385, 0, 193, 0, 427, 228, 336, 333, 458, 255,
	247, 243, 227, 282, 343, 383, 445, 377, 623, 330,
	0, 0, 436, 356, 0, 0, 0, 0, 0, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	226, 192, 368, 437, 259, 0, 87, 0, 1311, 184,
	185, 186, 687, 694, 695, 696, 697, 698, 688, 690,
	0, 0, 217, 689, 224, 634, 636, 635, 645, 646,
	647, 648, 649, 650, 651, 632, 692, 699, 700, 0,
	239, 286, 246, 238, 455, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	594, 608, 0, 622, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 605, 606, 0, 0, 0, 0, 671, 0,
	607, 0, 0, 615, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 357, 231, 0,
	670, 0, 0, 491, 0, 0, 668, 0, 0, 0,
	0, 325, 0, 294, 188, 205, 0, 0, 367, 409,
	415, 0, 0, 0, 229, 0, 413, 381, 474, 213,
	257, 406, 386, 411, 393, 260, 0, 0, 412, 331,
	460, 400, 471, 492, 493, 237, 361, 482, 449, 488,
	506, 206, 234, 375, 442, 477, 433, 354, 456, 457,
	293, 432, 267, 191, 329, 498, 204, 421, 221, 211,
	462, 480, 262, 404, 197, 444, 469, 218, 424, 0,
	0, 508, 199, 467, 441, 350, 290, 291, 198, 0,
	405, 242, 265, 232, 370, 464, 465, 230, 509, 208,
	487, 201, 0, 486, 363, 459, 468, 351, 341, 200,
	466, 349, 340, 296, 640, 641, 253, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 478, 0, 195, 0,
	438, 479, 510, 214, 215, 216, 0, 252, 256, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 0,
	454, 472, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 505, 504, 362, 279, 434, 295, 332, 0, 0,
	380, 414, 219, 476, 435, 677, 669, 627, 681, 629,
	678, 679, 624, 625, 628, 680, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 0, 672, 614, 613, 0, 620,
	621, 0, 630, 631, 633, 637, 638, 639, 642, 643,
	644, 652, 654, 655, 653, 656, 657, 658, 661, 662,
	663, 664, 659, 660, 665, 612, 187, 202, 328, 0,
	402, 261, 507, 485, 481, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 270, 275, 278,
	283, 284, 287, 292, 338, 344, 345, 346, 347, 364,
	365, 366, 369, 372, 373, 376, 378, 379, 382, 389,
	390, 391, 392, 394, 396, 403, 408, 416, 417, 418,
	419, 420, 422, 423, 428, 429, 430, 431, 439, 443,
	461, 463, 475, 489, 494, 271, 470, 495, 0, 337,
	0, 0, 339, 254, 274, 285, 0, 484, 440, 207,
	410, 263, 196, 225, 210, 233, 248, 251, 289, 348,
	355, 384, 388, 268, 245, 223, 407, 220, 425, 446,
	447, 448, 450, 352, 240, 387, 0, 353, 335, 452,
	453, 281, 451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 611,
	0, 0, 0, 244, 616, 0, 0, 0, 326, 241,
	0, 0, 385, 0, 193, 0, 427, 228, 336, 333,
	458, 255, 247, 243, 227, 282, 343, 383, 445, 377,
	623, 330, 0, 0, 436, 356, 0, 0, 0, 0,
	0, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 437, 259, 0, 87, 0,
	0, 184, 185, 186, 687, 694, 695, 696, 697, 698,
	688, 690, 0, 0, 217, 689, 224, 634, 636, 635,
	645, 646, 647, 648, 649, 650, 651, 632, 692, 699,
	700, 0, 239, 286, 246, 238, 455, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 594, 608, 0, 622, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 605, 606, 781, 0, 0, 0,
	671, 0, 607, 0, 0, 615, 701, 702, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	231, 0, 670, 0, 0, 491, 0, 0, 668, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 409, 415, 0, 0, 0, 229, 0, 413, 381,
	474, 213, 257, 406, 386, 411, 393, 260, 0, 0,
	412, 331, 460, 400, 471, 492, 493, 237, 361, 482,
	449, 488, 506, 206, 234, 375, 442, 477, 433, 354,
	456, 457, 293, 432, 267, 191, 329, 498, 204, 421,
	221, 211, 462, 480, 262, 404, 197, 444, 469, 218,
	424, 0, 0, 508, 199, 467, 441, 350, 290, 291,
	198, 0, 405, 242, 265, 232, 370, 464, 465, 230,
	509, 208, 487, 201, 0, 486, 363, 459, 468, 351,
	341, 200, 466, 349, 340, 296, 640, 641, 253, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 478, 0,
	195, 0, 438, 479, 510, 214, 215, 216, 0, 252,
	256, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 454, 472, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 505, 504, 362, 279, 434, 295, 332,
	0, 0, 380, 414, 219, 476, 435, 677, 669, 627,
	681, 629, 678, 679, 624, 625, 628, 680, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 0, 672, 614, 613,
	0, 620, 621, 0, 630, 631, 633, 637, 638, 639,
	642, 643, 644, 652, 654, 655, 653, 656, 657, 658,
	661, 662, 663, 664, 659, 660, 665, 612, 187, 202,
	328, 0, 402, 261, 507, 485, 481, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 408, 416,
	417, 418, 419, 420, 422, 423, 428, 429, 430, 431,
	439, 443, 461, 463, 475, 489, 494, 271, 470, 495,
	0, 337, 0, 0, 339, 254, 274, 285, 0, 484,
	440, 207, 410, 263, 196, 225, 210, 233, 248, 251,
	289, 348, 355, 384, 388, 268, 245, 223, 407, 220,
	425, 446, 447, 448, 450, 352, 240, 387, 0, 353,
	335, 452, 453, 281, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 611, 0, 0, 0, 244, 616, 0, 0, 0,
	326, 241, 0, 0, 385, 0, 193, 0, 427, 228,
	336, 333, 458, 255, 247, 243, 227, 282, 343, 383,
	445, 377, 623, 330, 0, 0, 436, 356, 0, 0,
	0, 0, 0, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 368, 437, 259, 0,
	87, 0, 0, 184, 185, 186, 687, 694, 695, 696,
	697, 698, 688, 690, 0, 0, 217, 689, 224, 634,
	636, 635, 645, 646, 647, 648, 649, 650, 651, 632,
	692, 699, 700, 0, 239, 286, 246, 238, 455, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 594, 608, 0, 622, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 605, 606, 0, 0,
	0, 0, 671, 0, 607, 0, 0, 615, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 357, 231, 0, 670, 0, 0, 491, 0, 0,
	668, 0, 0, 0, 0, 325, 0, 294, 188, 205,
	0, 0, 367, 409, 415, 0, 0, 0, 229, 0,
	413, 381, 474, 213, 257, 406, 386, 411, 393, 260,
	0, 0, 412, 331, 460, 400, 471, 492, 493, 237,
	361, 482, 449, 488, 506, 206, 234, 375, 442, 477,
	433, 354, 456, 457, 293, 432, 267, 191, 329, 498,
	204, 421, 221, 211, 462, 480, 262, 404, 197, 444,
	469, 218, 424, 0, 0, 508, 199, 467, 441, 350,
	290, 291, 198, 0, 405, 242, 265, 232, 370, 464,
	465, 230, 509, 208, 487, 201, 0, 486, 363, 459,
	468, 351, 341, 200, 466, 349, 340, 296, 640, 641,
	253, 276, 398, 334, 399, 277, 359, 358, 360, 194,
	478, 0, 195, 0, 438, 479, 510, 214, 215, 216,
	0, 252, 256, 264, 266, 272, 273, 280, 327, 374,
	397, 395, 401, 0, 454, 472, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 505, 504, 362, 279, 434,
	295, 332, 0, 0, 380, 414, 219, 476, 435, 677,
	669, 627, 681, 629, 678, 679, 624, 625, 628, 680,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 0, 672,
	614, 613, 0, 620, 621, 0, 630, 631, 633, 637,
	638, 639, 642, 643, 644, 652, 654, 655, 653, 656,
	657, 658, 661, 662, 663, 664, 659, 660, 665, 612,
	187, 202, 328, 0, 402, 261, 507, 485, 481, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 270, 275, 278, 283, 284, 287, 292, 338, 344,
	345, 346, 347, 364, 365, 366, 369, 372, 373, 376,
	378, 379, 382, 389, 390, 391, 392, 394, 396, 403,
	408, 416, 417, 418, 419, 420, 422, 423, 428, 429,
	430, 431, 439, 443, 461, 463, 475, 489, 494, 271,
	470, 495, 0, 337, 0, 0, 339, 254, 274, 285,
	0, 484, 440, 207, 410, 263, 196, 225, 210, 233,
	248, 251, 289, 348, 355, 384, 388, 268, 245, 223,
	407, 220, 425, 446, 447, 448, 450, 352, 240, 387,
	0, 353, 335, 452, 453, 281, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 611, 0, 0, 0, 244, 616, 0,
	0, 0, 326, 241, 0, 0, 385, 0, 193, 0,
	427, 228, 336, 333, 458, 255, 247, 243, 227, 282,
	343, 383, 445, 377, 623, 330, 0, 0, 436, 356,
	0, 0, 0, 0, 0, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 437,
	259, 0, 87, 0, 0, 184, 185, 186, 687, 694,
	695, 696, 697, 698, 688, 690, 0, 0, 217, 689,
	224, 634, 636, 635, 645, 646, 647, 648, 649, 650,
	651, 632, 692, 699, 700, 0, 239, 286, 246, 238,
	455, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 0, 622,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 605, 606,
	0, 0, 0, 0, 671, 0, 607, 0, 0, 615,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 231, 0, 670, 0, 0, 491,
	0, 0, 668, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 409, 415, 0, 0, 0,
	229, 0, 413, 381, 474, 213, 257, 406, 386, 411,
	393, 260, 0, 0, 412, 331, 460, 400, 471, 492,
	493, 237, 361, 482, 449, 488, 506, 206, 234, 375,
	442, 477, 433, 354, 456, 457, 293, 432, 267, 191,
	329, 498, 204, 421, 221, 211, 462, 480, 262, 404,
	197, 444, 469, 218, 424, 0, 0, 508, 199, 467,
	441, 350, 290, 291, 198, 0, 405, 242, 265, 232,
	370, 464, 465, 230, 509, 208, 487, 201, 0, 486,
	363, 459, 468, 351, 341, 200, 466, 349, 340, 296,
	640, 641, 253, 276, 398, 334, 399, 277, 359, 358,
	360, 194, 478, 0, 195, 0, 438, 479, 510, 214,
	215, 216, 0, 252, 256, 264, 266, 272, 273, 280,
	327, 374, 397, 395, 401, 0, 454, 472, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 505, 504, 362,
	279, 434, 295, 332, 0, 0, 380, 414, 219, 476,
	435, 677, 669, 627, 681, 629, 678, 679, 624, 625,
	628, 680, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	0, 672, 614, 613, 0, 620, 621, 0, 630, 631,
	633, 637, 638, 639, 642, 643, 644, 652, 654, 655,
	653, 656, 657, 658, 661, 662, 663, 664, 659, 660,
	665, 612, 187, 202, 328, 0, 402, 261, 507, 485,
	481, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 408, 416, 417, 418, 419, 420, 422, 423,
	428, 429, 430, 431, 439, 443, 461, 463, 475, 489,
	494, 271, 470, 495, 0, 337, 0, 0, 339, 254,
	274, 285, 0, 484, 440, 207, 410, 263, 196, 225,
	210, 233, 248, 251, 289, 348, 355, 384, 388, 268,
	245, 223, 407, 220, 425, 446, 447, 448, 450, 352,
	240, 387, 0, 353, 335, 452, 453, 281, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 326, 241, 0, 0, 385, 0,
	193, 0, 427, 228, 336, 333, 458, 255, 247, 243,
	227, 282, 343, 383, 445, 377, 0, 330, 0, 0,
	436, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 226, 192,
	368, 437, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 694, 695, 0, 0, 0, 0, 1650, 0, 0,
	217, 0, 224, 311, 320, 319, 300, 301, 303, 305,
	310, 317, 323, 0, 0, 0, 0, 0, 239, 286,
	246, 238, 455, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 357, 231, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 294, 188, 205, 0, 0, 367, 409, 415, 0,
	0, 0, 229, 0, 413, 381, 474, 213, 257, 406,
	386, 411, 393, 260, 0, 0, 412, 331, 460, 400,
	471, 492, 493, 237, 361, 482, 449, 488, 506, 206,
	234, 375, 442, 477, 433, 354, 456, 457, 293, 432,
	267, 191, 329, 498, 204, 421, 221, 211, 462, 480,
	262, 404, 197, 444, 469, 218, 424, 0, 0, 508,
	199, 467, 441, 350, 290, 291, 198, 0, 405, 242,
	265, 232, 370, 464, 465, 230, 509, 208, 487, 201,
	0, 486, 363, 459, 468, 351, 341, 200, 466, 349,
	340, 296, 315, 316, 253, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 478, 0, 195, 0, 438, 479,
	510, 214, 215, 216, 0, 252, 256, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 454, 472,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 505,
	504, 362, 279, 434, 295, 332, 0, 0, 380, 414,
	219, 476, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 342, 426, 473, 297, 309, 312, 302,
	321, 0, 322, 298, 299, 304, 306, 307, 308, 313,
	314, 318, 324, 0, 187, 202, 328, 0, 402, 261,
	507, 485, 481, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 270, 275, 278, 283, 284,
	287, 292, 338, 344, 345, 346, 347, 364, 365, 366,
	369, 372, 373, 376, 378, 379, 382, 389, 390, 391,
	392, 394, 396, 403, 408, 416, 417, 418, 419, 420,
	422, 423, 428, 429, 430, 431, 439, 443, 461, 463,
	475, 489, 494, 271, 470, 495, 0, 337, 0, 0,
	339, 254, 274, 285, 0, 484, 440, 207, 410, 263,
	196, 225, 210, 233, 248, 251, 289, 348, 355, 384,
	388, 268, 245, 223, 407, 220, 425, 446, 447, 448,
	450, 352, 240, 387, 0, 353, 335, 452, 453, 281,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 326, 241, 0, 0,
	385, 0, 193, 0, 427, 228, 336, 333, 458, 255,
	247, 243, 227, 282, 343, 383, 445, 377, 0, 330,
	0, 0, 436, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	226, 192, 368, 437, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 311, 320, 319, 300, 301,
	303, 305, 310, 317, 323, 0, 0, 0, 0, 0,
	239, 286, 246, 238, 455, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 998, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 357, 231, 0,
	0, 0, 997, 491, 0, 0, 0, 0, 0, 994,
	995, 325, 957, 294, 188, 205, 988, 992, 367, 409,
	415, 0, 0, 0, 229, 0, 413, 381, 474, 213,
	257, 406, 386, 411, 393, 260, 0, 0, 412, 331,
	460, 400, 471, 492, 493, 237, 361, 482, 449, 488,
	506, 206, 234, 375, 442, 477, 433, 354, 456, 457,
	293, 432, 267, 191, 329, 498, 204, 421, 221, 211,
	462, 480, 262, 404, 197, 444, 469, 218, 424, 0,
	0, 508, 199, 467, 441, 350, 290, 291, 198, 0,
	405, 242, 265, 232, 370, 464, 465, 230, 509, 208,
	487, 201, 0, 486, 363, 459, 468, 351, 341, 200,
	466, 349, 340, 296, 315, 316, 253, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 478, 0, 195, 0,
	438, 479, 510, 214, 215, 216, 0, 252, 256, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 0,
	454, 472, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 505, 504, 362, 279, 434, 295, 332, 0, 0,
	380, 414, 219, 476, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 342, 426, 473, 297, 309,
	312, 302, 321, 0, 322, 298, 299, 304, 306, 307,
	308, 313, 314, 318, 324, 0, 187, 202, 328, 0,
	402, 261, 507, 485, 481, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 270, 275, 278,
	283, 284, 287, 292, 338, 344, 345, 346, 347, 364,
	365, 366, 369, 372, 373, 376, 378, 379, 382, 389,
	390, 391, 392, 394, 396, 403, 408, 416, 417, 418,
	419, 420, 422, 423, 428, 429, 430, 431, 439, 443,
	461, 463, 475, 489, 494, 271, 470, 495, 0, 337,
	0, 0, 339, 254, 274, 285, 0, 484, 440, 207,
	410, 263, 196, 225, 210, 233, 248, 251, 289, 348,
	355, 384, 388, 268, 245, 223, 407, 220, 425, 446,
	447, 448, 450, 352, 240, 387, 0, 0, 335, 452,
	453, 281, 353, 0, 0, 0, 78, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 326, 241, 0, 0, 385, 0, 193,
	0, 427, 228, 336, 333, 458, 255, 247, 243, 227,
	282, 343, 383, 445, 377, 0, 330, 0, 0, 436,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	437, 259, 0, 87, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 239, 286, 246,
	238, 455, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 231, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 409, 415, 0, 0,
	0, 229, 0, 413, 381, 474, 213, 257, 406, 386,
	411, 393, 260, 0, 0, 412, 331, 460, 400, 471,
	492, 493, 237, 361, 482, 449, 488, 506, 206, 234,
	375, 442, 477, 433, 354, 456, 457, 293, 432, 267,
	191, 329, 498, 204, 421, 221, 211, 462, 480, 262,
	404, 197, 444, 469, 218, 424, 0, 0, 508, 199,
	467, 441, 350, 290, 291, 198, 0, 405, 242, 265,
	232, 370, 464, 465, 230, 509, 208, 487, 201, 0,
	486, 363, 459, 468, 351, 341, 200, 466, 349, 340,
	296, 315, 316, 253, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 478, 0, 195, 0, 438, 479, 510,
	214, 215, 216, 0, 252, 256, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 454, 472, 483,
	490, 496, 497, 499, 500, 501, 502, 503, 505, 504,
	362, 279, 434, 295, 332, 0, 0, 380, 414, 219,
	476, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 342, 426, 473, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 0, 187, 202, 328, 86, 402, 261, 507,
	485, 481, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 408, 416, 417, 418, 419, 420, 422,
	423, 428, 429, 430, 431, 439, 443, 461, 463, 475,
	489, 494, 271, 470, 495, 0, 337, 0, 0, 339,
	254, 274, 285, 0, 484, 440, 207, 410, 263, 196,
	225, 210, 233, 248, 251, 289, 348, 355, 384, 388,
	268, 245, 223, 407, 220, 425, 446, 447, 448, 450,
	352, 240, 387, 0, 1330, 335, 452, 453, 281, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 1332, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 326, 241, 0, 0, 385,
	0, 193, 0, 427, 228, 336, 333, 458, 255, 247,
	243, 227, 282, 343, 383, 445, 377, 0, 330, 0,
	0, 436, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 226,
	192, 368, 437, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 311, 320, 319, 300, 301, 303,
	305, 310, 317, 323, 0, 0, 0, 0, 0, 239,
	286, 246, 238, 455, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 1163, 0, 1164, 1165, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 357, 231, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 294, 188, 205, 0, 0, 367, 409, 415,
	0, 0, 0, 229, 0, 413, 381, 474, 213, 257,
	406, 386, 411, 393, 260, 0, 0, 412, 331, 460,
	400, 471, 492, 493, 237, 361, 482, 449, 488, 506,
	206, 234, 375, 442, 477, 433, 354, 456, 457, 293,
	432, 267, 191, 329, 498, 204, 421, 221, 211, 462,
	480, 262, 404, 197, 444, 469, 218, 424, 0, 0,
	508, 199, 467, 441, 350, 290, 291, 198, 0, 405,
	242, 265, 232, 370, 464, 465, 230, 509, 208, 487,
	201, 0, 486, 363, 459, 468, 351, 341, 200, 466,
	349, 340, 296, 315, 316, 253, 276, 398, 334, 399,
	277, 359, 358, 360, 194, 478, 0, 195, 0, 438,
	479, 510, 214, 215, 216, 0, 252, 256, 264, 266,
	272, 273, 280, 327, 374, 397, 395, 401, 0, 454,
	472, 483, 490, 496, 497, 499, 500, 501, 502, 503,
	505, 504, 362, 279, 434, 295, 332, 0, 0, 380,
	414, 219, 476, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 342, 426, 473, 297, 309, 312,
	302, 321, 0, 322, 298, 299, 304, 306, 307, 308,
	313, 314, 318, 324, 0, 187, 202, 328, 0, 402,
	261, 507, 485, 481, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 270, 275, 278, 283,
	284, 287, 292, 338, 344, 345, 346, 347, 364, 365,
	366, 369, 372, 373, 376, 378, 379, 382, 389, 390,
	391, 392, 394, 396, 403, 408, 416, 417, 418, 419,
	420, 422, 423, 428, 429, 430, 431, 439, 443, 461,
	463, 475, 489, 494, 271, 470, 495, 0, 337, 0,
	0, 339, 254, 274, 285, 0, 484, 440, 207, 410,
	263, 196, 225, 210, 233, 248, 251, 289, 348, 355,
	384, 388, 268, 245, 223, 407, 220, 425, 446, 447,
	448, 450, 352, 240, 387, 0, 353, 335, 452, 453,
	281, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 326, 241, 0,
	0, 385, 0, 193, 0, 427, 228, 336, 333, 458,
	255, 247, 243, 227, 282, 343, 383, 445, 377, 0,
	330, 0, 0, 436, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 437, 259, 0, 0, 0, 0,
	184, 185, 186, 1273, 1276, 0, 0, 0, 0, 1272,
	1275, 0, 0, 217, 1271, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 239, 286, 246, 238, 455, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 231,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	409, 415, 0, 0, 0, 229, 0, 413, 381, 474,
	213, 257, 406, 386, 411, 393, 260, 0, 0, 412,
	331, 460, 400, 471, 492, 493, 237, 361, 482, 449,
	488, 506, 206, 234, 375, 442, 477, 433, 354, 456,
	457, 293, 432, 267, 191, 329, 498, 204, 421, 221,
	211, 462, 480, 262, 404, 197, 444, 469, 218, 424,
	0, 0, 508, 199, 467, 441, 350, 290, 291, 198,
	0, 405, 242, 265, 232, 370, 464, 465, 230, 509,
	208, 487, 201, 0, 486, 363, 459, 468, 351, 341,
	200, 466, 349, 340, 296, 315, 316, 253, 276, 398,
	334, 399, 277, 359, 358, 360, 194, 478, 0, 195,
	0, 438, 479, 510, 214, 215, 216, 0, 252, 256,
	264, 266, 272, 273, 280, 327, 374, 397, 395, 401,
	0, 454, 472, 483, 490, 496, 497, 499, 500, 501,
	502, 503, 505, 504, 362, 279, 434, 295, 332, 0,
	0, 380, 414, 219, 476, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 342, 426, 473, 297,
	309, 312, 302, 321, 0, 322, 298, 299, 304, 306,
	307, 308, 313, 314, 318, 324, 0, 187, 202, 328,
	0, 402, 261, 507, 485, 481, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 408, 416, 417,
	418, 419, 420, 422, 423, 428, 429, 430, 431, 439,
	443, 461, 463, 475, 489, 494, 271, 470, 495, 0,
	337, 0, 0, 339, 254, 274, 285, 0, 484, 440,
	207, 410, 263, 196, 225, 210, 233, 248, 251, 289,
	348, 355, 384, 388, 268, 245, 223, 407, 220, 425,
	446, 447, 448, 450, 352, 240, 387, 0, 0, 335,
	452, 453, 281, 353, 0, 0, 0, 78, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 326, 241, 0, 0, 385, 0,
	193, 0, 427, 228, 336, 333, 458, 255, 247, 243,
	227, 282, 343, 383, 445, 377, 0, 330, 0, 0,
	436, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 226, 192,
	368, 437, 259, 0, 87, 0, 1311, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 311, 320, 319, 300, 301, 303, 305,
	310, 317, 323, 0, 0, 0, 0, 0, 239, 286,
	246, 238, 455, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 357, 231, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 294, 188, 205, 0, 0, 367, 409, 415, 0,
	0, 0, 229, 0, 413, 381, 474, 213, 257, 406,
	386, 411, 393, 260, 0, 0, 412, 331, 460, 400,
	471, 492, 493, 237, 361, 482, 449, 488, 506, 206,
	234, 375, 442, 477, 433, 354, 456, 457, 293, 432,
	267, 191, 329, 498, 204, 421, 221, 211, 462, 480,
	262, 404, 197, 444, 469, 218, 424, 0, 0, 508,
	199, 467, 441, 350, 290, 291, 198, 0, 405, 242,
	265, 232, 370, 464, 465, 230, 509, 208, 487, 201,
	0, 486, 363, 459, 468, 351, 341, 200, 466, 349,
	340, 296, 315, 316, 253, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 478, 0, 195, 0, 438, 479,
	510, 214, 215, 216, 0, 252, 256, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 454, 472,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 505,
	504, 362, 279, 434, 295, 332, 0, 0, 380, 414,
	219, 476, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 342, 426, 473, 297, 309, 312, 302,
	321, 0, 322, 298, 299, 304, 306, 307, 308, 313,
	314, 318, 324, 0, 187, 202, 328, 86, 402, 261,
	507, 485, 481, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 270, 275, 278, 283, 284,
	287, 292, 338, 344, 345, 346, 347, 364, 365, 366,
	369, 372, 373, 376, 378, 379, 382, 389, 390, 391,
	392, 394, 396, 403, 408, 416, 417, 418, 419, 420,
	422, 423, 428, 429, 430, 431, 439, 443, 461, 463,
	475, 489, 494, 271, 470, 495, 0, 337, 0, 0,
	339, 254, 274, 285, 0, 484, 440, 207, 410, 263,
	196, 225, 210, 233, 248, 251, 289, 348, 355, 384,
	388, 268, 245, 223, 407, 220, 425, 446, 447, 448,
	450, 352, 240, 387, 0, 353, 335, 452, 453, 281,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 326, 241, 0, 0,
	385, 0, 193, 0, 427, 228, 336, 333, 458, 255,
	247, 243, 227, 282, 343, 383, 445, 377, 0, 330,
	0, 0, 436, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	226, 192, 368, 437, 259, 0, 87, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 311, 320, 319, 300, 301,
	303, 305, 310, 317, 323, 0, 0, 0, 0, 0,
	239, 286, 246, 238, 455, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 357, 231, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 294, 188, 205, 0, 0, 367, 409,
	415, 0, 0, 0, 229, 0, 413, 381, 474, 213,
	257, 406, 386, 411, 393, 260, 0, 0, 412, 331,
	460, 400, 471, 492, 493, 237, 361, 482, 449, 488,
	506, 206, 234, 375, 442, 477, 433, 354, 456, 457,
	293, 432, 267, 191, 329, 498, 204, 421, 221, 211,
	462, 480, 262, 404, 197, 444, 469, 218, 424, 0,
	0, 508, 199, 467, 441, 350, 290, 291, 198, 0,
	405, 242, 265, 232, 370, 464, 465, 230, 509, 208,
	487, 201, 0, 486, 363, 459, 468, 351, 341, 200,
	466, 349, 340, 296, 315, 316, 253, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 478, 0, 195, 0,
	438, 479, 510, 214, 215, 216, 0, 252, 256, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 0,
	454, 472, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 505, 504, 362, 279, 434, 295, 332, 0, 0,
	380, 414, 219, 476, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 342, 426, 473, 297, 309,
	312, 302, 321, 0, 322, 298, 299, 304, 306, 307,
	308, 313, 314, 318, 324, 0, 187, 202, 328, 0,
	402, 261, 507, 485, 481, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 1809, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 270, 275, 278,
	283, 284, 287, 292, 338, 344, 345, 346, 347, 364,
	365, 366, 369, 372, 373, 376, 378, 379, 382, 389,
	390, 391, 392, 394, 396, 403, 408, 416, 417, 418,
	419, 420, 422, 423, 428, 429, 430, 431, 439, 443,
	461, 463, 475, 489, 494, 271, 470, 495, 0, 337,
	0, 0, 339, 254, 274, 285, 0, 484, 440, 207,
	410, 263, 196, 225, 210, 233, 248, 251, 289, 348,
	355, 384, 388, 268, 245, 223, 407, 220, 425, 446,
	447, 448, 450, 352, 240, 387, 0, 353, 335, 452,
	453, 281, 451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 1761, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 326, 241,
	0, 0, 385, 0, 193, 0, 427, 228, 336, 333,
	458, 255, 247, 243, 227, 282, 343, 383, 445, 377,
	0, 330, 0, 0, 436, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 437, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 239, 286, 246, 238, 455, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	231, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 409, 415, 0, 0, 0, 229, 0, 413, 381,
	474, 213, 257, 406, 386, 411, 393, 260, 0, 1759,
	412, 331, 460, 400, 471, 492, 493, 237, 361, 482,
	449, 488, 506, 206, 234, 375, 442, 477, 433, 354,
	456, 457, 293, 432, 267, 191, 329, 498, 204, 421,
	221, 211, 462, 480, 262, 404, 197, 444, 469, 218,
	424, 0, 0, 508, 199, 467, 441, 350, 290, 291,
	198, 0, 405, 242, 265, 232, 370, 464, 465, 230,
	509, 208, 487, 201, 0, 486, 363, 459, 468, 351,
	341, 200, 466, 349, 340, 296, 315, 316, 253, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 478, 0,
	195, 0, 438, 479, 510, 214, 215, 216, 0, 252,
	256, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 454, 472, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 505, 504, 362, 279, 434, 295, 332,
	0, 0, 380, 414, 219, 476, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 342, 426, 473,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 261, 507, 485, 481, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 408, 416,
	417, 418, 419, 420, 422, 423, 428, 429, 430, 431,
	439, 443, 461, 463, 475, 489, 494, 271, 470, 495,
	0, 337, 0, 0, 339, 254, 274, 285, 0, 484,
	440, 207, 410, 263, 196, 225, 210, 233, 248, 251,
	289, 348, 355, 384, 388, 268, 245, 223, 407, 220,
	425, 446, 447, 448, 450, 352, 240, 387, 0, 353,
	335, 452, 453, 281, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	326, 241, 0, 0, 385, 0, 193, 0, 427, 228,
	336, 333, 458, 255, 247, 243, 227, 282, 343, 383,
	445, 377, 0, 330, 0, 0, 436, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 368, 437, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 311,
	320, 319, 300, 301, 303, 305, 310, 317, 323, 0,
	0, 0, 0, 0, 239, 286, 246, 238, 455, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	951, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 357, 231, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 325, 957, 294, 188, 205,
	955, 0, 367, 409, 415, 0, 0, 0, 229, 0,
	413, 381, 474, 213, 257, 406, 386, 411, 393, 260,
	0, 0, 412, 331, 460, 400, 471, 492, 493, 237,
	361, 482, 449, 488, 506, 206, 234, 375, 442, 477,
	433, 354, 456, 457, 293, 432, 267, 191, 329, 498,
	204, 421, 221, 211, 462, 480, 262, 404, 197, 444,
	469, 218, 424, 0, 0, 508, 199, 467, 441, 350,
	290, 291, 198, 0, 405, 242, 265, 232, 370, 464,
	465, 230, 509, 208, 487, 201, 0, 486, 363, 459,
	468, 351, 341, 200, 466, 349, 340, 296, 315, 316,
	253, 276, 398, 334, 399, 277, 359, 358, 360, 194,
	478, 0, 195, 0, 438, 479, 510, 214, 215, 216,
	0, 252, 256, 264, 266, 272, 273, 280, 327, 374,
	397, 395, 401, 0, 454, 472, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 505, 504, 362, 279, 434,
	295, 332, 0, 0, 380, 414, 219, 476, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 342,
	426, 473, 297, 309, 312, 302, 321, 0, 322, 298,
	299, 304, 306, 307, 308, 313, 314, 318, 324, 0,
	187, 202, 328, 0, 402, 261, 507, 485, 481, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 270, 275, 278, 283, 284, 287, 292, 338, 344,
	345, 346, 347, 364, 365, 366, 369, 372, 373, 376,
	378, 379, 382, 389, 390, 391, 392, 394, 396, 403,
	408, 416, 417, 418, 419, 420, 422, 423, 428, 429,
	430, 431, 439, 443, 461, 463, 475, 489, 494, 271,
	470, 495, 0, 337, 0, 0, 339, 254, 274, 285,
	0, 484, 440, 207, 410, 263, 196, 225, 210, 233,
	248, 251, 289, 348, 355, 384, 388, 268, 245, 223,
	407, 220, 425, 446, 447, 448, 450, 352, 240, 387,
	0, 353, 335, 452, 453, 281, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 1761, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 326, 241, 0, 0, 385, 0, 193, 0,
	427, 228, 336, 333, 458, 255, 247, 243, 227, 282,
	343, 383, 445, 377, 0, 330, 0, 0, 436, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 437,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 0, 0, 0, 0, 0, 239, 286, 246, 238,
	455, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 231, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 409, 415, 0, 0, 0,
	229, 0, 413, 381, 474, 213, 257, 406, 386, 411,
	393, 260, 0, 0, 412, 331, 460, 400, 471, 492,
	493, 237, 361, 482, 449, 488, 506, 206, 234, 375,
	442, 477, 433, 354, 456, 457, 293, 432, 267, 191,
	329, 498, 204, 421, 221, 211, 462, 480, 262, 404,
	197, 444, 469, 218, 424, 0, 0, 508, 199, 467,
	441, 350, 290, 291, 198, 0, 405, 242, 265, 232,
	370, 464, 465, 230, 509, 208, 487, 201, 0, 486,
	363, 459, 468, 351, 341, 200, 466, 349, 340, 296,
	315, 316, 253, 276, 398, 334, 399, 277, 359, 358,
	360, 194, 478, 0, 195, 0, 438, 479, 510, 214,
	215, 216, 0, 252, 256, 264, 266, 272, 273, 280,
	327, 374, 397, 395, 401, 0, 454, 472, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 505, 504, 362,
	279, 434, 295, 332, 0, 0, 380, 414, 219, 476,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 342, 426, 473, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 261, 507, 485,
	481, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 408, 416, 417, 418, 419, 420, 422, 423,
	428, 429, 430, 431, 439, 443, 461, 463, 475, 489,
	494, 271, 470, 495, 0, 337, 0, 0, 339, 254,
	274, 285, 0, 484, 440, 207, 410, 263, 196, 225,
	210, 233, 248, 251, 289, 348, 355, 384, 388, 268,
	245, 223, 407, 220, 425, 446, 447, 448, 450, 352,
	240, 387, 0, 353, 335, 452, 453, 281, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 326, 241, 0, 0, 385, 0,
	193, 0, 427, 228, 336, 333, 458, 255, 247, 243,
	227, 282, 343, 383, 445, 377, 0, 330, 0, 0,
	436, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 226, 192,
	368, 437, 259, 0, 0, 0, 1311, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 311, 320, 319, 300, 301, 303, 305,
	310, 317, 323, 0, 0, 0, 0, 0, 239, 286,
	246, 238, 455, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 357, 231, 0, 0, 0,
	0, 491, 0, 0, 0, 2784, 0, 0, 0, 325,
	0, 294, 188, 205, 0, 0, 367, 409, 415, 0,
	0, 0, 229, 0, 413, 381, 474, 213, 257, 406,
	386, 411, 393, 260, 0, 0, 412, 331, 460, 400,
	471, 492, 493, 237, 361, 482, 449, 488, 506, 206,
	234, 375, 442, 477, 433, 354, 456, 457, 293, 432,
	267, 191, 329, 498, 204, 421, 221, 211, 462, 480,
	262, 404, 197, 444, 469, 218, 424, 0, 0, 508,
	199, 467, 441, 350, 290, 291, 198, 0, 405, 242,
	265, 232, 370, 464, 465, 230, 509, 208, 487, 201,
	0, 486, 363, 459, 468, 351, 341, 200, 466, 349,
	340, 296, 315, 316, 253, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 478, 0, 195, 0, 438, 479,
	510, 214, 215, 216, 0, 252, 256, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 454, 472,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 505,
	504, 362, 279, 434, 295, 332, 0, 0, 380, 414,
	219, 476, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 342, 426, 473, 297, 309, 312, 302,
	321, 0, 322, 298, 299, 304, 306, 307, 308, 313,
	314, 318, 324, 0, 187, 202, 328, 0, 402, 261,
	507, 485, 481, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 270, 275, 278, 283, 284,
	287, 292, 338, 344, 345, 346, 347, 364, 365, 366,
	369, 372, 373, 376, 378, 379, 382, 389, 390, 391,
	392, 394, 396, 403, 408, 416, 417, 418, 419, 420,
	422, 423, 428, 429, 430, 431, 439, 443, 461, 463,
	475, 489, 494, 271, 470, 495, 0, 337, 0, 0,
	339, 254, 274, 285, 0, 484, 440, 207, 410, 263,
	196, 225, 210, 233, 248, 251, 289, 348, 355, 384,
	388, 268, 245, 223, 407, 220, 425, 446, 447, 448,
	450, 352, 240, 387, 0, 353, 335, 452, 453, 281,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 326, 241, 0, 0,
	385, 0, 193, 0, 427, 228, 336, 333, 458, 255,
	247, 243, 227, 282, 343, 383, 445, 377, 0, 330,
	0, 0, 436, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	226, 192, 368, 437, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 2091, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 311, 320, 319, 300, 301,
	303, 305, 310, 317, 323, 0, 0, 0, 0, 0,
	239, 286, 246, 238, 455, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 357, 231, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 294, 188, 205, 0, 0, 367, 409,
	415, 0, 0, 0, 229, 0, 413, 381, 474, 213,
	257, 406, 386, 411, 393, 260, 0, 0, 412, 331,
	460, 400, 471, 492, 493, 237, 361, 482, 449, 488,
	506, 206, 234, 375, 442, 477, 433, 354, 456, 457,
	293, 432, 267, 191, 329, 498, 204, 421, 221, 211,
	462, 480, 262, 404, 197, 444, 469, 218, 424, 0,
	0, 508, 199, 467, 441, 350, 290, 291, 198, 0,
	405, 242, 265, 232, 370, 464, 465, 230, 509, 208,
	487, 201, 0, 486, 363, 459, 468, 351, 341, 200,
	466, 349, 340, 296, 315, 316, 253, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 478, 0, 195, 0,
	438, 479, 510, 214, 215, 216, 0, 252, 256, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 0,
	454, 472, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 505, 504, 362, 279, 434, 295, 332, 0, 0,
	380, 414, 219, 476, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 342, 426, 473, 297, 309,
	312, 302, 321, 0, 322, 298, 299, 304, 306, 307,
	308, 313, 314, 318, 324, 0, 187, 202, 328, 0,
	402, 261, 507, 485, 481, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 270, 275, 278,
	283, 284, 287, 292, 338, 344, 345, 346, 347, 364,
	365, 366, 369, 372, 373, 376, 378, 379, 382, 389,
	390, 391, 392, 394, 396, 403, 408, 416, 417, 418,
	419, 420, 422, 423, 428, 429, 430, 431, 439, 443,
	461, 463, 475, 489, 494, 271, 470, 495, 0, 337,
	0, 0, 339, 254, 274, 285, 0, 484, 440, 207,
	410, 263, 196, 225, 210, 233, 248, 251, 289, 348,
	355, 384, 388, 268, 245, 223, 407, 220, 425, 446,
	447, 448, 450, 352, 240, 387, 0, 353, 335, 452,
	453, 281, 451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 326, 241,
	0, 0, 385, 0, 193, 0, 427, 228, 336, 333,
	458, 255, 247, 243, 227, 282, 343, 383, 445, 377,
	0, 330, 0, 0, 436, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 437, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 2076, 0, 0,
	0, 2077, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 239, 286, 246, 238, 455, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	231, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 409, 415, 0, 0, 0, 229, 0, 413, 381,
	474, 213, 257, 406, 386, 411, 393, 260, 0, 0,
	412, 331, 460, 400, 471, 492, 493, 237, 361, 482,
	449, 488, 506, 206, 234, 375, 442, 477, 433, 354,
	456, 457, 293, 432, 267, 191, 329, 498, 204, 421,
	221, 211, 462, 480, 262, 404, 197, 444, 469, 218,
	424, 0, 0, 508, 199, 467, 441, 350, 290, 291,
	198, 0, 405, 242, 265, 232, 370, 464, 465, 230,
	509, 208, 487, 201, 0, 486, 363, 459, 468, 351,
	341, 200, 466, 349, 340, 296, 315, 316, 253, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 478, 0,
	195, 0, 438, 479, 510, 214, 215, 216, 0, 252,
	256, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 454, 472, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 505, 504, 362, 279, 434, 295, 332,
	0, 0, 380, 414, 219, 476, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 342, 426, 473,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 261, 507, 485, 481, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 408, 416,
	417, 418, 419, 420, 422, 423, 428, 429, 430, 431,
	439, 443, 461, 463, 475, 489, 494, 271, 470, 495,
	0, 337, 0, 0, 339, 254, 274, 285, 0, 484,
	440, 207, 410, 263, 196, 225, 210, 233, 248, 251,
	289, 348, 355, 384, 388, 268, 245, 223, 407, 220,
	425, 446, 447, 448, 450, 352, 240, 387, 0, 353,
	335, 452, 453, 281, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 1355, 0, 0, 0,
	326, 241, 0, 0, 385, 0, 193, 0, 427, 228,
	336, 333, 458, 255, 247, 243, 227, 282, 343, 383,
	445, 377, 0, 330, 0, 0, 436, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 368, 437, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 311,
	320, 319, 300, 301, 303, 305, 310, 317, 323, 0,
	0, 0, 0, 0, 239, 286, 246, 238, 455, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 357, 231, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 294, 188, 205,
	0, 0, 367, 409, 415, 0, 0, 0, 229, 0,
	413, 381, 474, 213, 257, 406, 386, 411, 393, 260,
	0, 0, 412, 331, 460, 400, 471, 492, 493, 237,
	361, 482, 449, 488, 506, 206, 234, 375, 442, 477,
	433, 354, 456, 457, 293, 432, 267, 191, 329, 498,
	204, 421, 221, 211, 462, 480, 262, 404, 197, 444,
	469, 218, 424, 0, 0, 508, 199, 467, 441, 350,
	290, 291, 198, 0, 405, 242, 265, 232, 370, 464,
	465, 230, 509, 208, 487, 201, 0, 486, 363, 459,
	468, 351, 341, 200, 466, 349, 340, 296, 315, 316,
	253, 276, 398, 334, 399, 277, 359, 358, 360, 194,
	478, 0, 195, 0, 438, 479, 510, 214, 215, 216,
	0, 252, 256, 264, 266, 272, 273, 280, 327, 374,
	397, 395, 401, 0, 454, 472, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 505, 504, 362, 279, 434,
	295, 332, 0, 0, 380, 414, 219, 476, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 342,
	426, 473, 297, 309, 312, 302, 321, 0, 322, 298,
	299, 304, 306, 307, 308, 313, 314, 318, 324, 0,
	187, 202, 328, 0, 402, 261, 507, 485, 481, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 270, 275, 278, 283, 284, 287, 292, 338, 344,
	345, 346, 347, 364, 365, 366, 369, 372, 373, 376,
	378, 379, 382, 389, 390, 391, 392, 394, 396, 403,
	408, 416, 417, 418, 419, 420, 422, 423, 428, 429,
	430, 431, 439, 443, 461, 463, 475, 489, 494, 271,
	470, 495, 0, 337, 0, 0, 339, 254, 274, 285,
	0, 484, 440, 207, 410, 263, 196, 225, 210, 233,
	248, 251, 289, 348, 355, 384, 388, 268, 245, 223,
	407, 220, 425, 446, 447, 448, 450, 352, 240, 387,
	0, 353, 335, 452, 453, 281, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 326, 241, 0, 0, 385, 0, 193, 0,
	427, 228, 336, 333, 458, 255, 247, 243, 227, 282,
	343, 383, 445, 377, 0, 330, 0, 0, 436, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 437,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 0, 0, 0, 0, 0, 239, 286, 246, 238,
	455, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 231, 0, 0, 0, 0, 491,
	0, 0, 0, 2864, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 409, 415, 0, 0, 0,
	229, 0, 413, 381, 474, 213, 257, 406, 386, 411,
	393, 260, 0, 0, 412, 331, 460, 400, 471, 492,
	493, 237, 361, 482, 449, 488, 506, 206, 234, 375,
	442, 477, 433, 354, 456, 457, 293, 432, 267, 191,
	329, 498, 204, 421, 221, 211, 462, 480, 262, 404,
	197, 444, 469, 218, 424, 0, 0, 508, 199, 467,
	441, 350, 290, 291, 198, 0, 405, 242, 265, 232,
	370, 464, 465, 230, 509, 208, 487, 201, 0, 486,
	363, 459, 468, 351, 341, 200, 466, 349, 340, 296,
	315, 316, 253, 276, 398, 334, 399, 277, 359, 358,
	360, 194, 478, 0, 195, 0, 438, 479, 510, 214,
	215, 216, 0, 252, 256, 264, 266, 272, 273, 280,
	327, 374, 397, 395, 401, 0, 454, 472, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 505, 504, 362,
	279, 434, 295, 332, 0, 0, 380, 414, 219, 476,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 342, 426, 473, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 261, 507, 485,
	481, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 408, 416, 417, 418, 419, 420, 422, 423,
	428, 429, 430, 431, 439, 443, 461, 463, 475, 489,
	494, 271, 470, 495, 0, 337, 0, 0, 339, 254,
	274, 285, 0, 484, 440, 207, 410, 263, 196, 225,
	210, 233, 248, 251, 289, 348, 355, 384, 388, 268,
	245, 223, 407, 220, 425, 446, 447, 448, 450, 352,
	240, 387, 0, 353, 335, 452, 453, 281, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 326, 241, 0, 0, 385, 0,
	193, 0, 427, 228, 336, 333, 458, 255, 247, 243,
	227, 282, 343, 383, 445, 377, 0, 330, 0, 0,
	436, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 226, 192,
	368, 437, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 311, 320, 319, 300, 301, 303, 305,
	310, 317, 323, 0, 0, 0, 0, 0, 239, 286,
	246, 238, 455, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 357, 231, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 294, 188, 205, 0, 0, 367, 409, 415, 0,
	0, 0, 229, 0, 413, 381, 474, 213, 257, 406,
	386, 411, 393, 260, 0, 0, 412, 331, 460, 400,
	471, 492, 493, 237, 361, 482, 449, 488, 506, 206,
	234, 375, 442, 477, 433, 354, 456, 457, 293, 432,
	267, 191, 329, 498, 204, 421, 221, 211, 462, 480,
	262, 404, 197, 444, 469, 218, 424, 0, 0, 508,
	199, 467, 441, 350, 290, 291, 198, 0, 405, 242,
	265, 232, 370, 464, 465, 230, 509, 208, 487, 201,
	0, 486, 363, 459, 468, 351, 341, 200, 466, 349,
	340, 296, 315, 316, 253, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 478, 0, 195, 0, 438, 479,
	510, 214, 215, 216, 0, 252, 256, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 454, 472,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 505,
	504, 362, 279, 434, 295, 332, 0, 0, 380, 414,
	219, 476, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 342, 426, 473, 297, 309, 312, 302,
	321, 0, 322, 298, 299, 304, 306, 307, 308, 313,
	314, 318, 324, 0, 187, 202, 328, 0, 402, 261,
	507, 485, 481, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 270, 275, 278, 283, 284,
	287, 292, 338, 344, 345, 346, 347, 364, 365, 366,
	369, 372, 373, 376, 378, 379, 382, 389, 390, 391,
	392, 394, 396, 403, 408, 416, 417, 418, 419, 420,
	422, 423, 428, 429, 430, 431, 439, 443, 461, 463,
	475, 489, 494, 271, 470, 495, 0, 337, 0, 0,
	339, 254, 274, 285, 0, 484, 440, 207, 410, 263,
	196, 225, 210, 233, 248, 251, 289, 348, 355, 384,
	388, 268, 245, 223, 407, 220, 425, 446, 447, 448,
	450, 352, 240, 387, 0, 353, 335, 452, 453, 281,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 326, 241, 0, 0,
	385, 0, 193, 0, 427, 228, 336, 333, 458, 255,
	247, 243, 227, 282, 343, 383, 445, 377, 0, 330,
	0, 0, 436, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	226, 192, 368, 437, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 311, 320, 319, 300, 301,
	303, 305, 310, 317, 323, 0, 0, 0, 0, 0,
	239, 286, 246, 238, 455, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 357, 231, 0,
	0, 0, 0, 491, 0, 0, 0, 2784, 0, 0,
	0, 325, 0, 294, 188, 205, 0, 0, 367, 409,
	415, 0, 0, 0, 229, 0, 413, 381, 474, 213,
	257, 406, 386, 411, 393, 260, 0, 0, 412, 331,
	460, 400, 471, 492, 493, 237, 361, 482, 449, 488,
	506, 206, 234, 375, 442, 477, 433, 354, 456, 457,
	293, 432, 267, 191, 329, 498, 204, 421, 221, 211,
	462, 480, 262, 404, 197, 444, 469, 218, 424, 0,
	0, 508, 199, 467, 441, 350, 290, 291, 198, 0,
	405, 242, 265, 232, 370, 464, 465, 230, 509, 208,
	487, 201, 0, 486, 363, 459, 468, 351, 341, 200,
	466, 349, 340, 296, 315, 316, 253, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 478, 0, 195, 0,
	438, 479, 510, 214, 215, 216, 0, 252, 256, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 0,
	454, 472, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 505, 504, 362, 279, 434, 295, 332, 0, 0,
	380, 414, 219, 476, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 342, 426, 473, 297, 309,
	312, 302, 321, 0, 322, 298, 299, 304, 306, 307,
	308, 313, 314, 318, 324, 0, 187, 202, 328, 0,
	402, 261, 507, 485, 481, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 270, 275, 278,
	283, 284, 287, 292, 338, 344, 345, 346, 347, 364,
	365, 366, 369, 372, 373, 376, 378, 379, 382, 389,
	390, 391, 392, 394, 396, 403, 408, 416, 417, 418,
	419, 420, 422, 423, 428, 429, 430, 431, 439, 443,
	461, 463, 475, 489, 494, 271, 470, 495, 0, 337,
	0, 0, 339, 254, 274, 285, 0, 484, 440, 207,
	410, 263, 196, 225, 210, 233, 248, 251, 289, 348,
	355, 384, 388, 268, 245, 223, 407, 220, 425, 446,
	447, 448, 450, 352, 240, 387, 0, 353, 335, 452,
	453, 281, 451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 326, 241,
	0, 0, 385, 0, 193, 0, 427, 228, 336, 333,
	458, 255, 247, 243, 227, 282, 343, 383, 445, 377,
	0, 330, 0, 0, 436, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 437, 259, 0, 87, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 239, 286, 246, 238, 455, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	231, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 409, 415, 0, 0, 0, 229, 0, 413, 381,
	474, 213, 257, 406, 386, 411, 393, 260, 0, 0,
	412, 331, 460, 400, 471, 492, 493, 237, 361, 482,
	449, 488, 506, 206, 234, 375, 442, 477, 433, 354,
	456, 457, 293, 432, 267, 191, 329, 498, 204, 421,
	221, 211, 462, 480, 262, 404, 197, 444, 469, 218,
	424, 0, 0, 508, 199, 467, 441, 350, 290, 291,
	198, 0, 405, 242, 265, 232, 370, 464, 465, 230,
	509, 208, 487, 201, 0, 486, 363, 459, 468, 351,
	341, 200, 466, 349, 340, 296, 315, 316, 253, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 478, 0,
	195, 0, 438, 479, 510, 214, 215, 216, 0, 252,
	256, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 454, 472, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 505, 504, 362, 279, 434, 295, 332,
	0, 0, 380, 414, 219, 476, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 342, 426, 473,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 261, 507, 485, 481, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 408, 416,
	417, 418, 419, 420, 422, 423, 428, 429, 430, 431,
	439, 443, 461, 463, 475, 489, 494, 271, 470, 495,
	0, 337, 0, 0, 339, 254, 274, 285, 0, 484,
	440, 207, 410, 263, 196, 225, 210, 233, 248, 251,
	289, 348, 355, 384, 388, 268, 245, 223, 407, 220,
	425, 446, 447, 448, 450, 352, 240, 387, 0, 353,
	335, 452, 453, 281, 451, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	326, 241, 0, 0, 385, 0, 193, 0, 427, 228,
	336, 333, 458, 255, 247, 243, 227, 282, 343, 383,
	445, 377, 0, 330, 0, 0, 436, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 368, 437, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 311,
	320, 319, 300, 301, 303, 305, 310, 317, 323, 0,
	0, 0, 0, 0, 239, 286, 246, 238, 455, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 357, 231, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 294, 188, 205,
	0, 0, 367, 409, 415, 0, 0, 0, 229, 0,
	413, 381, 474, 213, 257, 406, 386, 411, 393, 260,
	0, 0, 412, 331, 460, 400, 471, 492, 493, 237,
	361, 482, 449, 488, 506, 206, 234, 375, 442, 477,
	433, 354, 456, 457, 293, 432, 267, 191, 329, 498,
	204, 421, 221, 211, 462, 480, 262, 404, 197, 444,
	469, 218, 424, 0, 0, 508, 199, 467, 441, 350,
	290, 291, 198, 0, 405, 242, 265, 232, 370, 464,
	465, 230, 509, 208, 487, 201, 0, 486, 363, 459,
	468, 351, 341, 200, 466, 349, 340, 296, 315, 316,
	253, 276, 398, 334, 399, 277, 359, 358, 360, 194,
	478, 0, 195, 0, 438, 479, 510, 214, 215, 216,
	0, 252, 256, 264, 266, 272, 273, 280, 327, 374,
	397, 395, 401, 0, 454, 472, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 505, 504, 362, 279, 434,
	295, 332, 0, 0, 380, 414, 219, 476, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 342,
	426, 473, 297, 309, 312, 302, 321, 0, 322, 298,
	299, 304, 306, 307, 308, 313, 314, 318, 324, 0,
	187, 202, 328, 0, 402, 261, 507, 485, 481, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 270, 275, 278, 283, 284, 287, 292, 338, 344,
	345, 346, 347, 364, 365, 366, 369, 372, 373, 376,
	378, 379, 382, 389, 390, 391, 392, 394, 396, 403,
	408, 416, 417, 418, 419, 420, 422, 423, 428, 429,
	430, 431, 439, 443, 461, 463, 475, 489, 494, 271,
	470, 495, 0, 337, 0, 0, 339, 254, 274, 285,
	0, 484, 440, 207, 410, 263, 196, 225, 210, 233,
	248, 251, 289, 348, 355, 384, 388, 268, 245, 223,
	407, 220, 425, 446, 447, 448, 450, 352, 240, 387,
	0, 353, 335, 452, 453, 281, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 326, 241, 0, 0, 385, 0, 193, 0,
	427, 228, 336, 333, 458, 255, 247, 243, 227, 282,
	343, 383, 445, 377, 0, 330, 0, 0, 436, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 437,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 0, 0, 0, 0, 0, 239, 286, 246, 238,
	455, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 231, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 409, 415, 0, 0, 0,
	229, 0, 413, 381, 474, 213, 257, 406, 386, 411,
	393, 260, 0, 0, 412, 331, 460, 400, 471, 492,
	493, 237, 361, 482, 449, 488, 506, 206, 234, 375,
	442, 477, 433, 354, 456, 457, 293, 432, 267, 191,
	329, 498, 204, 421, 221, 211, 462, 480, 262, 404,
	197, 444, 469, 218, 424, 0, 0, 508, 199, 467,
	441, 350, 290, 291, 198, 0, 405, 242, 265, 232,
	370, 464, 465, 230, 509, 208, 487, 201, 0, 486,
	363, 459, 468, 351, 341, 200, 466, 349, 340, 296,
	315, 316, 253, 276, 398, 334, 399, 277, 359, 358,
	360, 194, 478, 0, 195, 0, 438, 479, 510, 214,
	215, 216, 0, 252, 256, 264, 266, 272, 273, 280,
	327, 374, 397, 395, 401, 0, 454, 472, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 505, 504, 362,
	279, 434, 295, 332, 0, 0, 380, 414, 219, 476,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 342, 426, 473, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 261, 507, 485,
	481, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 408, 416, 417, 418, 419, 420, 422, 423,
	428, 429, 430, 431, 439, 443, 461, 463, 475, 489,
	494, 271, 470, 495, 0, 337, 0, 0, 339, 254,
	274, 285, 0, 484, 440, 207, 410, 263, 196, 225,
	210, 233, 248, 251, 289, 348, 355, 384, 388, 268,
	245, 223, 407, 220, 425, 446, 447, 448, 450, 352,
	240, 387, 0, 353, 335, 452, 453, 281, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 326, 241, 0, 0, 385, 0,
	193, 0, 427, 228, 336, 333, 458, 255, 247, 243,
	227, 282, 343, 383, 445, 377, 0, 330, 0, 0,
	436, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 226, 192,
	368, 437, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 311, 320, 319, 300, 301, 303, 305,
	310, 317, 323, 0, 0, 0, 0, 0, 239, 286,
	246, 238, 455, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 357, 231, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 294, 188, 205, 0, 0, 367, 409, 415, 0,
	0, 0, 229, 0, 413, 381, 474, 213, 257, 406,
	386, 411, 393, 260, 0, 0, 412, 331, 460, 400,
	471, 492, 493, 237, 361, 482, 449, 488, 506, 206,
	234, 375, 442, 477, 433, 354, 456, 457, 293, 432,
	267, 191, 329, 498, 204, 421, 221, 211, 462, 480,
	262, 404, 197, 444, 469, 218, 424, 0, 0, 508,
	199, 467, 441, 350, 290, 291, 198, 0, 405, 242,
	265, 232, 370, 464, 465, 230, 509, 208, 487, 201,
	0, 486, 363, 459, 468, 351, 341, 200, 466, 349,
	340, 296, 315, 316, 253, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 478, 0, 195, 0, 438, 479,
	510, 214, 215, 216, 0, 252, 256, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 454, 472,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 505,
	504, 362, 279, 434, 295, 332, 0, 0, 380, 414,
	219, 476, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 342, 426, 473, 297, 309, 312, 302,
	321, 0, 322, 298, 299, 304, 306, 307, 308, 313,
	314, 318, 324, 0, 187, 202, 328, 0, 402, 261,
	507, 485, 481, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 270, 275, 278, 283, 284,
	287, 292, 338, 344, 345, 346, 347, 364, 365, 366,
	369, 372, 373, 376, 378, 379, 382, 389, 390, 391,
	392, 394, 396, 403, 408, 416, 417, 418, 419, 420,
	422, 423, 428, 429, 430, 431, 439, 443, 461, 463,
	475, 489, 494, 271, 470, 495, 0, 337, 0, 0,
	339, 254, 274, 285, 0, 484, 440, 207, 410, 263,
	196, 225, 210, 233, 248, 251, 289, 348, 355, 384,
	388, 268, 245, 223, 407, 220, 425, 446, 447, 448,
	450, 352, 240, 387, 0, 353, 335, 452, 453, 281,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 326, 241, 0, 0,
	385, 0, 193, 0, 427, 228, 336, 333, 458, 255,
	247, 243, 227, 282, 343, 383, 445, 377, 0, 330,
	0, 0, 436, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	226, 192, 368, 437, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 311, 320, 319, 300, 301,
	303, 305, 310, 317, 323, 0, 0, 0, 0, 0,
	239, 286, 246, 238, 455, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 357, 231, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 294, 188, 205, 0, 0, 367, 409,
	415, 0, 0, 0, 229, 0, 413, 381, 474, 213,
	257, 406, 386, 411, 393, 260, 0, 0, 412, 331,
	460, 400, 471, 492, 493, 237, 361, 482, 449, 488,
	506, 206, 234, 375, 442, 477, 433, 354, 456, 457,
	293, 432, 267, 191, 329, 498, 204, 421, 221, 211,
	462, 480, 262, 404, 197, 444, 469, 218, 424, 0,
	0, 508, 199, 467, 441, 350, 290, 291, 198, 0,
	405, 242, 265, 232, 370, 464, 465, 230, 509, 208,
	487, 201, 0, 486, 363, 459, 468, 351, 341, 200,
	466, 349, 340, 296, 315, 316, 253, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 478, 0, 195, 0,
	438, 479, 510, 214, 215, 216, 0, 252, 256, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 0,
	454, 472, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 505, 504, 362, 279, 434, 295, 332, 0, 0,
	380, 414, 219, 476, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 342, 426, 473, 297, 309,
	312, 302, 321, 0, 322, 298, 299, 304, 306, 307,
	308, 313, 314, 318, 324, 0, 187, 202, 328, 1601,
	402, 261, 507, 485, 481, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 270, 275, 278,
	283, 284, 287, 292, 338, 344, 345, 346, 347, 364,
	365, 366, 369, 372, 373, 376, 378, 379, 382, 389,
	390, 391, 392, 394, 396, 403, 408, 416, 417, 418,
	419, 420, 422, 423, 428, 429, 430, 431, 439, 443,
	461, 463, 475, 489, 494, 271, 470, 495, 0, 337,
	0, 0, 339, 254, 274, 285, 0, 484, 440, 207,
	410, 263, 196, 225, 210, 233, 248, 251, 289, 348,
	355, 384, 388, 268, 245, 223, 407, 220, 425, 446,
	447, 448, 450, 352, 240, 387, 0, 353, 335, 452,
	453, 281, 451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 1477, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 326, 241,
	0, 0, 385, 0, 193, 0, 427, 228, 336, 333,
	458, 255, 247, 243, 227, 282, 343, 383, 445, 377,
	0, 330, 0, 0, 436, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 437, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 239, 286, 246, 238, 455, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	231, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 409, 415, 0, 0, 0, 229, 0, 413, 381,
	474, 213, 257, 406, 386, 411, 393, 260, 0, 0,
	412, 331, 460, 400, 471, 492, 493, 237, 361, 482,
	449, 488, 506, 206, 234, 375, 442, 477, 433, 354,
	456, 457, 293, 432, 267, 191, 329, 498, 204, 421,
	221, 211, 462, 480, 262, 404, 197, 444, 469, 218,
	424, 0, 0, 508, 199, 467, 441, 350, 290, 291,
	198, 0, 405, 242, 265, 232, 370, 464, 465, 230,
	509, 208, 487, 201, 0, 486, 363, 459, 468, 351,
	341, 200, 466, 349, 340, 296, 315, 316, 253, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 478, 0,
	195, 0, 438, 479, 510, 214, 215, 216, 0, 252,
	256, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 454, 472, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 505, 504, 362, 279, 434, 295, 332,
	0, 0, 380, 414, 219, 476, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 342, 426, 473,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 261, 507, 485, 481, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 408, 416,
	417, 418, 419, 420, 422, 423, 428, 429, 430, 431,
	439, 443, 461, 463, 475, 489, 494, 271, 470, 495,
	0, 337, 0, 0, 339, 254, 274, 285, 0, 484,
	440, 207, 410, 263, 196, 225, 210, 233, 248, 251,
	289, 348, 355, 384, 388, 268, 245, 223, 407, 220,
	425, 446, 447, 448, 450, 352, 240, 387, 0, 353,
	335, 452, 453, 281, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 1475, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	326, 241, 0, 0, 385, 0, 193, 0, 427, 228,
	336, 333, 458, 255, 247, 243, 227, 282, 343, 383,
	445, 377, 0, 330, 0, 0, 436, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 368, 437, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 311,
	320, 319, 300, 301, 303, 305, 310, 317, 323, 0,
	0, 0, 0, 0, 239, 286, 246, 238, 455, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 357, 231, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 294, 188, 205,
	0, 0, 367, 409, 415, 0, 0, 0, 229, 0,
	413, 381, 474, 213, 257, 406, 386, 411, 393, 260,
	0, 0, 412, 331, 460, 400, 471, 492, 493, 237,
	361, 482, 449, 488, 506, 206, 234, 375, 442, 477,
	433, 354, 456, 457, 293, 432, 267, 191, 329, 498,
	204, 421, 221, 211, 462, 480, 262, 404, 197, 444,
	469, 218, 424, 0, 0, 508, 199, 467, 441, 350,
	290, 291, 198, 0, 405, 242, 265, 232, 370, 464,
	465, 230, 509, 208, 487, 201, 0, 486, 363, 459,
	468, 351, 341, 200, 466, 349, 340, 296, 315, 316,
	253, 276, 398, 334, 399, 277, 359, 358, 360, 194,
	478, 0, 195, 0, 438, 479, 510, 214, 215, 216,
	0, 252, 256, 264, 266, 272, 273, 280, 327, 374,
	397, 395, 401, 0, 454, 472, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 505, 504, 362, 279, 434,
	295, 332, 0, 0, 380, 414, 219, 476, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 342,
	426, 473, 297, 309, 312, 302, 321, 0, 322, 298,
	299, 304, 306, 307, 308, 313, 314, 318, 324, 0,
	187, 202, 328, 0, 402, 261, 507, 485, 481, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 270, 275, 278, 283, 284, 287, 292, 338, 344,
	345, 346, 347, 364, 365, 366, 369, 372, 373, 376,
	378, 379, 382, 389, 390, 391, 392, 394, 396, 403,
	408, 416, 417, 418, 419, 420, 422, 423, 428, 429,
	430, 431, 439, 443, 461, 463, 475, 489, 494, 271,
	470, 495, 0, 337, 0, 0, 339, 254, 274, 285,
	0, 484, 440, 207, 410, 263, 196, 225, 210, 233,
	248, 251, 289, 348, 355, 384, 388, 268, 245, 223,
	407, 220, 425, 446, 447, 448, 450, 352, 240, 387,
	0, 353, 335, 452, 453, 281, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	1473, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 326, 241, 0, 0, 385, 0, 193, 0,
	427, 228, 336, 333, 458, 255, 247, 243, 227, 282,
	343, 383, 445, 377, 0, 330, 0, 0, 436, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 437,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 0, 0, 0, 0, 0, 239, 286, 246, 238,
	455, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 231, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 409, 415, 0, 0, 0,
	229, 0, 413, 381, 474, 213, 257, 406, 386, 411,
	393, 260, 0, 0, 412, 331, 460, 400, 471, 492,
	493, 237, 361, 482, 449, 488, 506, 206, 234, 375,
	442, 477, 433, 354, 456, 457, 293, 432, 267, 191,
	329, 498, 204, 421, 221, 211, 462, 480, 262, 404,
	197, 444, 469, 218, 424, 0, 0, 508, 199, 467,
	441, 350, 290, 291, 198, 0, 405, 242, 265, 232,
	370, 464, 465, 230, 509, 208, 487, 201, 0, 486,
	363, 459, 468, 351, 341, 200, 466, 349, 340, 296,
	315, 316, 253, 276, 398, 334, 399, 277, 359, 358,
	360, 194, 478, 0, 195, 0, 438, 479, 510, 214,
	215, 216, 0, 252, 256, 264, 266, 272, 273, 280,
	327, 374, 397, 395, 401, 0, 454, 472, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 505, 504, 362,
	279, 434, 295, 332, 0, 0, 380, 414, 219, 476,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 342, 426, 473, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 261, 507, 485,
	481, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 408, 416, 417, 418, 419, 420, 422, 423,
	428, 429, 430, 431, 439, 443, 461, 463, 475, 489,
	494, 271, 470, 495, 0, 337, 0, 0, 339, 254,
	274, 285, 0, 484, 440, 207, 410, 263, 196, 225,
	210, 233, 248, 251, 289, 348, 355, 384, 388, 268,
	245, 223, 407, 220, 425, 446, 447, 448, 450, 352,
	240, 387, 0, 353, 335, 452, 453, 281, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 1471, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 326, 241, 0, 0, 385, 0,
	193, 0, 427, 228, 336, 333, 458, 255, 247, 243,
	227, 282, 343, 383, 445, 377, 0, 330, 0, 0,
	436, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 226, 192,
	368, 437, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 311, 320, 319, 300, 301, 303, 305,
	310, 317, 323, 0, 0, 0, 0, 0, 239, 286,
	246, 238, 455, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 357, 231, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 294, 188, 205, 0, 0, 367, 409, 415, 0,
	0, 0, 229, 0, 413, 381, 474, 213, 257, 406,
	386, 411, 393, 260, 0, 0, 412, 331, 460, 400,
	471, 492, 493, 237, 361, 482, 449, 488, 506, 206,
	234, 375, 442, 477, 433, 354, 456, 457, 293, 432,
	267, 191, 329, 498, 204, 421, 221, 211, 462, 480,
	262, 404, 197, 444, 469, 218, 424, 0, 0, 508,
	199, 467, 441, 350, 290, 291, 198, 0, 405, 242,
	265, 232, 370, 464, 465, 230, 509, 208, 487, 201,
	0, 486, 363, 459, 468, 351, 341, 200, 466, 349,
	340, 296, 315, 316, 253, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 478, 0, 195, 0, 438, 479,
	510, 214, 215, 216, 0, 252, 256, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 454, 472,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 505,
	504, 362, 279, 434, 295, 332, 0, 0, 380, 414,
	219, 476, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 342, 426, 473, 297, 309, 312, 302,
	321, 0, 322, 298, 299, 304, 306, 307, 308, 313,
	314, 318, 324, 0, 187, 202, 328, 0, 402, 261,
	507, 485, 481, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 270, 275, 278, 283, 284,
	287, 292, 338, 344, 345, 346, 347, 364, 365, 366,
	369, 372, 373, 376, 378, 379, 382, 389, 390, 391,
	392, 394, 396, 403, 408, 416, 417, 418, 419, 420,
	422, 423, 428, 429, 430, 431, 439, 443, 461, 463,
	475, 489, 494, 271, 470, 495, 0, 337, 0, 0,
	339, 254, 274, 285, 0, 484, 440, 207, 410, 263,
	196, 225, 210, 233, 248, 251, 289, 348, 355, 384,
	388, 268, 245, 223, 407, 220, 425, 446, 447, 448,
	450, 352, 240, 387, 0, 353, 335, 452, 453, 281,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 1469, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 326, 241, 0, 0,
	385, 0, 193, 0, 427, 228, 336, 333, 458, 255,
	247, 243, 227, 282, 343, 383, 445, 377, 0, 330,
	0, 0, 436, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	226, 192, 368, 437, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 311, 320, 319, 300, 301,
	303, 305, 310, 317, 323, 0, 0, 0, 0, 0,
	239, 286, 246, 238, 455, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 357, 231, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 294, 188, 205, 0, 0, 367, 409,
	415, 0, 0, 0, 229, 0, 413, 381, 474, 213,
	257, 406, 386, 411, 393, 260, 0, 0, 412, 331,
	460, 400, 471, 492, 493, 237, 361, 482, 449, 488,
	506, 206, 234, 375, 442, 477, 433, 354, 456, 457,
	293, 432, 267, 191, 329, 498, 204, 421, 221, 211,
	462, 480, 262, 404, 197, 444, 469, 218, 424, 0,
	0, 508, 199, 467, 441, 350, 290, 291, 198, 0,
	405, 242, 265, 232, 370, 464, 465, 230, 509, 208,
	487, 201, 0, 486, 363, 459, 468, 351, 341, 200,
	466, 349, 340, 296, 315, 316, 253, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 478, 0, 195, 0,
	438, 479, 510, 214, 215, 216, 0, 252, 256, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 0,
	454, 472, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 505, 504, 362, 279, 434, 295, 332, 0, 0,
	380, 414, 219, 476, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 342, 426, 473, 297, 309,
	312, 302, 321, 0, 322, 298, 299, 304, 306, 307,
	308, 313, 314, 318, 324, 0, 187, 202, 328, 0,
	402, 261, 507, 485, 481, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 270, 275, 278,
	283, 284, 287, 292, 338, 344, 345, 346, 347, 364,
	365, 366, 369, 372, 373, 376, 378, 379, 382, 389,
	390, 391, 392, 394, 396, 403, 408, 416, 417, 418,
	419, 420, 422, 423, 428, 429, 430, 431, 439, 443,
	461, 463, 475, 489, 494, 271, 470, 495, 0, 337,
	0, 0, 339, 254, 274, 285, 0, 484, 440, 207,
	410, 263, 196, 225, 210, 233, 248, 251, 289, 348,
	355, 384, 388, 268, 245, 223, 407, 220, 425, 446,
	447, 448, 450, 352, 240, 387, 0, 353, 335, 452,
	453, 281, 451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 1465, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 326, 241,
	0, 0, 385, 0, 193, 0, 427, 228, 336, 333,
	458, 255, 247, 243, 227, 282, 343, 383, 445, 377,
	0, 330, 0, 0, 436, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 437, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 239, 286, 246, 238, 455, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	231, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 409, 415, 0, 0, 0, 229, 0, 413, 381,
	474, 213, 257, 406, 386, 411, 393, 260, 0, 0,
	412, 331, 460, 400, 471, 492, 493, 237, 361, 482,
	449, 488, 506, 206, 234, 375, 442, 477, 433, 354,
	456, 457, 293, 432, 267, 191, 329, 498, 204, 421,
	221, 211, 462, 480, 262, 404, 197, 444, 469, 218,
	424, 0, 0, 508, 199, 467, 441, 350, 290, 291,
	198, 0, 405, 242, 265, 232, 370, 464, 465, 230,
	509, 208, 487, 201, 0, 486, 363, 459, 468, 351,
	341, 200, 466, 349, 340, 296, 315, 316, 253, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 478, 0,
	195, 0, 438, 479, 510, 214, 215, 216, 0, 252,
	256, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 454, 472, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 505, 504, 362, 279, 434, 295, 332,
	0, 0, 380, 414, 219, 476, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 342, 426, 473,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 261, 507, 485, 481, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 408, 416,
	417, 418, 419, 420, 422, 423, 428, 429, 430, 431,
	439, 443, 461, 463, 475, 489, 494, 271, 470, 495,
	0, 337, 0, 0, 339, 254, 274, 285, 0, 484,
	440, 207, 410, 263, 196, 225, 210, 233, 248, 251,
	289, 348, 355, 384, 388, 268, 245, 223, 407, 220,
	425, 446, 447, 448, 450, 352, 240, 387, 0, 353,
	335, 452, 453, 281, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 1463, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	326, 241, 0, 0, 385, 0, 193, 0, 427, 228,
	336, 333, 458, 255, 247, 243, 227, 282, 343, 383,
	445, 377, 0, 330, 0, 0, 436, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 368, 437, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 311,
	320, 319, 300, 301, 303, 305, 310, 317, 323, 0,
	0, 0, 0, 0, 239, 286, 246, 238, 455, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 357, 231, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 294, 188, 205,
	0, 0, 367, 409, 415, 0, 0, 0, 229, 0,
	413, 381, 474, 213, 257, 406, 386, 411, 393, 260,
	0, 0, 412, 331, 460, 400, 471, 492, 493, 237,
	361, 482, 449, 488, 506, 206, 234, 375, 442, 477,
	433, 354, 456, 457, 293, 432, 267, 191, 329, 498,
	204, 421, 221, 211, 462, 480, 262, 404, 197, 444,
	469, 218, 424, 0, 0, 508, 199, 467, 441, 350,
	290, 291, 198, 0, 405, 242, 265, 232, 370, 464,
	465, 230, 509, 208, 487, 201, 0, 486, 363, 459,
	468, 351, 341, 200, 466, 349, 340, 296, 315, 316,
	253, 276, 398, 334, 399, 277, 359, 358, 360, 194,
	478, 0, 195, 0, 438, 479, 510, 214, 215, 216,
	0, 252, 256, 264, 266, 272, 273, 280, 327, 374,
	397, 395, 401, 0, 454, 472, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 505, 504, 362, 279, 434,
	295, 332, 0, 0, 380, 414, 219, 476, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 342,
	426, 473, 297, 309, 312, 302, 321, 0, 322, 298,
	299, 304, 306, 307, 308, 313, 314, 318, 324, 0,
	187, 202, 328, 0, 402, 261, 507, 485, 481, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 270, 275, 278, 283, 284, 287, 292, 338, 344,
	345, 346, 347, 364, 365, 366, 369, 372, 373, 376,
	378, 379, 382, 389, 390, 391, 392, 394, 396, 403,
	408, 416, 417, 418, 419, 420, 422, 423, 428, 429,
	430, 431, 439, 443, 461, 463, 475, 489, 494, 271,
	470, 495, 0, 337, 0, 0, 339, 254, 274, 285,
	0, 484, 440, 207, 410, 263, 196, 225, 210, 233,
	248, 251, 289, 348, 355, 384, 388, 268, 245, 223,
	407, 220, 425, 446, 447, 448, 450, 352, 240, 387,
	0, 353, 335, 452, 453, 281, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	1461, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 326, 241, 0, 0, 385, 0, 193, 0,
	427, 228, 336, 333, 458, 255, 247, 243, 227, 282,
	343, 383, 445, 377, 0, 330, 0, 0, 436, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 437,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 0, 0, 0, 0, 0, 239, 286, 246, 238,
	455, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 231, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 409, 415, 0, 0, 0,
	229, 0, 413, 381, 474, 213, 257, 406, 386, 411,
	393, 260, 0, 0, 412, 331, 460, 400, 471, 492,
	493, 237, 361, 482, 449, 488, 506, 206, 234, 375,
	442, 477, 433, 354, 456, 457, 293, 432, 267, 191,
	329, 498, 204, 421, 221, 211, 462, 480, 262, 404,
	197, 444, 469, 218, 424, 0, 0, 508, 199, 467,
	441, 350, 290, 291, 198, 0, 405, 242, 265, 232,
	370, 464, 465, 230, 509, 208, 487, 201, 0, 486,
	363, 459, 468, 351, 341, 200, 466, 349, 340, 296,
	315, 316, 253, 276, 398, 334, 399, 277, 359, 358,
	360, 194, 478, 0, 195, 0, 438, 479, 510, 214,
	215, 216, 0, 252, 256, 264, 266, 272, 273, 280,
	327, 374, 397, 395, 401, 0, 454, 472, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 505, 504, 362,
	279, 434, 295, 332, 0, 0, 380, 414, 219, 476,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 342, 426, 473, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 261, 507, 485,
	481, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 408, 416, 417, 418, 419, 420, 422, 423,
	428, 429, 430, 431, 439, 443, 461, 463, 475, 489,
	494, 271, 470, 495, 0, 337, 0, 0, 339, 254,
	274, 285, 0, 484, 440, 207, 410, 263, 196, 225,
	210, 233, 248, 251, 289, 348, 355, 384, 388, 268,
	245, 223, 407, 220, 425, 446, 447, 448, 450, 352,
	240, 387, 0, 353, 335, 452, 453, 281, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 326, 241, 0, 0, 385, 0,
	193, 0, 427, 228, 336, 333, 458, 255, 247, 243,
	227, 282, 343, 383, 445, 377, 0, 330, 0, 0,
	436, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 226, 192,
	368, 437, 259, 0, 1438, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 311, 320, 319, 300, 301, 303, 305,
	310, 317, 323, 0, 0, 0, 0, 0, 239, 286,
	246, 238, 455, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 357, 231, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 294, 188, 205, 0, 0, 367, 409, 415, 0,
	0, 0, 229, 0, 413, 381, 474, 213, 257, 406,
	386, 411, 393, 260, 0, 0, 412, 331, 460, 400,
	471, 492, 493, 237, 361, 482, 449, 488, 506, 206,
	234, 375, 442, 477, 433, 354, 456, 457, 293, 432,
	267, 191, 329, 498, 204, 421, 221, 211, 462, 480,
	262, 404, 197, 444, 469, 218, 424, 0, 0, 508,
	199, 467, 441, 350, 290, 291, 198, 0, 405, 242,
	265, 232, 370, 464, 465, 230, 509, 208, 487, 201,
	0, 486, 363, 459, 468, 351, 341, 200, 466, 349,
	340, 296, 315, 316, 253, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 478, 0, 195, 0, 438, 479,
	510, 214, 215, 216, 0, 252, 256, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 454, 472,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 505,
	504, 362, 279, 434, 295, 332, 0, 0, 380, 414,
	219, 476, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 342, 426, 473, 297, 309, 312, 302,
	321, 0, 322, 298, 299, 304, 306, 307, 308, 313,
	314, 318, 324, 0, 187, 202, 328, 0, 402, 261,
	507, 485, 481, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 270, 275, 278, 283, 284,
	287, 292, 338, 344, 345, 346, 347, 364, 365, 366,
	369, 372, 373, 376, 378, 379, 382, 389, 390, 391,
	392, 394, 396, 403, 408, 416, 417, 418, 419, 420,
	422, 423, 428, 429, 430, 431, 439, 443, 461, 463,
	475, 489, 494, 271, 470, 495, 0, 337, 0, 0,
	339, 254, 274, 285, 0, 484, 440, 207, 410, 263,
	196, 225, 210, 233, 248, 251, 289, 348, 355, 384,
	388, 268, 245, 223, 407, 220, 425, 446, 447, 448,
	450, 352, 240, 387, 0, 353, 335, 452, 453, 281,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 0,
	1339, 244, 0, 0, 0, 0, 326, 241, 0, 0,
	385, 0, 193, 0, 427, 228, 336, 333, 458, 255,
	247, 243, 227, 282, 343, 383, 445, 377, 0, 330,
	0, 0, 436, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	226, 192, 368, 437, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 311, 320, 319, 300, 301,
	303, 305, 310, 317, 323, 0, 0, 0, 0, 0,
	239, 286, 246, 238, 455, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 357, 231, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 294, 188, 205, 0, 0, 367, 409,
	415, 0, 0, 0, 229, 0, 413, 381, 474, 213,
	257, 406, 386, 411, 393, 260, 0, 0, 412, 331,
	460, 400, 471, 492, 493, 237, 361, 482, 449, 488,
	506, 206, 234, 375, 442, 477, 433, 354, 456, 457,
	293, 432, 267, 191, 329, 498, 204, 421, 221, 211,
	462, 480, 262, 404, 197, 444, 469, 218, 424, 0,
	0, 508, 199, 467, 441, 350, 290, 291, 198, 0,
	405, 242, 265, 232, 370, 464, 465, 230, 509, 208,
	487, 201, 0, 486, 363, 459, 468, 351, 341, 200,
	466, 349, 340, 296, 315, 316, 253, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 478, 0, 195, 0,
	438, 479, 510, 214, 215, 216, 0, 252, 256, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 0,
	454, 472, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 505, 504, 362, 279, 434, 295, 332, 0, 0,
	380, 414, 219, 476, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 342, 426, 473, 297, 309,
	312, 302, 321, 0, 322, 298, 299, 304, 306, 307,
	308, 313, 314, 318, 324, 0, 187, 202, 328, 0,
	402, 261, 507, 485, 481, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 270, 275, 278,
	283, 284, 287, 292, 338, 344, 345, 346, 347, 364,
	365, 366, 369, 372, 373, 376, 378, 379, 382, 389,
	390, 391, 392, 394, 396, 403, 408, 416, 417, 418,
	419, 420, 422, 423, 428, 429, 430, 431, 439, 443,
	461, 463, 475, 489, 494, 271, 470, 495, 0, 337,
	0, 0, 339, 254, 274, 285, 0, 484, 440, 207,
	410, 263, 196, 225, 210, 233, 248, 251, 289, 348,
	355, 384, 388, 268, 245, 223, 407, 220, 425, 446,
	447, 448, 450, 352, 240, 387, 0, 353, 335, 452,
	453, 281, 451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 326, 241,
	0, 0, 385, 0, 193, 0, 427, 228, 336, 333,
	458, 255, 247, 243, 227, 282, 343, 383, 445, 377,
	0, 330, 0, 0, 436, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 437, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1140, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 239, 286, 246, 238, 455, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	231, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 409, 415, 0, 0, 0, 229, 0, 413, 381,
	474, 213, 257, 406, 386, 411, 393, 260, 0, 0,
	412, 331, 460, 400, 471, 492, 493, 237, 361, 482,
	449, 488, 506, 206, 234, 375, 442, 477, 433, 354,
	456, 457, 293, 432, 267, 191, 329, 498, 204, 421,
	221, 211, 462, 480, 262, 404, 197, 444, 469, 218,
	424, 0, 0, 508, 199, 467, 441, 350, 290, 291,
	198, 0, 405, 242, 265, 232, 370, 464, 465, 230,
	509, 208, 487, 201, 0, 486, 363, 459, 468, 351,
	341, 200, 466, 349, 340, 296, 315, 316, 253, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 478, 0,
	195, 0, 438, 479, 510, 214, 215, 216, 0, 252,
	256, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 454, 472, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 505, 504, 362, 279, 434, 295, 332,
	0, 0, 380, 414, 219, 476, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 342, 426, 473,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 261, 507, 485, 481, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 408, 416,
	417, 418, 419, 420, 422, 423, 428, 429, 430, 431,
	439, 443, 461, 463, 475, 489, 494, 271, 470, 495,
	0, 337, 0, 0, 339, 254, 274, 285, 0, 484,
	440, 207, 410, 263, 196, 225, 210, 233, 248, 251,
	289, 348, 355, 384, 388, 268, 245, 223, 407, 220,
	425, 446, 447, 448, 450, 352, 240, 387, 0, 353,
	335, 452, 453, 281, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	326, 241, 0, 0, 385, 0, 193, 0, 427, 228,
	336, 333, 458, 255, 247, 243, 227, 282, 343, 383,
	445, 377, 0, 330, 0, 0, 436, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 368, 437, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 311,
	320, 319, 300, 301, 303, 305, 310, 317, 323, 0,
	0, 0, 0, 0, 239, 286, 246, 238, 455, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 357, 231, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 294, 188, 205,
	0, 0, 367, 409, 415, 0, 0, 0, 229, 0,
	413, 381, 474, 213, 257, 406, 386, 411, 393, 260,
	0, 0, 412, 331, 460, 400, 471, 492, 493, 237,
	361, 482, 449, 488, 506, 206, 234, 375, 442, 477,
	433, 354, 456, 457, 293, 432, 267, 191, 329, 498,
	204, 421, 221, 211, 462, 480, 262, 404, 197, 444,
	469, 218, 424, 0, 0, 508, 199, 467, 441, 350,
	290, 291, 198, 0, 405, 242, 265, 232, 370, 464,
	465, 230, 509, 208, 487, 201, 0, 486, 363, 459,
	468, 351, 341, 200, 466, 349, 340, 296, 315, 316,
	253, 276, 398, 334, 399, 277, 359, 358, 360, 194,
	478, 0, 195, 0, 438, 479, 510, 214, 215, 216,
	0, 252, 256, 264, 266, 272, 273, 280, 327, 374,
	397, 395, 401, 0, 454, 472, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 505, 504, 362, 279, 434,
	295, 332, 0, 0, 380, 414, 219, 476, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 342,
	426, 473, 297, 309, 312, 302, 321, 0, 322, 298,
	299, 304, 306, 307, 308, 313, 314, 318, 324, 0,
	187, 202, 328, 0, 402, 261, 507, 485, 481, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 763,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 270, 275, 278, 283, 284, 287, 292, 338, 344,
	345, 346, 347, 364, 365, 366, 369, 372, 373, 376,
	378, 379, 382, 389, 390, 391, 392, 394, 396, 403,
	408, 416, 417, 418, 419, 420, 422, 423, 428, 429,
	430, 431, 439, 443, 461, 463, 475, 489, 494, 271,
	470, 495, 0, 337, 0, 0, 339, 254, 274, 285,
	0, 484, 440, 207, 410, 263, 196, 225, 210, 233,
	248, 251, 289, 348, 355, 384, 388, 268, 245, 223,
	407, 220, 425, 446, 447, 448, 450, 352, 240, 387,
	0, 353, 335, 452, 453, 281, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 326, 241, 0, 0, 385, 0, 193, 0,
	427, 228, 336, 333, 458, 255, 247, 243, 227, 282,
	343, 383, 445, 377, 0, 330, 0, 0, 436, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 437,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 0, 0, 0, 0, 0, 239, 286, 246, 238,
	455, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	0, 269, 0, 357, 231, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 409, 415, 0, 0, 0,
	229, 0, 413, 381, 474, 213, 257, 406, 386, 411,
	393, 260, 0, 0, 412, 331, 460, 400, 471, 492,
	493, 237, 361, 482, 449, 488, 506, 206, 234, 375,
	442, 477, 433, 354, 456, 457, 293, 432, 267, 191,
	329, 498, 204, 421, 221, 211, 462, 480, 262, 404,
	197, 444, 469, 218, 424, 0, 0, 508, 199, 467,
	441, 350, 290, 291, 198, 0, 405, 242, 265, 232,
	370, 464, 465, 230, 509, 208, 487, 201, 0, 486,
	363, 459, 468, 351, 341, 200, 466, 349, 340, 296,
	315, 316, 253, 276, 398, 334, 399, 277, 359, 358,
	360, 194, 478, 0, 195, 0, 438, 479, 510, 214,
	215, 216, 0, 252, 256, 264, 266, 272, 273, 280,
	327, 374, 397, 395, 401, 0, 454, 472, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 505, 504, 362,
	279, 434, 295, 332, 0, 0, 380, 414, 219, 476,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 342, 426, 473, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 261, 507, 485,
	481, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 408, 416, 417, 418, 419, 420, 422, 423,
	428, 429, 430, 431, 439, 443, 461, 463, 475, 489,
	494, 585, 470, 495, 0, 337, 0, 0, 339, 254,
	274, 285, 0, 484, 440, 207, 410, 263, 196, 225,
	210, 233, 248, 251, 289, 348, 355, 384, 388, 268,
	245, 223, 407, 220, 425, 446, 447, 448, 450, 352,
	240, 387, 0, 353, 335, 452, 453, 281, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 326, 241, 0, 0, 385, 0,
	193, 0, 427, 228, 336, 333, 458, 255, 247, 243,
	227, 282, 343, 383, 445, 377, 0, 330, 0, 0,
	436, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 226, 192,
	368, 437, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 311, 320, 319, 300, 301, 303, 305,
	310, 317, 323, 0, 0, 0, 0, 0, 239, 286,
	246, 238, 455, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 357, 231, 0, 0, 532,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 294, 188, 205, 0, 0, 367, 409, 415, 0,
	0, 0, 229, 0, 413, 381, 474, 213, 257, 406,
	386, 411, 393, 260, 0, 0, 412, 331, 460, 400,
	471, 492, 493, 237, 361, 482, 449, 488, 506, 206,
	234, 375, 442, 477, 433, 354, 456, 457, 293, 432,
	267, 191, 329, 498, 204, 421, 221, 211, 462, 480,
	262, 404, 197, 444, 469, 218, 424, 0, 0, 508,
	199, 467, 441, 350, 290, 291, 198, 0, 405, 242,
	265, 232, 370, 464, 465, 230, 509, 208, 487, 201,
	0, 486, 363, 459, 468, 351, 341, 200, 466, 349,
	340, 296, 315, 316, 253, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 478, 0, 195, 0, 438, 479,
	510, 214, 215, 216, 0, 252, 256, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 454, 472,
	483, 490, 496, 497, 499, 500, 501, 502, 503, 505,
	504, 362, 279, 434, 295, 332, 0, 0, 380, 414,
	219, 476, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 342, 426, 473, 297, 309, 312, 302,
	321, 0, 322, 298, 299, 304, 306, 307, 308, 313,
	314, 318, 324, 0, 187, 202, 328, 0, 402, 261,
	507, 485, 481, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 270, 275, 278, 283, 284,
	287, 292, 338, 344, 345, 346, 347, 364, 365, 366,
	369, 372, 373, 376, 378, 379, 382, 389, 390, 391,
	392, 394, 396, 403, 408, 416, 417, 418, 419, 420,
	422, 423, 428, 429, 430, 431, 439, 443, 461, 463,
	475, 489, 494, 271, 470, 495, 0, 337, 0, 0,
	339, 254, 274, 285, 0, 484, 440, 207, 410, 263,
	196, 225, 210, 233, 248, 251, 289, 348, 355, 384,
	388, 268, 245, 223, 407, 220, 425, 446, 447, 448,
	450, 352, 240, 387, 0, 353, 335, 452, 453, 281,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 326, 241, 0, 0,
	385, 0, 193, 0, 427, 228, 336, 333, 458, 255,
	247, 243, 227, 282, 343, 383, 445, 377, 0, 330,
	0, 0, 436, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	226, 192, 368, 437, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 311, 320, 319, 300, 301,
	303, 305, 310, 317, 323, 0, 0, 0, 0, 0,
	239, 286, 246, 238, 455, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 357, 231, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 294, 188, 205, 0, 0, 367, 409,
	415, 0, 0, 0, 229, 0, 413, 381, 474, 213,
	257, 406, 386, 411, 393, 260, 0, 0, 412, 331,
	460, 400, 471, 492, 493, 237, 361, 482, 449, 488,
	506, 206, 234, 375, 442, 477, 433, 354, 456, 457,
	293, 432, 267, 191, 329, 498, 204, 421, 221, 211,
	462, 480, 262, 404, 197, 444, 469, 218, 424, 0,
	0, 508, 199, 467, 441, 350, 290, 291, 198, 0,
	405, 242, 265, 232, 370, 464, 465, 230, 509, 208,
	487, 201, 0, 486, 363, 459, 468, 351, 341, 200,
	466, 349, 340, 296, 315, 316, 253, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 478, 0, 195, 0,
	438, 479, 510, 214, 215, 216, 0, 252, 256, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 0,
	454, 472, 483, 490, 496, 497, 499, 500, 501, 502,
	503, 505, 504, 362, 279, 434, 295, 332, 0, 0,
	380, 414, 219, 476, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 342, 426, 473, 297, 309,
	312, 302, 321, 0, 322, 298, 299, 304, 306, 307,
	308, 313, 314, 318, 324, 0, 187, 202, 328, 0,
	402, 261, 507, 485, 481, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 270, 275, 278,
	283, 284, 287, 292, 338, 344, 345, 346, 347, 2869,
	365, 366, 369, 372, 373, 376, 378, 379, 382, 389,
	390, 391, 392, 394, 396, 403, 408, 416, 417, 418,
	419, 420, 422, 423, 428, 429, 430, 431, 439, 443,
	461, 463, 475, 489, 494, 271, 470, 495, 0, 337,
	0, 0, 339, 254, 274, 285, 0, 484, 440, 207,
	410, 263, 196, 225, 210, 233, 248, 251, 289, 348,
	355, 384, 388, 268, 245, 223, 407, 220, 425, 446,
	447, 448, 450, 352, 240, 387, 0, 353, 335, 452,
	453, 281, 451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 326, 241,
	0, 0, 385, 0, 193, 0, 427, 228, 336, 333,
	458, 255, 247, 243, 227, 282, 343, 383, 445, 377,
	0, 330, 0, 0, 436, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 437, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 239, 286, 246, 238, 455, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	231, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 409, 415, 0, 0, 0, 229, 0, 413, 381,
	474, 213, 257, 406, 386, 411, 393, 260, 0, 0,
	412, 331, 460, 400, 471, 492, 493, 237, 361, 482,
	449, 488, 506, 206, 234, 375, 442, 477, 433, 354,
	456, 457, 293, 432, 267, 191, 329, 498, 204, 421,
	221, 211, 462, 480, 262, 404, 197, 444, 469, 218,
	424, 0, 0, 508, 199, 467, 441, 350, 290, 291,
	198, 0, 405, 242, 265, 232, 370, 464, 465, 230,
	509, 208, 487, 201, 0, 486, 363, 459, 468, 351,
	341, 200, 466, 349, 340, 296, 315, 316, 253, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 478, 0,
	195, 0, 438, 479, 510, 214, 215, 216, 0, 252,
	256, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 454, 472, 483, 490, 496, 497, 499, 500,
	501, 502, 503, 505, 504, 362, 279, 434, 295, 332,
	0, 0, 380, 414, 219, 476, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 342, 426, 473,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 261, 507, 485, 481, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 408, 416,
	417, 418, 419, 420, 422, 423, 428, 429, 430, 431,
	439, 443, 461, 463, 475, 489, 494, 271, 470, 495,
	0, 337, 0, 0, 339, 254, 274, 285, 0, 484,
	440, 207, 410, 263, 196, 225, 210, 233, 248, 251,
	289, 348, 355, 384, 388, 268, 245, 223, 407, 220,
	425, 446, 447, 448, 450, 352, 240, 387, 0, 353,
	335, 452, 453, 281, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	326, 241, 0, 0, 385, 0, 193, 0, 427, 228,
	336, 333, 458, 255, 247, 243, 227, 282, 343, 383,
	445, 377, 0, 330, 0, 0, 436, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 368, 437, 259, 0,
	0, 0, 0, 184, 2535, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 311,
	320, 319, 300, 301, 303, 305, 310, 317, 323, 0,
	0, 0, 0, 0, 239, 286, 246, 238, 455, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 357, 231, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 294, 188, 205,
	0, 0, 367, 409, 415, 0, 0, 0, 229, 0,
	413, 381, 474, 213, 257, 406, 386, 411, 393, 260,
	0, 0, 412, 331, 460, 400, 471, 492, 493, 237,
	361, 482, 449, 488, 506, 206, 234, 375, 442, 477,
	433, 354, 456, 457, 293, 432, 267, 191, 329, 498,
	204, 421, 221, 211, 462, 480, 262, 404, 197, 444,
	469, 218, 424, 0, 0, 508, 199, 467, 441, 350,
	290, 291, 198, 0, 405, 242, 265, 232, 370, 464,
	465, 230, 509, 208, 487, 201, 0, 486, 363, 459,
	468, 351, 341, 200, 466, 349, 340, 296, 315, 316,
	253, 276, 398, 334, 399, 277, 359, 358, 360, 194,
	478, 0, 195, 0, 438, 479, 510, 214, 215, 216,
	0, 252, 256, 264, 266, 272, 273, 280, 327, 374,
	397, 395, 401, 0, 454, 472, 483, 490, 496, 497,
	499, 500, 501, 502, 503, 505, 504, 362, 279, 434,
	295, 332, 0, 0, 380, 414, 219, 476, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 342,
	426, 473, 297, 309, 312, 302, 321, 0, 322, 298,
	299, 304, 306, 307, 308, 313, 314, 318, 324, 0,
	187, 202, 328, 0, 402, 261, 507, 485, 481, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 270, 275, 278, 283, 284, 287, 292, 338, 344,
	345, 346, 347, 364, 365, 366, 369, 372, 373, 376,
	378, 379, 382, 389, 390, 391, 392, 394, 396, 403,
	408, 416, 417, 418, 419, 420, 422, 423, 428, 429,
	430, 431, 439, 443, 461, 463, 475, 489, 494, 271,
	470, 495, 0, 337, 0, 0, 339, 254, 274, 285,
	0, 484, 440, 207, 410, 263, 196, 225, 210, 233,
	248, 251, 289, 348, 355, 384, 388, 268, 245, 223,
	407, 220, 425, 446, 447, 448, 450, 352, 240, 387,
	0, 353, 335, 452, 453, 281, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 326, 241, 0, 0, 385, 0, 193, 0,
	427, 228, 336, 333, 458, 255, 247, 243, 227, 282,
	343, 383, 445, 377, 0, 330, 0, 0, 436, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 437,
	259, 0, 0, 0, 0, 184, 2072, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 0, 0, 0, 0, 0, 239, 286, 246, 238,
	455, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 231, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 409, 415, 0, 0, 0,
	229, 0, 413, 381, 474, 213, 257, 406, 386, 411,
	393, 260, 0, 0, 412, 331, 460, 400, 471, 492,
	493, 237, 361, 482, 449, 488, 506, 206, 234, 375,
	442, 477, 433, 354, 456, 457, 293, 432, 267, 191,
	329, 498, 204, 421, 221, 211, 462, 480, 262, 404,
	197, 444, 469, 218, 424, 0, 0, 508, 199, 467,
	441, 350, 290, 291, 198, 0, 405, 242, 265, 232,
	370, 464, 465, 230, 509, 208, 487, 201, 0, 486,
	363, 459, 468, 351, 341, 200, 466, 349, 340, 296,
	315, 316, 253, 276, 398, 334, 399, 277, 359, 358,
	360, 194, 478, 0, 195, 0, 438, 479, 510, 214,
	215, 216, 0, 252, 256, 264, 266, 272, 273, 280,
	327, 374, 397, 395, 401, 0, 454, 472, 483, 490,
	496, 497, 499, 500, 501, 502, 503, 505, 504, 362,
	279, 434, 295, 332, 0, 0, 380, 414, 219, 476,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 342, 426, 473, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 261, 507, 485,
	481, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 408, 416, 417, 418, 419, 420, 422, 423,
	428, 429, 430, 431, 439, 443, 461, 463, 475, 489,
	494, 271, 470, 495, 0, 337, 0, 0, 339, 254,
	274, 285, 0, 484, 440, 207, 410, 263, 196, 225,
	210, 233, 248, 251, 289, 348, 355, 384, 388, 268,
	245, 223, 407, 220, 425, 446, 447, 448, 450, 352,
	240, 387, 0, 0, 335, 452, 453, 281,
}

var yyPact = [...]int{
	5537, -1000, -417, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2009, 1943, -1000, -1000,
	-1000, -1000, 2129, -1000, 681, 1595, -1000, 1912, 322, -1000,
	40293, 461, -1000, 39109, 459, 281, 40293, -1000, 134, -1000,
	123, 40293, 132, 38517, -1000, -1000, -282, 17195, 1854, 15,
	14, 40293, -1000, -1000, -1000, -1000, 2067, 1569, -1000, 341,
	-1000, -1000, -1000, -1000, -1000, -1000, 37925, -1000, -1000, -1000,
	1920, 1919, 2138, 601, 1844, -1000, 2003, 1569, -1000, 17195,
	2049, 1982, 16603, -1000, 16603, 373, -1000, -1000, 12449, -1000,
	-1000, 23125, 40293, 28453, 228, -1000, 1912, -1000, -1000, 300,
	-1000, 266, 1488, -1000, 1484, -1000, 697, 487, 291, 412,
	396, 288, 284, 283, 280, 274, 273, 271, 264, 303,
	-1000, 618, 618, -156, -159, 1038, 351, 351, 351, 402,
	1875, 1873, -1000, 700, -1000, 618, 618, 299, 618, 618,
	618, 618, 240, 239, 618, 618, 618, 618, 618, 618,
	618, 618, 618, 618, 618, 618, 618, 618, 618, 458,
	1912, 212, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	40293, 151, 40293, -1000, 535, 40293, 760, 760, 26, 760,
	760, 760, 760, 140, 569, 7, -1000, 131, 202, 110,
	207, 762, 129, -1000, -1000, 191, 762, 1107, -1000, 607,
	119, -1000, 760, 760, -1000, 10061, 160, 10061, 10061, -1000,
	1882, -1000, -1000, -1000, -1000, 1122, -1000, 388, -1000, -1000,
	-1000, -1000, 40293, 37333, 304, 656, -1000, -1000, -1000, 30,
	-1000, -1000, 1265, 1025, 17195, 903, -1000, 1506, 584, -1000,
	-1000, -1000, -1000, -1000, 510, 17787, 17787, 17787, 17787, -1000,
	-1000, 1513, 1513, 1513, 1513, 17787, 1513, 17787, 1513, 1513,
	1513, 1513, 17195, 1513, 1513, 1513, -1000, 1513, 1513, 1513,
	1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513,
	1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513,
	1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513,
	1513, 1513, 1513, 1513, 1513, 1513, 1513, 532, 1513, 1513,
	1513, 1513, 1513, -1000, -1000, -1000, -1000, 1513, 1513, 1513,
	1513, 1513, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 20752, -1000, 14827, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 40293, -1000, 1513, 154, 40293, 40293, 289,
	2003, 1569, -1000, 2067, 2051, 341, -1000, 2189, 1551, 1228,
	1135, 1569, 1460, 40293, -1000, 1515, -1000, -1000, -1000, 1745,
	1061, 1104, -1000, -1000, -1000, -1000, 1618, 17195, -1000, -1000,
	2121, -1000, 20160, 528, 864, 2112, 36741, -1000, 373, 373,
	1482, 11852, -18, -1000, -1000, -1000, 654, 26085, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1882, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1496, 40293, -1000, -1000, 4307, 1091, -1000, 1593, -1000, 1466,
	-1000, 1552, 17195, 1665, 452, 1091, 427, 414, 406, -1000,
	-78, -1000, -1000, -1000, -1000, -1000, 618, 618, -1000, 298,
	2047, 322, 3177, -1000, -1000, -1000, 36149, 1574, 1091, -1000,
	1572, -1000, 746, 468, 509, 509, 1091, -1000, -1000, 40293,
	1091, 740, 737, 40293, 40293, -1000, 35557, -1000, 34965, 34373,
	986, 40293, 33781, 33189, 32597, 32005, 31413, -1000, 1719, -1000,
	1720, -1000, -1000, -1000, 40293, 40293, 40293, 301, -1000, -1000,
	40293, 1091, -1000, -1000, 985, 983, 618, 618, 981, 1100,
	1099, 1098, 618, 618, 979, 1097, 27269, 204, 978, 976,
	974, 989, 1095, 185, 965, 954, 970, 40293, 1571, 40293,
	-1000, 175, 698, 416, 652, 1912, 1843, 1479, 386, 446,
	1091, 368, 368, 40293, -1000, 10658, -1000, -1000, 1073, 17195,
	-1000, 780, 762, 762, -1000, -1000, -1000, -1000, -1000, -1000,
	760, 40293, 780, -1000, -1000, -1000, 762, 760, 40293, 760,
	760, 760, 760, 762, 762, 762, 760, 40293, 40293, 40293,
	40293, 40293, 40293, 40293, 40293, 40293, 10061, 607, 760, -292,
	-1000, 1067, -1000, 1747, -1000, -1000, -1000, -1000, -1000, -1000,
	10061, 10061, -1000, -1000, -1000, -1000, 127, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -70, 1477, 30821, -1000,
	-293, -294, -297, -299, -1000, -1000, -1000, -300, -309, -1000,
	-1000, -1000, 17195, 17195, 17195, 17195, -190, -1000, 856, 17787,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 909, 721, 17787,
	17787, 17787, 17787, 17787, 17787, 17787, 17787, 17787, 17787, 17787,
	17787, 17787, 17787, 17787, 816, 6355, 6355, 584, 584, 584,
	584, -1000, 16603, 17195, 17195, 584, -1000, 1091, 30229, 16603,
	16603, 17195, 1916, 669, 1025, 40293, -1000, 1135, -1000, -1000,
	-1000, 936, -1000, 40293, 40293, 2681, 17195, 17195, 17195, 17195,
	17195, 17195, 13638, 17195, 17195, 17195, 17195, 17195, 17195, 17195,
	17195, 17195, 17195, 17195, 17195, 17195, 17195, 17195, 17195, 17195,
	17195, 17195, 17195, 17195, 17195, 17195, 17195, 17195, 17195, 13046,
	10658, 16603, 16603, 16603, 16603, 16603, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 522, 1203,
	1183, 1351, -1000, 1470, -1000, -139, 22533, 17195, 1064, 2106,
	1680, 40293, -1000, -1000, -1000, 2003, -1000, 2003, 1203, 1950,
	1769, 16603, -1000, -1000, 1950, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1197, -1000, 40293, 1460, 1962, 40293, 1763,
	1062, 359, -1000, 17195, 17195, 1457, -1000, 1648, 40293, -1000,
	-190, -1000, 29637, -1000, -1000, 9464, -1000, 40293, 254, 40293,
	-1000, 21941, 29045, 11255, -18, -1000, 11255, 1385, -1000, -11,
	-31, 14230, 580, -1000, -1000, -1000, 1038, 18971, 1224, 580,
	59, -1000, -1000, -1000, 1552, -1000, 1552, 1552, 1552, 1552,
	359, 359, 359, 359, -1000, -1000, -1000, -1000, -1000, 1570,
	1568, -1000, 1552, 1552, 1552, 1552, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1565, 1565, 1565, 1556, 1556, 346, -1000,
	17195, 241, 28453, 1956, 968, 1713, 175, 370, 1675, 1091,
	1091, 1091, 370, -1000, 1176, 1096, -1000, -401, 1443, -1000,
	-1000, 2046, -1000, -1000, 644, 791, 784, 595, 40293, 161,
	252, -1000, 344, -1000, 28453, 1091, 725, 509, 1091, -1000,
	1091, -1000, -1000, -1000, -1000, -1000, 1091, 1431, -1000, 1411,
	836, 769, 831, 768, 1431, -1000, -1000, -123, 1431, -1000,
	1431, -1000, 1431, -1000, 1431, -1000, 1431, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 664, 40293, 161, 816, -1000,
	381, -1000, -1000, 816, 816, -1000, -1000, -1000, -1000, 1058,
	1056, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -392, 40293,
	-1000, 182, 638, 245, 286, 220, 40293, 177, 1987, 1985,
	1963, 176, 235, 40293, 40293, 368, 1729, 40293, 1938, 40293,
	-1000, -1000, -1000, -1000, -1000, 1025, 40293, -1000, -1000, 760,
	760, -1000, -1000, 40293, 760, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 760, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 40293,
	-1000, -1000, -1000, -1000, 40293, -1000, -1000, -1000, -1000, -1000,
	136, -13, 305, -1000, -1000, -1000, -1000, -1000, 1998, -1000,
	1025, 749, 707, -1000, 1513, -1000, -1000, 883, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 909, 17787, 17787, 17787, 1360,
	438, 1698, 1535, 1547, 783, 783, 686, 686, 588, 588,
	588, 588, 588, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1055, -1000, 1424, -1000, 1977, 1495, 1135, -1000, 1424,
	1424, 1348, 16603, -1000, -1000, 701, -1000, 17195, 1135, -1000,
	-1000, 1135, 1135, 1422, 1414, 2104, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 928, 1713, 1713,
	1713, 1713, 1713, 17195, 1080, -1000, -1000, -1000, 2407, 2384,
	1135, 1265, 1135, 1405, -1000, 2354, 1713, 2346, 2341, 2336,
	1306, 2322, 2314, 2178, 1713, 1713, 1713, 1468, 2162, 2158,
	2154, 2150, 2097, 2018, 1961, 1955, 1935, 1713, 1135, 16603,
	16603, 1402, 1513, 521, -1000, 1424, 1135, 1135, 1424, 1424,
	10658, 1135, -1000, 40293, -1000, -285, -1000, -41, 527, 1513,
	-1000, 27269, 1135, -1000, 5958, -1000, 41477, -1000, -1000, -1000,
	-1000, -1000, 25493, 1248, 1950, -1000, -1000, 1513, 1455, -1000,
	-1000, 359, 47, 24901, -1000, -1000, 1025, 1025, 17195, -1000,
	-1000, -1000, -1000, -1000, -1000, 514, 2085, 316, 1513, -1000,
	1329, 1925, -1000, -1000, -1000, 1960, 19568, -1000, 1513, 1513,
	40293, 1461, 1325, -1000, 502, -1000, 1385, -18, -25, -1000,
	-1000, -1000, -1000, 1025, -1000, 1082, 255, 2972, -1000, 329,
	-1000, -1000, -1000, -1000, 1861, 46, -1000, -1000, -1000, 359,
	359, -1000, -1000, -1000, -1000, -1000, -1000, 1052, 1052, -1000,
	-1000, -1000, -1000, -1000, 967, -1000, -1000, -1000, 952, -1000,
	-1000, 1810, 1710, 241, -1000, -1000, 618, 1050, 1864, 40293,
	-1000, -1000, 1222, 1956, 182, 40293, 676, 1728, -1000, 1675,
	1675, 1675, 40293, -1000, -1000, -1000, -1000, -394, 53, 313,
	-1000, -1000, -1000, 403, 40293, 1447, -1000, 157, -1000, 1204,
	-1000, 40293, -1000, 1445, 1563, 1091, 1091, -1000, -1000, -1000,
	40293, 1513, -1000, -1000, -1000, -1000, 430, 1911, 1902, 161,
	157, 580, 1091, -1000, -1000, -1000, -1000, -1000, -395, 1427,
	404, 164, 270, 40293, 40293, 40293, 40293, 40293, 499, -1000,
	-1000, -1000, -1000, 145, -1000, -1000, 145, -1000, -1000, -1000,
	-1000, 214, 377, -1000, 40293, 40293, 490, -1000, -1000, -1000,
	762, -1000, -1000, 762, -1000, -1000, -1000, -1000, -1000, 1887,
	40293, -16, -363, -1000, -360, 17195, -1000, -1000, -1000, -1000,
	1138, 394, 1698, 17787, 17787, 16603, -114, 501, 501, 816,
	-1000, -1000, -1000, 17195, 17195, 1319, 658, -1000, 17195, 884,
	-1000, -1000, -1000, 17195, 17195, 17195, 1135, 243, -1000, -1000,
	-1000, -1000, -1000, 2102, -1000, 17195, 17195, 17195, -1000, -1000,
	17195, 17195, -1000, 17195, 17195, 18379, 1135, 18379, 17195, 17195,
	18379, -1000, -1000, -1000, -1000, 18379, 17195, 17195, 17195, 17195,
	17195, 17195, 17195, 17195, 17195, -1000, -1000, 1424, 1424, 16603,
	10658, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 527, -1000, 509, 509, 509, 40293, -1000, -1000, -1000,
	-1000, -1000, -1000, 1368, 2030, -1000, 1792, 1781, 2099, 2085,
	-1000, 21941, 1950, -1000, -1000, 40293, -275, -1000, 1828, 1857,
	-1000, -1000, -1000, -1000, 8867, 2003, 17195, 1711, 40293, 1513,
	-1000, 21349, 40293, 40293, 21941, 21941, 21941, 21941, 21941, -1000,
	1756, 1753, -1000, 1771, 1746, 1786, 40293, -1000, 1420, 1135,
	2051, 19568, 341, 17195, 23717, 1255, 21941, -1000, -1000, 21941,
	40293, 8270, -1000, -1000, -21, -37, -1000, -1000, -1000, -1000,
	1038, -1000, -1000, 910, 1957, 1847, -1000, -1000, -1000, -1000,
	1416, -1000, 1387, 1343, 1379, 159, -1000, 1608, 1885, 618,
	618, -1000, 950, -1000, 1091, -1000, -1000, -1000, 395, -1000,
	1934, 40293, 1704, 1703, 1702, -1000, -409, 947, 1561, 1509,
	17195, 1559, 2041, 1308, 40293, -1000, -1000, 40293, -1000, 227,
	-1000, 241, 40293, -1000, -1000, -1000, 252, 40293, -1000, 6314,
	157, -1000, -1000, -1000, -1000, -1000, -1000, 40293, 174, -1000,
	1558, 1115, -1000, -1000, 1286, -1000, -1000, -1000, -1000, 150,
	222, 135, 1048, 135, -1000, 40293, 486, 1710, 40293, -1000,
	-1000, -1000, 760, 760, -1000, -1000, 1883, -1000, 1091, 1713,
	17787, 17787, -1000, 584, -1000, 1513, 1135, 1552, 1552, -1000,
	1552, 1556, -1000, 1552, 113, 1552, 112, 1552, -1000, -1000,
	1135, 1135, 1279, 1332, -86, -1000, 1025, 17195, 1881, 1841,
	1713, -1000, 1549, 1546, 17195, 1713, 1713, 1713, -1000, 1025,
	1306, 1831, 1269, -1000, -1000, -1000, -1000, 1337, 1713, 1754,
	1135, 1135, 1361, 1361, 1361, 1361, 1361, 1351, 1351, 1351,
	1351, -1000, -1000, 1135, -1000, -1000, 1958, 1958, 1958, 1321,
	40885, 40293, -1000, -1000, -1000, -1000, 2085, 2075, 1312, -1000,
	-1000, 47, 376, -1000, 1825, 1857, -1000, 2040, 1835, 2038,
	-1000, -1000, -1000, 1025, -1000, 1921, 1242, -1000, 634, 1262,
	-1000, -1000, 16011, 1323, 1779, 493, 1321, 1278, 1925, 1670,
	1701, 2436, -1000, -1000, -1000, -1000, 1743, -1000, 1708, -1000,
	-1000, 1515, -1000, -1000, 1183, 1135, 1744, 254, 21941, 1271,
	1271, -1000, 491, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	812, 5915, 2135, -1000, 1034, -1000, 1001, -1000, 723, 714,
	-1000, 40293, 1544, -1000, 359, 1031, 359, 946, -1000, 944,
	-1000, -1000, -205, -1000, -1000, 1504, 1685, -1000, -1000, 40293,
	-1000, -1000, 40293, 40293, 40293, 1539, 2037, -1000, 17195, 1538,
	633, 1784, 40293, 40293, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 372, 618, -373, 229, 217, 618,
	618, 618, -1000, -1000, 1310, 1292, -1000, -157, -1000, 17195,
	-1000, -1000, -1000, 991, 991, -1000, 1515, -1000, -1000, -1000,
	1194, -1000, -1000, -125, 40293, 40293, 40293, 40293, -1000, 930,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 584, 17787, -1000, -1000, 359, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 17195, -1000, 17195, -1000,
	2003, 1030, 1025, 17195, 17195, -1000, 943, 939, 1713, -1000,
	-1000, -1000, 1135, 18379, -1000, 18379, -1000, 17195, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1513, 1802, 1513, 1513, 23717, -1000, -1000, 2075, 2072, 2035,
	1814, 1817, 1817, 1825, -1000, 2020, 2010, -1000, 1029, 2007,
	1027, 691, -1000, 40293, 17195, 1513, -1000, 339, 40293, 1513,
	40293, -1000, 2031, -1000, -1000, 17195, 1523, -1000, 17195, -1000,
	-1000, -1000, -1000, -1000, -1000, 6355, 2085, 1271, -1000, -1000,
	596, -1000, 17195, -1000, -1000, -1000, 1277, -1000, -1000, -1000,
	-1000, -1000, 1522, 17195, -1000, -1000, -1000, 1192, 1188, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1515, -1000, -1000,
	-1000, -1000, 252, -404, 1740, 40293, 912, -1000, 1283, 1308,
	232, 1513, 1026, 618, 618, 618, 908, 874, 27269, 325,
	-1000, 252, -1000, -166, -167, 1713, -1000, -1000, 1952, -1000,
	-1000, 10658, -1000, -1000, 1514, 1672, -1000, -1000, -1000, 173,
	-1000, 1713, 1713, 1135, -1000, 1713, 1713, 1165, 1144, -1000,
	-1000, 1269, -1000, 1116, 24309, -1000, 2006, 2005, 27861, 27861,
	527, 2072, -1000, 17195, 17195, 1789, 849, -1000, -1000, -1000,
	-1000, 1013, 1011, -1000, 1008, -1000, 2133, -1000, 1025, -1000,
	1513, -1000, 479, 1262, -1000, 2003, 1025, 40293, 1025, 40,
	2031, -1000, 1713, -1000, 1513, 1513, 1513, 1513, 1513, 1513,
	1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513,
	1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513,
	1513, 1513, 1513, 1513, 1513, 1513, 40293, 1678, -1000, -1000,
	1945, 1259, 50, -1000, 1244, -1000, -1000, 442, -1000, 17195,
	-1000, 27269, 1005, 926, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 341, 1267, -1000, 616, 40293, 40293, 1135, 279,
	-144, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	17195, 1235, -1000, -1000, -1000, -1000, -1000, 1235, 1235, -1000,
	-1000, 1025, 1265, -1000, 844, -1000, -1000, -1000, -1000, -1000,
	40293, 1262, 40293, -1000, 1221, 1135, 1513, 2003, -1000, 1202,
	-1000, 341, -1000, 1499, 1509, -1000, -1000, -1000, 15419, -1000,
	-1000, -1000, -1000, -124, 10658, 7673, 1186, -1000, -1000, 1748,
	-121, -151, 1306, 26677, -1000, -1000, -1000, -1000, -1000, 1227,
	-1000, -1000, 23717, 39701, -1000, 1700, 1303, -124, 17195, 1494,
	1135, -1000, -3, -1000, -1000, -1000, -1000, -1000, 1286, -1000,
	1733, -1000, 1135, -1000, -1000, -1000, 1169, -1000, 4006, -237,
	1696, 1695, 2098, -1000, -1000, -1000, 811, 911, -1000, -1000,
	-1000, -1000, 1654, 40293, -1000, 345, -1000, -1000, -125, -142,
	-1000, -1000, 39701, -232, 580, 6355, -1000, -1000, 2132, -1000,
	2130, 593, 593, -1000, -1000, -414, 1161, 186, -1000, -147,
	-1000, -1000, 1932, 40, -1000, -1000, -1000, 318, 924, -1000,
	-1000, 871, -414, -1000, -153, -238, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 6355, 179, 179, -1000, 1692, -1000,
	-1000, 6355, -1000, 1683, -267, -1000, -311, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2589, 2588, 25, 2, 2587, 2585, 2583, 26, 108,
	178, 23, 177, 92, 2578, 2576, 2575, 2574, 2573, 2571,
	2570, 243, 212, 206, 2569, 2566, 2565, 2564, 2563, 2562,
	2560, 2558, 2557, 2554, 204, 166, 175, 2553, 2552, 2551,
	115, 173, 84, 83, 170, 2549, 2548, 78, 2547, 2543,
	2541, 180, 179, 742, 2540, 193, 116, 40, 2539, 2538,
	2537, 2536, 2532, 2530, 2528, 2527, 2526, 2525, 2524, 2523,
	2517, 2516, 2511, 2507, 2497, 213, 2496, 2495, 15, 2490,
	80, 2486, 2485, 2482, 2480, 130, 2477, 2475, 2469, 2464,
	2463, 2462, 2461, 141, 2458, 2455, 2453, 2450, 176, 2446,
	2444, 190, 110, 135, 2442, 2441, 98, 174, 2436, 129,
	2434, 2433, 2431, 150, 2430, 4668, 2429, 66, 63, 2428,
	50, 77, 61, 60, 17, 1, 2426, 2425, 65, 79,
	2418, 94, 70, 2417, 91, 97, 2416, 2409, 10, 6,
	2407, 5, 2404, 3, 69, 2403, 2402, 121, 2401, 2398,
	2396, 86, 2391, 2390, 3175, 2389, 85, 136, 95, 74,
	2386, 36, 49, 2385, 2384, 2381, 2370, 2368, 45, 2367,
	2365, 2364, 144, 35, 162, 37, 34, 43, 134, 2363,
	143, 82, 2361, 142, 140, 2360, 48, 33, 32, 2359,
	41, 137, 122, 28, 100, 154, 2357, 2356, 55, 71,
	2354, 2353, 2352, 2348, 2346, 2343, 73, 2338, 47, 2336,
	209, 2335, 14, 2334, 44, 30, 2333, 67, 120, 68,
	29, 2332, 165, 2330, 46, 161, 128, 159, 2329, 2327,
	2325, 2324, 171, 280, 2322, 2317, 75, 164, 146, 152,
	2314, 282, 2304, 2302, 88, 1263, 2510, 24, 160, 2301,
	2298, 2910, 145, 31, 21, 2284, 123, 2274, 2271, 2269,
	181, 163, 107, 958, 105, 2266, 16, 2265, 2262, 2260,
	2259, 2258, 2257, 93, 2255, 2251, 2249, 187, 59, 7,
	156, 76, 2246, 2245, 2238, 126, 101, 2233, 158, 157,
	132, 111, 2228, 167, 149, 127, 2225, 58, 2224, 2222,
	2217, 2214, 2211, 96, 2209, 2205, 2201, 2195, 153, 147,
	125, 89, 2192, 90, 119, 148, 151, 42, 2191, 39,
	2190, 2189, 2188, 169, 20, 2186, 12, 52, 53, 22,
	102, 99, 2184, 0, 2180, 13, 168, 281, 155, 2178,
	2170, 8, 9, 11, 2168, 139, 2167, 2164, 2163, 19,
	38, 18, 4, 117, 81, 2161, 2159, 4871, 3947, 131,
	2151, 182,
}

//line sql.y:6800
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 355, 356, 356, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 333, 333,
	333, 336, 336, 32, 70, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 83, 83, 22, 23, 23, 23, 23,
	359, 359, 149, 149, 147, 147, 148, 148, 217, 217,
	24, 25, 25, 227, 227, 226, 226, 226, 228, 228,
	228, 228, 263, 263, 26, 26, 26, 26, 26, 99,
	99, 335, 335, 334, 326, 326, 325, 325, 324, 332,
	332, 331, 331, 330, 38, 39, 48, 48, 48, 48,
	49, 50, 337, 337, 299, 54, 54, 53, 53, 53,
	53, 55, 55, 52, 52, 51, 51, 301, 301, 287,
	287, 300, 300, 300, 300, 300, 300, 300, 286, 286,
	110, 110, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 348, 348, 197, 197, 197, 197, 197,
	197, 119, 119, 128, 128, 128, 128, 128, 117, 117,
	118, 116, 116, 116, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 127, 127, 123,
	123, 123, 124, 124, 124, 125, 125, 349, 349, 349,
	349, 266, 266, 266, 266, 269, 269, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 268, 268, 268, 268,
	268, 270, 270, 270, 270, 270, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 272, 272, 272, 272, 272, 272, 272, 272, 285,
	285, 273, 273, 280, 280, 281, 281, 281, 282, 282,
	282, 283, 283, 278, 278, 278, 278, 278, 278, 279,
	279, 279, 288, 313, 313, 312, 312, 310, 310, 310,
	310, 297, 297, 307, 307, 307, 307, 307, 296, 296,
	292, 292, 292, 293, 293, 294, 294, 291, 291, 295,
	295, 309, 309, 308, 308, 289, 289, 290, 290, 315,
	350, 350, 350, 350, 350, 351, 351, 316, 342, 343,
	341, 341, 341, 341, 341, 80, 80, 80, 240, 240,
	240, 305, 305, 304, 304, 304, 306, 306, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 235, 235, 235, 340,
	340, 340, 340, 340, 340, 339, 339, 339, 302, 302,
	302, 338, 338, 56, 56, 181, 181, 353, 353, 354,
	354, 354, 45, 45, 45, 45, 45, 45, 44, 44,
	44, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 46, 46, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 85,
	85, 86, 86, 86, 86, 88, 88, 88, 318, 318,
	57, 57, 3, 3, 137, 139, 140, 140, 138, 138,
	138, 138, 138, 138, 59, 59, 58, 58, 142, 141,
	143, 143, 143, 1, 1, 2, 2, 4, 4, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 284, 284, 284, 317, 317, 319, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 321, 321, 321, 60,
	60, 322, 274, 275, 276, 5, 6, 298, 320, 95,
	95, 28, 37, 37, 29, 29, 29, 29, 30, 30,
	61, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 234, 234, 242, 242, 233, 233, 256, 256,
	256, 236, 236, 236, 237, 237, 347, 347, 347, 230,
	230, 63, 63, 63, 65, 65, 66, 67, 67, 258,
	258, 259, 259, 68, 69, 81, 81, 81, 81, 81,
	81, 84, 84, 84, 15, 15, 15, 15, 77, 77,
	77, 14, 14, 64, 64, 71, 344, 344, 345, 346,
	346, 346, 346, 72, 74, 31, 31, 31, 31, 31,
	31, 105, 105, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 100, 100, 100, 94, 94,
	360, 75, 76, 76, 98, 98, 98, 91, 91, 91,
	97, 97, 97, 16, 16, 17, 216, 216, 18, 18,
	102, 102, 104, 104, 104, 104, 104, 106, 106, 106,
	106, 106, 106, 106, 101, 101, 103, 103, 103, 103,
	249, 249, 249, 248, 248, 131, 131, 133, 132, 132,
	134, 134, 135, 135, 135, 135, 179, 179, 157, 157,
	214, 214, 212, 212, 213, 213, 215, 215, 215, 215,
	218, 218, 136, 136, 136, 136, 144, 144, 145, 145,
	146, 146, 257, 257, 254, 254, 254, 253, 253, 150,
	150, 150, 152, 151, 151, 151, 151, 153, 153, 155,
	155, 154, 154, 156, 161, 161, 160, 160, 158, 158,
	158, 158, 159, 159, 159, 159, 162, 162, 115, 115,
	115, 115, 115, 115, 115, 126, 126, 126, 126, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 82, 82, 82, 231,
	231, 163, 163, 171, 171, 171, 171, 164, 164, 164,
	164, 164, 164, 164, 172, 172, 172, 178, 173, 173,
	169, 169, 169, 169, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 329,
	329, 328, 328, 327, 327, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 361, 361, 277, 277,
	277, 277, 170, 170, 170, 170, 170, 96, 96, 96,
	96, 96, 262, 262, 262, 265, 265, 265, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 184, 184, 92, 92, 182, 182, 183,
	185, 185, 180, 180, 180, 166, 166, 166, 186, 186,
	187, 187, 188, 188, 190, 189, 189, 191, 192, 192,
	192, 193, 193, 194, 194, 194, 47, 47, 47, 47,
	47, 42, 42, 42, 42, 43, 43, 43, 107, 107,
	107, 107, 109, 109, 108, 108, 78, 78, 79, 79,
	79, 113, 113, 114, 114, 114, 111, 111, 112, 112,
	210, 210, 195, 195, 195, 202, 202, 202, 198, 198,
	200, 200, 200, 201, 201, 201, 199, 207, 207, 209,
	209, 208, 208, 204, 204, 205, 205, 206, 206, 206,
	203, 203, 165, 165, 165, 165, 165, 211, 211, 211,
	211, 219, 219, 175, 175, 177, 177, 176, 130, 220,
	220, 224, 221, 221, 225, 225, 225, 225, 225, 222,
	222, 223, 223, 250, 250, 250, 229, 229, 241, 241,
	238, 238, 239, 239, 232, 232, 243, 243, 243, 73,
	174, 174, 314, 314, 311, 246, 246, 247, 247, 251,
	251, 255, 255, 252, 252, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 357, 358, 260, 261, 261,
	261,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 2, 2, 2, 1, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	5, 6, 6, 7, 7, 0, 1, 5, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 1, 0, 1,
	2, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	6, 5, 5, 2, 2, 2, 2, 3, 3, 3,
	4, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 10,
	5, 5, 5, 5, 5, 7, 7, 5, 5, 0,
	6, 5, 6, 4, 5, 0, 8, 9, 0, 3,
	0, 1, 0, 3, 8, 4, 1, 3, 3, 6,
	7, 7, 8, 4, 0, 1, 0, 1, 3, 3,
	1, 1, 2, 1, 1, 0, 2, 0, 2, 5,
	3, 7, 4, 4, 4, 4, 3, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 2, 2, 1, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 2, 2, 4, 4, 3, 0,
	1, 4, 3, 4, 4, 3, 3, 3, 2, 1,
	3, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 1, 3, 4, 3, 7,
	0, 3, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 3, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 9, 6, 6,
	6, 2, 2, 3, 3, 3, 1, 1, 1, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 5, 5, 6, 4, 4, 8, 6, 8, 6,
	8, 5, 4, 2, 2, 1, 2, 2, 2, 8,
	8, 6, 5, 4, 4, 4, 4, 4, 7, 4,
	6, 6, 6, 4, 4, 4, 7, 8, 6, 5,
	6, 8, 11, 6, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 0,
	2, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 0, 5, 5, 2, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 1, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 2, 2, 0, 3,
	0, 2, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -355, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -61, -62, -63, -65,
	-66, -67, -68, -69, -14, -64, -31, -32, -70, -71,
	-72, -73, -74, -16, -17, -18, -9, -8, -13, 9,
	10, -83, -33, 32, -38, -48, 218, -49, -39, 219,
	-50, 221, 220, 257, 222, 250, 74, 303, 304, 306,
	307, 308, 309, -84, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -10, -34, 8, -357,
	11, 434, 252, 251, 28, -12, 468, 85, -356, 601,
	-210, -195, 22, 33, 29, -194, -190, -98, -195, 20,
	18, 7, -75, -360, -75, -75, 12, 13, -75, -299,
	-301, 85, 155, 85, -75, -54, -53, -52, -51, -55,
	31, -45, -46, -323, -44, -41, 223, 220, 267, 119,
	120, 257, 258, 259, 222, 241, 256, 260, 255, 276,
	-40, 80, 33, 468, 471, -306, 219, 225, 226, 435,
	122, 121, 75, 221, -303, 357, 571, -55, 573, 101,
	103, 572, 44, 231, 574, 575, 576, 577, 240, 578,
	579, 580, 581, 587, 588, 589, 590, 123, 7, -75,
	-255, -251, -333, -245, 88, 89, 90, 465, 243, 498,
	499, 292, 80, 41, 354, 357, 571, 303, 317, 311,
	338, 330, 466, 500, 295, 244, 280, 568, 328, 131,
	573, 298, 501, 258, 362, 363, 364, 101, 306, 401,
	586, 297, 502, 584, 103, 572, 79, 51, 44, 253,
	326, 227, 322, 574, 281, 503, 476, 274, 122, 119,
	593, 36, 320, 50, 30, 583, 121, 49, 575, 146,
	504, 576, 366, 345, 562, 48, 367, 259, 505, 83,
	264, 470, 301, 570, 368, 321, 369, 291, 582, 224,
	506, 554, 370, 371, 563, 507, 346, 350, 508, 393,
	372, 600, 52, 509, 510, 564, 120, 511, 78, 577,
	315, 316, 512, 289, 242, 395, 342, 447, 454, 455,
	107, 108, 450, 109, 456, 110, 457, 458, 459, 448,
	111, 104, 449, 460, 461, 343, 344, 112, 462, 106,
	105, 451, 453, 113, 463, 240, 35, 373, 467, 293,
	58, 268, 396, 46, 348, 597, 45, 558, 513, 561,
	341, 337, 444, 53, 514, 515, 516, 517, 578, 340,
	314, 336, 592, 4, 286, 579, 62, 226, 352, 351,
	353, 275, 392, 333, 518, 519, 520, 247, 81, 521,
	323, 21, 522, 523, 374, 282, 524, 56, 525, 526,
	399, 256, 527, 54, 580, 39, 261, 594, 581, 528,
	529, 530, 531, 263, 532, 376, 533, 375, 347, 349,
	270, 377, 469, 534, 302, 319, 260, 585, 535, 248,
	569, 262, 267, 255, 400, 249, 536, 537, 538, 539,
	540, 296, 541, 542, 307, 587, 445, 43, 543, 544,
	545, 546, 290, 285, 394, 403, 61, 82, 359, 547,
	567, 313, 283, 548, 304, 55, 588, 589, 590, 277,
	591, 9, 598, 599, 379, 123, 287, 288, 47, 334,
	269, 549, 299, 550, 324, 325, 339, 312, 335, 305,
	555, 271, 380, 446, 257, 551, 402, 284, 355, 360,
	300, 473, 276, 381, 566, 472, 332, 329, 278, 552,
	382, 232, 272, 273, 553, 556, 383, 384, 294, 385,
	386, 387, 388, 389, 391, 390, 279, 471, 310, 327,
	361, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 443,
	230, -75, 230, -154, -251, 230, -222, 363, -242, 365,
	378, 373, 383, 371, -234, 374, 376, 270, -347, 393,
	230, 380, 218, 366, 375, 384, 385, 294, 391, 386,
	390, 279, 387, 388, 389, -333, 172, 576, 591, 131,
	331, 370, 368, 394, 558, -251, 305, -258, 310, -246,
	-333, -245, 308, -154, -81, 554, 222, -260, -260, -100,
	558, 560, -173, -115, 139, -126, -129, -120, -121, -167,
	-168, -169, -170, -127, -180, 161, 162, 169, 140, -178,
	-130, 26, 464, 436, 435, 172, 31, 214, 68, 69,
	438, 439, 142, 57, 411, 412, -128, 406, 413, 408,
	441, 442, 114, 443, 104, 106, 105, 444, 445, 446,
	343, 344, 447, 448, 449, 107, 108, 109, 110, 111,
	112, 113, 450, 453, 451, 452, 454, 455, 456, 461,
	462, 457, 458, 459, 460, 463, -246, -251, 235, 405,
	229, 167, 434, -122, -118, -8, -176, 404, 409, 410,
	414, 407, -333, -245, -124, -123, -163, 91, 97, 102,
	98, -352, 115, -357, 92, 93, 94, 95, 96, 116,
	117, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 44, 379, 379, -154, -75, -75, -75, -75,
	-188, -98, -190, -10, -8, -357, 8, -75, -8, -9,
	-13, -34, -36, 494, -35, -251, -195, -210, 12, 157,
	42, 50, -193, -194, -12, -8, -115, 19, 23, 24,
	-103, 163, -115, -251, -76, -103, -232, 234, -75, -75,
	-221, -263, 305, -225, 394, 393, -247, -223, -246, -244,
	-222, 392, 223, 23, 474, 138, 25, 27, 141, 172,
	126, 19, 142, 37, 225, 331, 241, 171, 237, 435,
	218, 72, 475, 406, 408, 404, 411, 437, 438, 405,
	365, 31, 13, 477, 28, 251, 24, 38, 165, 220,
	145, 478, 254, 26, 252, 114, 117, 480, 22, 75,
	246, 14, 239, 40, 16, 481, 482, 17, 235, 234,
	157, 231, 70, 11, 214, 29, 154, 66, 483, 133,
	484, 485, 486, 487, 127, 68, 155, 20, 595, 409,
	410, 33, 559, 464, 265, 167, 73, 59, 560, 139,
	407, 488, 489, 115, 490, 118, 76, 565, 135, 18,
	71, 42, 491, 266, 492, 236, 596, 493, 397, 494,
	156, 221, 434, 69, 495, 229, 378, 8, 440, 32,
	250, 238, 125, 67, 496, 230, 144, 441, 442, 233,
	128, 116, 7, 132, 34, 12, 74, 77, 412, 413,
	414, 57, 124, 468, 143, 15, 497, 398, 137, 131,
	-300, 155, -286, -290, -246, 245, -316, 241, -154, -309,
	-308, -246, -357, -99, -241, 231, 239, 238, 132, -337,
	135, 287, 405, 229, -51, -52, -222, 171, -85, 262,
	266, 86, 86, -290, -289, -288, -338, 266, 245, -315,
	-307, 237, 246, -296, 238, 239, -291, 231, 133, -338,
	-291, 236, 246, 266, 266, 123, 266, 123, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 261, -297, 147,
	-297, 472, 472, -303, -338, -338, -338, 233, 35, 35,
	-243, -291, 233, 25, -297, -297, -222, 171, -297, -297,
	-297, -297, 274, 274, -297, -297, -297, -297, -297, -297,
	-297, -297, -297, -297, -297, -297, -297, -297, -297, 230,
	-337, -107, 390, 294, 80, -53, 276, -37, -154, -241,
	231, 232, -337, 263, -154, 215, -154, -236, 155, 15,
	-236, -233, 379, 377, 364, 369, -236, -236, -236, -236,
	277, 362, -292, 231, 35, 242, 379, 277, 362, 277,
	278, 277, 278, 372, 382, 277, -256, 14, 157, 405,
	367, 371, 270, 230, 271, 232, 381, 278, -256, 92,
	-237, 155, 379, 273, -236, -236, -261, -357, -247, 331,
	-333, 561, -261, -261, 32, 89, 233, -246, -77, -246,
	92, -15, -11, -22, -21, -23, 147, -105, 379, -93,
	172, 576, 562, 563, 564, 561, 376, 569, 567, 565,
	277, 566, 86, 135, 137, 138, 4, -115, 154, -164,
	147, 148, 149, 150, 151, 152, 153, 157, 139, 141,
	155, 156, 136, 158, 159, 160, 161, 162, 163, 164,
	166, 165, 167, 168, 171, 216, 217, -121, -121, -121,
	-121, -178, -357, -357, -357, -121, -231, -357, -121, -357,
	-357, -357, -357, -184, -115, -357, -361, -357, -361, -361,
	-277, -357, -277, -357, -357, -357, -357, -357, -357, -357,
	-357, -357, -357, -357, -357, -357, -357, -357, -357, -357,
	-357, -357, -357, -357, -357, -357, -357, -357, -357, -357,
	-357, -357, -357, -357, -357, -357, -357, -357, -357, -357,
	215, -357, -357, -357, -357, -357, -277, -277, -277, -277,
	-277, 102, 97, 91, -180, 98, 92, -246, -251, -8,
	-9, -173, -260, -344, -345, -157, -154, -357, 294, -246,
	-246, 263, -193, -12, -8, -188, -194, -190, -8, -75,
	-91, -104, 63, 64, -106, 24, 38, 67, 65, 23,
	-358, 87, -358, -210, -358, 86, -36, -214, 85, 61,
	43, 92, 92, 86, 21, -189, -191, -115, 14, -249,
	4, -248, 25, -246, 92, 215, 100, 14, -155, 29,
	-154, -232, -232, 86, 305, -225, -263, -227, -226, 395,
	397, 147, -250, -246, 92, 31, 87, 86, -154, -266,
	-269, -271, -270, -272, -267, -268, 328, 329, 172, 332,
	334, 335, 336, 337, 338, 339, 340, 341, 342, 345,
	32, 253, 324, 325, 326, 327, 346, 347, 348, 349,
	350, 351, 352, 353, 311, 330, 466, 312, 313, 314,
	315, 316, 317, 319, 320, 321, 322, 323, -336, -333,
	85, 87, 86, -273, 85, -115, -107, 230, -333, 231,
	231, 231, -75, 434, -297, -297, 261, 19, -44, -41,
	-323, 18, -40, -41, 223, 119, 120, 220, 85, -286,
	85, -295, -336, -333, 85, 133, 236, 132, -294, -291,
	-294, -295, -333, -180, -333, 133, 133, -218, -246, -218,
	-218, 23, -218, 23, -218, 23, 94, -246, -218, 23,
	-218, 23, -218, 23, -218, 23, -218, 23, 31, 78,
	79, 31, 81, 82, 83, -180, -180, -286, -222, -154,
	-333, 94, 94, -297, -297, 94, 92, 92, 92, -297,
	-297, 94, 92, -253, -251, 92, -339, 247, 291, 293,
	94, 94, 94, 94, 31, 92, -340, 31, 583, 582,
	584, 585, 586, 94, 31, 94, 31, 94, -246, 85,
	-154, -113, 281, 218, 220, 223, 76, 92, 295, 299,
	300, 147, 44, 86, 233, 230, -333, -238, 235, -238,
	-246, -252, -251, -244, 92, -115, -293, 14, 157, -256,
	-256, -236, -154, -293, -256, -236, -154, -236, -236, -236,
	-236, -256, -256, -256, -236, -251, -251, -154, -154, -154,
	-154, -154, -154, -154, -261, -237, -236, 561, 92, -230,
	14, 76, -261, -261, -259, 308, 342, 555, 556, 557,
	86, 468, -147, -154, 561, 561, 561, 561, 561, 561,
	-115, -115, -115, -115, 490, -171, 115, 139, 116, 117,
	-129, -172, -176, -178, 99, 157, 141, 155, 156, -120,
	-121, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -262, -333, 92, 172, -125, -124,
	98, -352, -125, -101, -103, -115, -115, -333, -246, -101,
	-101, -115, -97, 24, 38, -182, -183, 143, -180, -358,
	-358, 94, 98, -246, -246, -90, -89, 416, 417, 418,
	419, 421, 422, 423, 426, 427, 431, 432, 415, 433,
	420, 425, 428, 429, 430, 424, 327, -115, -115, -115,
	-115, -115, -115, -82, -115, 126, 127, 128, -115, -115,
	-174, -173, -332, -331, -330, -115, -115, -115, -115, -115,
	-115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
	-115, -115, -115, -115, -115, -115, -115, -115, -102, 24,
	38, -101, -247, -252, -244, -101, -102, -102, -101, -101,
	215, -210, -358, 86, -346, 397, 398, 559, -254, 266,
	-253, 25, -174, 92, 14, -216, 77, -246, -193, -193,
	63, 64, 59, -101, -106, -358, -35, 25, -212, -246,
	62, 92, -278, -222, 354, 355, -115, -115, 86, -192,
	27, 28, -154, -248, 163, -252, -154, -217, 266, -154,
	-132, -134, -135, -136, -157, -179, -357, -137, 486, 483,
	14, -147, -148, -156, -251, -225, -227, 86, 396, 398,
	399, 76, 118, -115, -279, 171, -305, -304, -303, -286,
	-288, -289, -290, 87, -279, -282, 360, 359, -273, -273,
	-273, -273, -273, -278, -278, -278, -278, 85, 85, -273,
	-273, -273, -273, -280, 85, -280, -280, -281, 85, -281,
	-316, -115, -313, -312, -310, -311, 240, 101, 468, 77,
	-308, -192, 94, -358, -113, -239, 235, -314, -311, -333,
	-333, -333, -239, -333, 92, -333, 92, -86, -57, -1,
	595, 596, 597, 86, 19, -287, -286, -56, 291, -319,
	-320, 266, -315, -309, -295, 133, -294, -295, -295, -333,
	86, 29, 123, 123, 123, 123, 468, 220, 32, -286,
	-56, -262, 233, -262, -262, 92, 92, -235, 591, -147,
	-109, 283, 147, 272, 272, 230, 230, 285, -154, 296,
	298, 297, 295, 299, 300, 23, 23, 23, 284, 286,
	288, 274, -154, -154, -238, 76, -149, -154, 26, -251,
	-154, -236, -236, -154, -236, -236, -154, -246, -93, 397,
	86, 468, 22, -94, 22, -357, 115, 116, 117, -172,
	-120, -121, -120, 138, 254, 86, -358, 25, 86, 77,
	-358, -358, -358, 86, 14, -101, -185, -183, 145, -115,
	-358, -358, -358, 86, 86, 14, -265, 25, -358, -358,
	-358, -358, -358, -184, -358, 14, 86, 86, -358, -358,
	86, 86, -358, 86, 86, 86, -329, 86, 86, 86,
	86, -358, -358, -358, -358, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, -358, -358, -101, -101, -357,
	215, -358, -358, -358, -358, -358, -247, -345, 558, 398,
	-161, -160, -158, 74, 234, 75, -357, -253, -358, -125,
	89, -213, 89, -212, -166, -246, 94, 98, -195, -131,
	-133, 14, -106, -178, 87, 86, -278, -199, -204, -233,
	-246, 92, 172, -191, 215, -162, 15, -165, 32, 57,
	-11, -357, -357, 32, 86, -150, -152, -151, -153, 66,
	70, 72, 67, 68, 69, 73, -257, 25, -132, -9,
	-8, -357, -357, -357, -154, -147, -359, 14, 77, -359,
	86, 215, -226, -228, 400, 397, 403, -333, 92, -85,
	86, -303, -290, -196, -110, 40, -283, 361, -278, -278,
	-285, 92, -285, 94, 94, 87, -47, -42, -43, 33,
	80, -310, -297, 92, 39, -246, 87, -192, -109, -154,
	139, 76, -314, -314, -314, -251, -2, 594, 600, 133,
	85, 364, 18, -212, 86, 87, -181, 292, 87, -87,
	-246, 87, 85, -295, -295, -246, -357, 230, 31, 31,
	-56, -181, -279, -333, 593, 592, 87, 232, 290, -114,
	411, -111, 92, 88, -154, -154, -154, -154, -154, 223,
	220, -353, 301, -353, 275, 233, -147, -154, 86, -80,
	249, 244, -256, -256, 33, -154, 397, 570, 568, -115,
	138, 254, -129, -121, -103, 465, -264, 172, 328, 253,
	326, 322, 342, 333, 359, 324, 360, 321, 320, 319,
	-264, -262, -115, -115, -188, 146, -115, 144, -115, -115,
	-115, -358, 172, 328, 14, -115, -115, -115, -330, -115,
	-115, -115, -328, -327, -125, -180, -358, -328, -115, -115,
	-327, -327, -331, -331, -331, -331, -331, -173, -173, -173,
	-173, -358, -358, -102, -247, -158, -291, -291, -291, -218,
	86, -229, 22, 14, 57, 57, -131, -162, -132, -106,
	-246, -202, 554, -207, 46, -205, -206, 47, -203, 48,
	56, 163, -193, -115, -219, 76, -220, -224, -180, -175,
	-177, -176, -357, -211, -358, -246, -218, -220, -134, -135,
	-135, -134, -135, 66, 66, 66, 71, 66, 71, 66,
	-151, -251, -358, -358, -9, -9, -115, -254, 77, -132,
	-132, -156, -251, 163, 397, 401, 402, -303, -351, 115,
	139, 31, 76, 357, 101, -349, 171, -350, 236, 132,
	133, 248, 25, 41, 87, 86, 87, 86, 87, 86,
	-240, 504, 139, -43, -42, -297, -297, 94, -333, 232,
	26, -154, 76, 76, 76, -88, 598, 94, 85, -3,
	80, -115, 85, 19, -286, -180, -321, -274, -322, -275,
	-276, -5, -6, -298, 57, 101, -60, 44, 231, 578,
	579, 123, 591, -313, -212, -317, -319, -154, -117, -357,
	-116, -118, -122, 161, 162, -181, -154, -108, 281, 289,
	85, -112, 89, -335, 77, 272, 357, 272, -354, 302,
	92, -354, -154, -80, -47, -154, -236, -236, 33, -333,
	-358, -129, -121, -357, -358, -273, -273, -273, -281, -273,
	316, -273, 316, -273, -358, -358, 86, -358, 22, -358,
	-92, 440, -115, 86, 86, -358, 85, 85, -115, -358,
	-358, -358, -329, 86, -358, 86, -358, 86, -358, -358,
	-358, -358, -358, -358, -358, -358, -358, -358, -358, -358,
	-159, 22, -159, -159, -358, 89, -154, -162, -186, 16,
	-199, 51, 334, -209, -208, 55, 47, -206, 19, 49,
	19, 30, -219, 86, 147, 86, -358, -358, 86, 57,
	215, -358, -162, -145, -144, 76, 77, -146, 76, -144,
	66, 66, -214, -358, -358, 86, -217, -132, -162, -162,
	215, 115, -357, -119, -128, -117, 12, 92, 92, -333,
	133, 133, -154, 85, -278, 92, -278, 94, 94, 504,
	31, 81, 82, 83, 31, 78, 79, -154, -154, -154,
	-154, -318, 85, 19, -115, 85, 147, 87, -212, -212,
	268, 157, -297, 576, 274, 274, -297, -297, -297, 87,
	-358, 86, -284, 468, 471, -115, -123, -123, -214, 87,
	-326, 468, -334, -246, -246, -246, -246, 94, 96, -120,
	-278, -115, -115, -193, 92, -115, -115, 94, 94, -358,
	-358, -328, -327, -115, -357, 66, 18, 16, -357, -357,
	-254, -186, -187, 17, 19, -200, 53, -198, 52, -198,
	-208, 19, 19, 92, 19, 92, 133, -224, -115, -177,
	57, -11, -246, -175, -246, -188, -115, 85, -115, -125,
	-162, -162, -115, -168, 443, 104, 106, 105, 444, 445,
	446, 343, 344, 447, 448, 449, 107, 108, 109, 110,
	111, 112, 113, 450, 453, 451, 454, 455, 456, 461,
	462, 457, 458, 459, 460, 463, 85, -115, 87, 87,
	-214, -317, -57, 87, -212, 94, 87, 269, -176, -357,
	92, -297, -297, -297, 94, 94, -253, -350, -319, 472,
	472, -358, 25, -325, -324, -247, 85, 77, -96, 157,
	468, -358, -358, -358, -358, -358, 87, 87, -358, -358,
	86, -215, -358, -246, 236, 19, 19, -215, -215, -161,
	-187, -115, -173, -201, 54, 76, 118, 92, 92, 92,
	12, -175, 215, -193, -212, -139, 364, -188, -358, -212,
	87, 25, 87, 600, 133, 87, -176, -95, -357, 265,
	-253, 92, 92, -11, 86, 147, -212, -154, -358, 466,
	73, 469, -115, 86, -358, -358, -358, 76, 118, -220,
	-246, 87, -358, -357, -193, 87, -197, -11, 85, -3,
	265, -78, 468, -324, -302, -247, 92, 94, 87, 62,
	467, 470, -329, -246, 236, -254, -140, -138, -246, 518,
	-342, -343, 76, -351, -348, 115, 139, 101, -349, 124,
	125, -78, -115, 85, -358, -79, 280, 558, -335, 62,
	-358, -358, 86, 22, -266, -59, 528, -343, 76, -342,
	76, 13, 12, 115, 92, 87, -212, 241, -326, 468,
	-138, 525, -279, -125, -341, 249, 244, 247, 32, -341,
	-4, 599, 87, 282, 469, -58, 26, -139, 243, 31,
	115, 94, -4, 470, 528, -125, -142, -141, -143, 562,
	115, 31, -141, -143, 76, -125, 76, 478, 562,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 770,
	770, 770, 0, 770, 0, 0, 770, -2, -2, 770,
	1251, 0, 770, 0, 0, -2, 702, 704, 0, 706,
	-2, 0, 0, 715, 1747, 1747, 765, 0, 0, 0,
	0, 0, 770, 770, 770, 770, 1112, 48, 770, 0,
	83, 84, 721, 722, 723, 63, 0, 1745, 1, 3,
	69, 73, 0, 0, 0, 56, 1121, 0, 76, 0,
	0, 774, 0, 772, 0, 1234, 770, 770, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 529, 465, 508, 463, 494, -2, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 351, 351, 0, 0, -2, 451, 451, 451, 0,
	0, 0, 491, 1236, 406, 351, 351, 0, 351, 351,
	351, 351, 0, 0, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 1138,
	151, 1252, 1249, 1250, 38, 39, 40, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	0, 1228, 0, 629, 871, 0, 691, 691, 0, 691,
	691, 691, 691, 0, 0, 0, 641, 0, 0, 0,
	0, 688, 0, 657, 658, 0, 688, 0, 664, 694,
	0, 669, 691, 691, 672, 1748, 0, 1748, 1748, 1219,
	0, 685, 683, 697, 698, 701, 705, 0, 710, 713,
	1245, 1246, 0, 728, 47, 1486, 720, 733, 734, 0,
	766, 767, 43, 968, 0, 893, 898, 909, 922, 923,
	924, 925, 926, 928, 929, 0, 0, 0, 0, 934,
	935, 0, 0, 0, 0, 0, 949, 0, 0, 0,
	0, 0, 1093, 0, 1056, 1056, 985, 1056, 1058, 1058,
	0, 0, 0, 1744, 1526, 1534, 1535, 1557, 1641, 1688,
	1530, 1531, 1512, 1524, 1527, 1515, 1516, 1518, 1520, 1525,
	1532, 1538, 1517, 1537, 1536, 0, 1513, 1514, 1519, 1529,
	1533, 1521, 1522, 1523, 1528, 1539, 1102, 0, 0, 0,
	0, 0, 0, 257, 258, 967, 1208, 1058, 1058, 1058,
	1058, 1058, -2, -2, 204, 205, 206, 207, 208, 209,
	210, 0, 200, 0, 262, 263, 259, 260, 261, 951,
	952, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 1747, 0, 743, 0, 0, 0, 0, 0,
	1121, 0, 1113, 1112, 61, 0, 770, -2, 0, 0,
	0, 0, 45, 0, 50, 830, 75, 74, 1160, 0,
	0, 0, 57, 1122, 65, 67, 1123, 0, 775, 776,
	0, 806, 810, 0, 771, 0, 0, 1235, 1234, 1234,
	100, 0, 1684, 1212, -2, -2, 0, 0, 1247, 1248,
	1221, -2, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, -2,
	0, 0, 161, 162, 0, 41, 378, 0, 157, 0,
	371, 321, 0, 1138, 0, 0, 0, 0, 0, 770,
	0, 1229, 142, 143, 149, 150, 351, 351, 505, 0,
	0, 151, 151, 472, 473, 474, 0, 0, -2, 376,
	0, 452, 0, 0, 365, 365, 369, 367, 368, 0,
	0, 0, 0, 0, 0, 485, 0, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 590, 0, 352,
	0, 503, 504, 407, 0, 0, 0, 0, 483, 484,
	0, 0, 1237, 1238, 0, 0, 351, 351, 0, 0,
	0, 0, 351, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	141, 1151, 0, 0, 0, -2, 0, 621, 0, 0,
	0, 1230, 1230, 0, 628, 0, 630, 631, 0, 0,
	632, 0, 688, 688, 686, 687, 634, 635, 636, 637,
	691, 0, 0, 360, 361, 362, 688, 691, 0, 691,
	691, 691, 691, 688, 688, 688, 691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1748, 694, 691, 0,
	665, 0, 666, 667, 670, 671, 673, 1749, 1750, 1268,
	1748, 1748, 677, 681, 1220, 703, 711, 714, 731, 729,
	730, 732, 724, 725, 726, 727, 0, 745, 746, 751,
	0, 0, 0, 0, 757, 758, 759, 0, 0, 762,
	763, 764, 0, 0, 0, 0, 0, 891, 0, 0,
	957, 958, 959, 960, 961, 962, 963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 930, 931, 932,
	933, 936, 0, 0, 0, 941, 942, 0, 0, 0,
	0, 0, 780, 0, 1094, 0, 983, 0, 984, 986,
	987, 0, 988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1240, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 790,
	0, 0, 790, 790, 0, 0, 193, 194, 195, 196,
	197, 211, 212, 213, 214, 215, 264, 1102, 0, 967,
	0, 0, 44, 735, 736, 0, 854, 1240, 0, 0,
	786, 0, 55, 64, 66, 1121, 59, 1121, 0, 792,
	0, 0, -2, -2, 793, 799, 800, 801, 802, 803,
	52, 1746, 53, 0, 72, 0, 46, 0, 0, 0,
	0, 333, 1163, 0, 0, 1114, 1115, 1118, 0, 807,
	1568, 811, 0, 813, 814, 0, 773, 0, 98, 0,
	870, 0, 0, 0, 1684, 1218, 0, 102, 103, 0,
	0, 0, 339, 1223, 1224, 1225, -2, 358, 0, 339,
	328, 272, 273, 274, 321, 276, 321, 321, 321, 321,
	333, 333, 333, 333, 304, 305, 306, 307, 308, 0,
	0, 291, 321, 321, 321, 321, 311, 312, 313, 314,
	315, 316, 317, 318, 277, 278, 279, 280, 281, 282,
	283, 284, 285, 323, 323, 323, 325, 325, 0, 42,
	0, 343, 0, 1118, 0, 0, 1151, 1232, 1242, 0,
	0, 0, 1232, 120, 0, 0, 506, 540, 466, 495,
	507, 0, 469, 470, -2, 0, 0, 451, 0, 453,
	0, 359, 0, -2, 0, 369, 0, 365, 369, 366,
	369, 357, 370, 487, 488, 489, 0, 570, 840, 0,
	0, 0, 0, 0, 576, 577, 578, 0, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 496, 497,
	498, 499, 500, 501, 502, 0, 0, 453, 0, 492,
	0, 408, 409, 0, 0, 412, 413, 414, 415, 0,
	0, 418, 419, 420, 857, 858, 421, 445, 446, 447,
	422, 423, 424, 425, 426, 427, 428, 439, 440, 441,
	442, 443, 444, 429, 430, 431, 432, 433, 436, 0,
	135, 1142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1230, 0, 0, 0, 0,
	789, 872, 1253, 1254, 692, 693, 0, 363, 364, 691,
	691, 638, 678, 0, 691, 642, 679, 643, 645, 644,
	646, 659, 660, 691, 649, 689, 690, 650, 651, 652,
	653, 654, 655, 656, 674, 661, 662, 663, 695, 0,
	699, 700, 675, 676, 0, 712, 716, 717, 718, 719,
	0, 0, 748, 94, 753, 754, 755, 756, 768, 761,
	969, 888, 889, 890, 0, 892, 895, 0, 953, 955,
	897, 899, 964, 965, 966, 0, 0, 0, 0, 0,
	903, 907, 910, 911, 912, 913, 914, 915, 916, 917,
	918, 919, 920, 921, 927, 1072, 1073, 1074, 944, 265,
	266, 0, 945, 0, 804, 0, 0, 0, 943, 0,
	0, 0, 0, 781, 782, 1100, 1097, 0, 0, 1057,
	1059, 0, 0, 0, 0, 0, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1075, 0, 0,
	0, 0, 0, 1093, 0, 946, 947, 948, 0, 0,
	0, 1241, 0, 130, 131, 0, 0, 0, 0, 0,
	1029, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 791, 1103, 0, -2, 0, 0, 0, 0, 0,
	0, 0, 1207, 0, 738, 739, 741, 0, 874, 0,
	855, 0, 0, 744, 0, 785, 0, 788, 58, 60,
	797, 798, 0, 815, 794, 54, 49, 0, 0, 832,
	1161, 333, 1183, 0, 337, 338, 1124, 1125, 0, 1117,
	1119, 1120, 77, 812, 808, 0, 886, 0, 0, 869,
	0, 818, 820, 821, 822, 852, 0, 825, 0, 0,
	0, 0, 0, 96, 871, 1213, 101, 0, 0, 106,
	107, 1214, 1215, 1216, 1217, 0, 529, -2, 403, 163,
	165, 166, 167, 158, -2, 331, 329, 330, 275, 333,
	333, 298, 299, 300, 301, 302, 303, 0, 0, 292,
	293, 294, 295, 286, 0, 287, 288, 289, 0, 290,
	377, 0, 1126, 344, 345, 347, 351, 0, 0, 0,
	372, 373, 0, 1118, 1142, 0, 0, 0, 1243, 1242,
	1242, 1242, 0, 153, 154, 155, 156, 565, 0, 0,
	541, 563, 564, 151, 0, 0, 159, 455, 454, 0,
	597, 0, 375, 0, 0, 369, 369, 354, 355, 490,
	0, 0, 572, 573, 574, 575, 0, 0, 0, 453,
	455, 339, 0, 410, 411, 416, 417, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 520,
	521, 522, 523, 457, 527, 524, 457, 528, 1139, 1140,
	1141, 0, 0, 622, 0, 0, 395, 92, 1231, 627,
	688, 648, 680, 688, 640, 647, 668, 708, 752, 0,
	0, 0, 0, 760, 0, 0, 896, 954, 956, 900,
	0, 904, 908, 0, 0, 0, 0, 0, 0, 0,
	950, 974, 975, 0, 0, 1112, 0, 1098, 0, 0,
	982, 1060, 1061, 0, 0, 0, 0, 0, 993, 994,
	995, 996, 997, 0, 999, 0, 0, 0, 1003, 1004,
	0, 0, 1005, 0, 0, 0, 0, 0, 0, 0,
	0, 1014, 1015, 1016, 1017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1028, 970, 0, 0, 790,
	0, 1062, 1063, 1064, 1065, 1066, 1103, 737, 740, 742,
	828, 875, 876, 0, 0, 0, 0, 856, 1239, 783,
	784, 787, -2, 0, 0, 1105, 0, 0, 815, 886,
	816, 0, 795, 51, 831, 0, 1165, 1164, 1177, 1190,
	334, 335, 336, 1116, 0, 1121, 0, 1201, 0, 0,
	1193, 0, 0, 0, 0, 0, 0, 0, 0, 859,
	0, 0, 862, 0, 0, 0, 0, 853, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 90, 91, 0,
	0, 0, 104, 105, 0, 0, 111, 340, 341, 144,
	151, 405, 164, 385, 0, 0, 271, 332, 296, 297,
	0, 319, 0, 0, 0, 398, 116, 1130, 1129, 351,
	351, 346, 0, 349, 0, 1244, 322, 374, 0, 134,
	0, 0, 0, 0, 0, 140, 535, 0, 0, 542,
	0, 0, 0, 464, 0, 475, 476, 0, 569, -2,
	618, 343, 0, 353, 356, 841, 0, 0, 477, 0,
	455, 481, 482, 493, 437, 438, 435, 0, 0, 1152,
	1153, 1158, 1156, 1157, 121, 513, 515, 514, 518, 0,
	0, 459, 0, 459, 511, 0, 395, 1126, 0, 626,
	396, 397, 691, 691, 747, 95, 0, 750, 0, 0,
	0, 0, 901, 905, 805, 0, 0, 321, 321, 1080,
	321, 325, 1083, 321, 1085, 321, 1088, 321, 1091, 1092,
	0, 0, 0, 0, 1095, 981, 1101, 0, 0, 0,
	0, 992, 0, 0, 0, 0, 0, 0, 132, 133,
	1029, 0, 0, 1031, 1033, 1034, 1009, 1030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 971, 972, 0, 1104, 877, 882, 882, 882, 0,
	0, 0, 1226, 1227, 1106, 1107, 886, 1108, 817, 796,
	833, 1183, 0, 1176, 0, -2, 1185, 0, 0, 0,
	1191, 809, 78, 887, 81, 0, 1201, 1209, 0, 1192,
	1203, 1205, 0, 0, 0, 1197, 0, 886, 819, 848,
	850, 0, 845, 860, 861, 863, 0, 865, 0, 867,
	868, 830, 824, 826, 0, 0, 0, 98, 0, 886,
	886, 97, 0, 873, 108, 109, 110, 404, 168, 173,
	0, 0, 0, 178, 0, 180, 0, 386, 0, 268,
	270, 0, 0, 171, 333, 0, 333, 0, 326, 0,
	387, 399, 0, 1127, 1128, 0, 0, 348, 350, 0,
	1233, 136, 0, 0, 0, 538, 0, 566, 0, 0,
	0, 0, 0, 0, 160, 456, 598, 599, 600, 601,
	602, 603, 604, 605, 0, 351, 0, 0, 0, 351,
	351, 351, 610, 342, 0, 0, 594, 591, 478, 0,
	198, 199, 201, 0, 0, 480, 830, 1143, 1144, 1145,
	0, 1155, 1159, 124, 0, 0, 0, 0, 525, 0,
	458, 526, 623, 624, 625, 93, 633, 639, 749, 769,
	894, 902, 906, 0, 938, 1078, 333, 1081, 1082, 1084,
	1086, 1087, 1089, 1090, 939, 940, 0, 977, 0, 979,
	1121, 0, 1099, 0, 0, 991, 0, 0, 0, 1000,
	1001, 1002, 0, 0, 1008, 0, 1010, 0, 1013, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 973,
	0, 0, 0, 0, 854, -2, 62, 1108, 1110, 0,
	1170, 1168, 1168, 1178, 1179, 0, 0, 1186, 0, 0,
	0, 0, 82, 0, 0, 0, 1206, 0, 0, 0,
	0, 99, 1112, 842, 849, 0, 0, 843, 0, 844,
	864, 866, 823, -2, 827, 0, 886, 886, 88, 89,
	0, 174, 0, 176, 191, 192, 0, 179, 181, 182,
	267, 269, 0, 0, 309, 320, 310, 0, 0, 400,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 830, 137, 138,
	139, 530, 0, 540, 0, 0, 0, 533, 0, 467,
	0, 0, 0, 351, 351, 351, 0, 0, 0, 0,
	571, 0, 579, 0, 0, 0, 202, 203, 0, 1154,
	512, 0, 122, 123, 0, 0, 517, 460, 461, 1067,
	1079, 0, 0, 0, 1096, 0, 0, 0, 0, 998,
	1006, 0, 1032, 0, 0, 883, 0, 0, 0, 0,
	874, 1110, 80, 0, 0, 1173, 0, 1166, 1169, 1167,
	1180, 0, 0, 1187, 0, 1189, 0, 1210, 1211, 1204,
	0, 1196, 1199, 1195, 1198, 1121, 846, 0, 851, 0,
	1112, 87, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 327,
	0, 0, 0, 531, 0, 543, 534, 0, 608, 0,
	612, 0, 0, 0, 615, 616, 617, 379, 595, 592,
	593, 479, 0, 125, 126, 0, 0, 0, 0, 0,
	0, 976, 978, 980, 989, 990, 1076, 1077, 1007, 1011,
	0, 0, 879, 836, 837, 884, 885, 0, 0, 829,
	79, 1111, 1109, 1162, 0, 1171, 1172, 1181, 1182, 1188,
	0, 1194, 0, 85, 0, 0, 0, 1121, 175, 0,
	185, 0, 539, 0, 542, 532, 606, 607, 0, 619,
	611, 613, 614, 1146, 0, 0, 0, 519, 937, 0,
	0, 0, 1029, 0, 878, 880, 881, 1174, 1175, 1202,
	1200, 847, 854, 0, 86, 380, 385, 1146, 0, 0,
	0, 509, 1148, 127, 128, 448, 449, 450, 121, 1068,
	0, 1071, 0, 838, 839, 544, 0, 546, 0, -2,
	381, 382, 0, 169, 186, 187, 0, 0, 190, 183,
	184, 117, 0, 0, 620, 0, 1149, 1150, 124, 1069,
	1012, 545, 0, 0, 339, 0, 555, 383, 0, 384,
	0, 0, 0, 188, 189, 567, 0, 0, 516, 0,
	547, 548, 556, 0, 388, 390, 391, 0, 0, 389,
	536, 0, 567, 1147, 0, 0, 557, 553, 392, 393,
	394, 568, 537, 1070, 0, 549, 550, 551, 0, 560,
	561, 0, 552, 0, 0, 562, 0, 558, 559,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 601,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:519
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:524
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:525
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:529
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:565
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:571
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:575
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:579
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:584
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:588
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:594
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:600
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:606
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:610
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:615
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:619
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:625
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:629
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:635
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:641
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:645
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:649
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:672
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:683
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:689
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:709
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:731
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:769
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:788
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:794
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:806
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:814
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:826
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:838
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:842
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:848
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:854
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:858
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:862
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:866
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:872
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:876
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:880
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:886
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:896
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:900
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:905
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:909
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:915
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:921
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:925
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:931
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:935
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:941
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:945
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:949
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:955
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:959
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:963
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:967
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:973
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:977
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:983
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:989
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:996
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1005
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1009
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1016
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1020
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1025
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1029
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1035
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1040
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1045
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1051
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1056
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1062
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1071
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1077
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1081
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1087
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1093
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1100
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1107
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1112
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1117
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1122
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1129
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1136
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1147
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1154
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1158
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1164
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1168
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1182
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1186
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1192
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1196
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1202
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1206
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1213
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1217
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1223
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1227
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1233
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1238
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1243
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1247
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1252
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1256
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1260
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1271
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1280
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1289
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1293
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1302
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1306
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1312
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1318
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1323
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1328
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1338
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1343
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1348
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1352
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1359
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1363
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1368
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1372
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1377
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1383
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1394
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1401
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1408
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1412
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1416
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1420
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1424
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1435
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1442
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1446
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1452
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1456
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1460
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1464
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1468
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1472
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1476
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1481
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1485
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1489
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1493
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1497
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = Armscii8Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = ASCIIStr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = Big5Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = UBinaryStr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = Cp1250Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = Cp1251Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = Cp1256Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = Cp1257Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = Cp850Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = Cp852Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = Cp866Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = Cp932Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = Dec8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = EucjpmsStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = EuckrStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = Gb18030Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = Gb2312Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = GbkStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = Geostd8Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = GreekStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = HebrewStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = Hp8Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = Keybcs2Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = Koi8rStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = Koi8uStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1604
		{
			yyVAL.str = Latin1Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = Latin2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = Latin5Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = Latin7Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = MacceStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = MacromanStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = SjisStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = Swe7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = Tis620Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = Ucs2Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = UjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = Utf16Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = Utf16leStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = Utf32Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = Utf8Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = Utf8mb4Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1674
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1678
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1688
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1692
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1696
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1702
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1706
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1713
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1717
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1721
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1725
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1731
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1803
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1873
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1942
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1947
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1956
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1961
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1965
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1973
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1977
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1983
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1991
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1995
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1999
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2004
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2008
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2013
		{
			yyVAL.str = ""
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2025
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2040
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2044
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2055
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2060
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2064
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2070
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2080
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2084
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2089
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2093
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2099
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2103
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2109
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2113
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2117
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2121
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2125
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2130
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = yyDollar[2].str
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2164
		{
			yyVAL.str = "key"
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.str = yyDollar[1].str
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2183
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2193
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2197
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2203
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2207
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2213
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2217
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2223
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2227
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2233
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2239
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2243
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2247
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2251
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2255
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion(), OnDelete: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2264
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2270
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2276
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2282
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2288
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2292
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2296
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2300
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2304
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2309
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2313
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2317
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2322
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2326
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2330
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2335
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2339
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2345
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2349
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2353
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2359
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2363
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2369
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2373
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2377
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2381
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2385
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2389
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2393
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2397
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2401
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2405
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2409
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2413
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2417
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2421
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2425
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2429
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2433
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2437
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2441
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2445
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2449
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2453
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2457
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2461
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2465
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2469
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2473
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2477
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2482
		{
			yyVAL.str = ""
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2486
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2490
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2509
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2513
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2517
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2522
		{
			yyVAL.str = ""
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2528
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2532
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2537
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2541
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2546
		{
			yyVAL.str = ""
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2550
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2555
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2559
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2563
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2568
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2572
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2576
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2580
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2584
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 467:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2588
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2594
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2598
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2602
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2608
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2612
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2616
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2620
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2624
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2628
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2632
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2636
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2640
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2644
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2648
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2652
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2656
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2660
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2664
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2668
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2672
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2676
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2680
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2684
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2688
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2692
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2696
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2702
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2706
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2712
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2716
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2720
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2724
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2728
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2732
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2736
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2740
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2744
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2750
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2764
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2771
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2777
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2781
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2788
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2795
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2807
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2817
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2821
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2825
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2838
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2848
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2852
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2863
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2870
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2877
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2884
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2891
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2897
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2906
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2914
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2921
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2932
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2941
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2949
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2958
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2965
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2973
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2977
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2986
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3001
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3006
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3010
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3015
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3019
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3025
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3031
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3037
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3041
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3047
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3051
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3057
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3063
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3069
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3075
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3081
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3085
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3089
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3093
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3099
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3105
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3111
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3115
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3119
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3125
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3129
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3134
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3138
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3143
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3147
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3153
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3157
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3161
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3165
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3169
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3173
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3177
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3181
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3185
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3189
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3193
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3197
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3201
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3205
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3209
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3213
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3217
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3221
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3225
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3229
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3233
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3237
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3242
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3246
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3250
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3257
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3261
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3267
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3272
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3276
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3281
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3286
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3291
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3296
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3301
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3307
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3313
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3320
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3327
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3334
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3342
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3346
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3352
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3358
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3364
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3370
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3376
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3382
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3388
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3394
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3400
		{
			yyVAL.str = ""
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3404
		{
			yyVAL.str = ""
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3410
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3416
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3420
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3426
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3430
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3439
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3443
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3449
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3453
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3458
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3464
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3468
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3472
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3476
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3480
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3484
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3488
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3492
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3496
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3500
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3504
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3508
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3512
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3516
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3520
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3524
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3528
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3532
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3536
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3540
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3544
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3548
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3552
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3556
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3560
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3564
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3568
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3572
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3576
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3580
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3584
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3588
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3592
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3596
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3600
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3604
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3608
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3612
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3616
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3620
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3624
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3628
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3635
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3639
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3643
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3647
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3651
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3655
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3659
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3663
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3667
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3673
		{
			yyVAL.str = ""
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3677
		{
			yyVAL.str = "extended "
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3683
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3687
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3693
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3703
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3707
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3711
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3717
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3721
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3725
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3731
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3735
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3741
		{
			yyVAL.empty = struct{}{}
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3745
		{
			yyVAL.empty = struct{}{}
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3749
		{
			yyVAL.empty = struct{}{}
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3755
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3759
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3765
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3769
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3773
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3779
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3783
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3795
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3799
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3804
		{
			yyVAL.empty = struct{}{}
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3806
		{
			yyVAL.empty = struct{}{}
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3809
		{
			yyVAL.empty = struct{}{}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3811
		{
			yyVAL.empty = struct{}{}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3822
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3827
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3831
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3835
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3839
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3843
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3847
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
			yyVAL.str = yyDollar[1].str
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.str = yyDollar[1].str
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3861
		{
			yyVAL.str = yyDollar[1].str
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3867
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3871
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3875
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3879
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3888
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3892
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3898
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3902
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3918
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3924
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3928
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3934
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3940
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3944
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3948
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3952
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3982
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3986
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3990
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3996
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4000
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4006
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4010
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4014
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4018
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4026
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4030
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4034
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4038
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4042
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4046
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4050
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4055
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4059
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4063
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4068
		{
			yyVAL.str = ""
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4072
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4077
		{
			setAllowComments(yylex, true)
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4081
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4087
		{
			yyVAL.strs = nil
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4091
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4097
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4101
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4105
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4110
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4114
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4118
		{
			yyVAL.str = SQLCacheStr
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4123
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4127
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4131
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4158
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4162
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4172
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4177
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4181
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4186
		{
			yyVAL.strs = nil
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4190
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4194
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4198
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4202
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4208
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4212
		{
			yyVAL.str = SQLCacheStr
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4216
		{
			yyVAL.str = DistinctStr
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4220
		{
			yyVAL.str = DistinctStr
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4224
		{
			yyVAL.str = StraightJoinHint
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4232
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4238
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4242
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4248
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4252
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4256
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4260
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4265
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4269
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4273
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4285
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4289
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4295
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4301
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4305
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4315
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4319
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4323
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4327
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4333
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4337
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4343
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4347
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4352
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4356
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4362
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4366
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4372
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4376
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4382
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4386
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4390
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4394
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4400
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4404
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4417
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4421
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4425
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4429
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4435
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4437
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4441
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4443
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4447
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4449
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4452
		{
			yyVAL.empty = struct{}{}
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4454
		{
			yyVAL.empty = struct{}{}
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4457
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4465
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4478
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4482
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4486
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4492
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4498
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4502
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4506
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4510
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4516
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4520
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4530
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4534
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4540
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4544
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4550
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4555
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4559
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4565
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4569
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 878:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4575
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4579
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4583
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4587
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4592
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4596
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4600
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4604
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4614
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4621
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4625
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4629
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4633
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4637
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4641
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4652
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4656
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4660
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4664
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4670
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4674
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4678
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4682
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4686
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4690
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4694
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4698
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4702
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4706
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4710
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4716
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4720
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4724
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4728
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4732
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4736
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4740
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4744
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4748
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4752
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4756
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4760
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4764
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4770
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4774
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4778
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4782
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4786
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4790
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4794
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4798
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4802
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4806
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4810
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4814
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4818
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4822
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4826
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4830
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4834
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4838
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4842
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4850
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4854
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4862
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4866
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4872
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4876
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4880
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4886
		{
			yyVAL.str = ""
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4890
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4896
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4900
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4907
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4911
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4915
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4919
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4925
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4929
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4933
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4937
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4941
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4945
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4949
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4955
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4959
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4963
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4970
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4976
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4980
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4990
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4994
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4998
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5002
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5012
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5016
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5020
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5024
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5028
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5032
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5036
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5040
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5044
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5059
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5063
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5069
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5073
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5082
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5130
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5166
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5170
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5174
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5178
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5182
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5186
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5190
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5194
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5198
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5202
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5206
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5210
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5214
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5218
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5222
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5226
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5230
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5234
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5238
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5243
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5247
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5253
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5257
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5263
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5267
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5273
		{
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5275
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5279
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5283
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5287
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5291
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5295
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5299
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5303
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5307
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5311
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5315
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5321
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5325
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5329
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5333
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5337
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5341
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5345
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5349
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5353
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5371
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5375
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5408
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5412
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5416
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5420
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5424
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5430
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5434
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5438
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5444
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5448
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5452
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5458
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5462
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5466
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5470
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5474
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5480
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5484
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5488
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5492
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5496
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5500
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5504
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5508
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5512
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5516
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5526
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5531
		{
			yyVAL.str = string("")
		}
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5535
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5541
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5545
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5551
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5556
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5560
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5566
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5570
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5574
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5580
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5589
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5593
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5599
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5603
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5608
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5612
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5621
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5627
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5633
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5637
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5643
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5648
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5652
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5656
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5661
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5665
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5671
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5675
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5679
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5688
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5692
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5696
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5700
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5707
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5711
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5715
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5719
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5725
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5729
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5733
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5738
		{
			yyVAL.str = ""
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5742
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5746
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5750
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5755
		{
			yyVAL.str = ""
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5759
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5765
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5769
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5774
		{
			yyVAL.str = ""
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5778
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5783
		{
			yyVAL.str = "cascaded"
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5787
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5791
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5800
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5806
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5812
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5818
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5827
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5831
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5836
		{
			yyVAL.str = ""
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5840
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5846
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5850
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5856
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5860
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5864
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5869
		{
			yyVAL.str = ""
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5873
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5877
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5882
		{
			yyVAL.str = ""
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5886
		{
			yyVAL.str = " header"
		}
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5891
		{
			yyVAL.str = ""
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5895
		{
			yyVAL.str = " manifest on"
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5899
		{
			yyVAL.str = " manifest off"
		}
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5904
		{
			yyVAL.str = ""
		}
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5908
		{
			yyVAL.str = " overwrite on"
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5912
		{
			yyVAL.str = " overwrite off"
		}
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5918
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5923
		{
			yyVAL.str = ""
		}
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5927
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5933
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5937
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5943
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5947
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5952
		{
			yyVAL.str = ""
		}
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5956
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5962
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5966
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5972
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5976
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5980
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5985
		{
			yyVAL.str = ""
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5989
		{
			yyVAL.str = " optionally"
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6002
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6006
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6010
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6014
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6018
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6024
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6028
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6032
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6036
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6041
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6045
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6051
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6055
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6061
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6065
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6071
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6086
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6090
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6096
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6102
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6106
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6112
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6116
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6120
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6124
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6128
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6136
		{
			yyVAL.str = "charset"
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6163
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6165
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6168
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6170
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6173
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6175
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6178
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6183
		{
			yyVAL.empty = struct{}{}
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6185
		{
			yyVAL.empty = struct{}{}
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6187
		{
			yyVAL.empty = struct{}{}
		}
	case 1239:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6191
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6200
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6207
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6211
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6217
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6221
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6228
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6234
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6238
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6244
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6248
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6255
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6770
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6779
		{
			decNesting(yylex)
		}
	case 1747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6784
		{
			skipToEnd(yylex)
		}
	case 1748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6789
		{
			skipToEnd(yylex)
		}
	case 1749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6793
		{
			skipToEnd(yylex)
		}
	case 1750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6797
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
