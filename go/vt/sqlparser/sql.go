// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const EXTRACT = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const OFF = 57445
const DISCARD = 57446
const IMPORT = 57447
const ENABLE = 57448
const DISABLE = 57449
const TABLESPACE = 57450
const VIRTUAL = 57451
const STORED = 57452
const EMPTY_FROM_CLAUSE = 57453
const LOWER_THAN_CHARSET = 57454
const CHARSET = 57455
const UNIQUE = 57456
const KEY = 57457
const EXPRESSION_PREC_SETTER = 57458
const OR = 57459
const XOR = 57460
const AND = 57461
const NOT = 57462
const BETWEEN = 57463
const CASE = 57464
const WHEN = 57465
const THEN = 57466
const ELSE = 57467
const END = 57468
const LE = 57469
const GE = 57470
const NE = 57471
const NULL_SAFE_EQUAL = 57472
const IS = 57473
const LIKE = 57474
const REGEXP = 57475
const IN = 57476
const SHIFT_LEFT = 57477
const SHIFT_RIGHT = 57478
const DIV = 57479
const MOD = 57480
const UNARY = 57481
const COLLATE = 57482
const BINARY = 57483
const UNDERSCORE_ARMSCII8 = 57484
const UNDERSCORE_ASCII = 57485
const UNDERSCORE_BIG5 = 57486
const UNDERSCORE_BINARY = 57487
const UNDERSCORE_CP1250 = 57488
const UNDERSCORE_CP1251 = 57489
const UNDERSCORE_CP1256 = 57490
const UNDERSCORE_CP1257 = 57491
const UNDERSCORE_CP850 = 57492
const UNDERSCORE_CP852 = 57493
const UNDERSCORE_CP866 = 57494
const UNDERSCORE_CP932 = 57495
const UNDERSCORE_DEC8 = 57496
const UNDERSCORE_EUCJPMS = 57497
const UNDERSCORE_EUCKR = 57498
const UNDERSCORE_GB18030 = 57499
const UNDERSCORE_GB2312 = 57500
const UNDERSCORE_GBK = 57501
const UNDERSCORE_GEOSTD8 = 57502
const UNDERSCORE_GREEK = 57503
const UNDERSCORE_HEBREW = 57504
const UNDERSCORE_HP8 = 57505
const UNDERSCORE_KEYBCS2 = 57506
const UNDERSCORE_KOI8R = 57507
const UNDERSCORE_KOI8U = 57508
const UNDERSCORE_LATIN1 = 57509
const UNDERSCORE_LATIN2 = 57510
const UNDERSCORE_LATIN5 = 57511
const UNDERSCORE_LATIN7 = 57512
const UNDERSCORE_MACCE = 57513
const UNDERSCORE_MACROMAN = 57514
const UNDERSCORE_SJIS = 57515
const UNDERSCORE_SWE7 = 57516
const UNDERSCORE_TIS620 = 57517
const UNDERSCORE_UCS2 = 57518
const UNDERSCORE_UJIS = 57519
const UNDERSCORE_UTF16 = 57520
const UNDERSCORE_UTF16LE = 57521
const UNDERSCORE_UTF32 = 57522
const UNDERSCORE_UTF8 = 57523
const UNDERSCORE_UTF8MB4 = 57524
const INTERVAL = 57525
const JSON_EXTRACT_OP = 57526
const JSON_UNQUOTE_EXTRACT_OP = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const FLUSH = 57534
const CHANGE = 57535
const MODIFY = 57536
const DEALLOCATE = 57537
const REVERT = 57538
const SCHEMA = 57539
const TABLE = 57540
const INDEX = 57541
const VIEW = 57542
const TO = 57543
const IGNORE = 57544
const IF = 57545
const PRIMARY = 57546
const COLUMN = 57547
const SPATIAL = 57548
const FULLTEXT = 57549
const KEY_BLOCK_SIZE = 57550
const CHECK = 57551
const INDEXES = 57552
const ACTION = 57553
const CASCADE = 57554
const CONSTRAINT = 57555
const FOREIGN = 57556
const NO = 57557
const REFERENCES = 57558
const RESTRICT = 57559
const SHOW = 57560
const DESCRIBE = 57561
const EXPLAIN = 57562
const DATE = 57563
const ESCAPE = 57564
const REPAIR = 57565
const OPTIMIZE = 57566
const TRUNCATE = 57567
const COALESCE = 57568
const EXCHANGE = 57569
const REBUILD = 57570
const PARTITIONING = 57571
const REMOVE = 57572
const PREPARE = 57573
const EXECUTE = 57574
const MAXVALUE = 57575
const PARTITION = 57576
const REORGANIZE = 57577
const LESS = 57578
const THAN = 57579
const PROCEDURE = 57580
const TRIGGER = 57581
const VINDEX = 57582
const VINDEXES = 57583
const DIRECTORY = 57584
const NAME = 57585
const UPGRADE = 57586
const STATUS = 57587
const VARIABLES = 57588
const WARNINGS = 57589
const CASCADED = 57590
const DEFINER = 57591
const OPTION = 57592
const SQL = 57593
const UNDEFINED = 57594
const SEQUENCE = 57595
const MERGE = 57596
const TEMPORARY = 57597
const TEMPTABLE = 57598
const INVOKER = 57599
const SECURITY = 57600
const FIRST = 57601
const AFTER = 57602
const LAST = 57603
const VITESS_MIGRATION = 57604
const CANCEL = 57605
const RETRY = 57606
const COMPLETE = 57607
const CLEANUP = 57608
const BEGIN = 57609
const START = 57610
const TRANSACTION = 57611
const COMMIT = 57612
const ROLLBACK = 57613
const SAVEPOINT = 57614
const RELEASE = 57615
const WORK = 57616
const BIT = 57617
const TINYINT = 57618
const SMALLINT = 57619
const MEDIUMINT = 57620
const INT = 57621
const INTEGER = 57622
const BIGINT = 57623
const INTNUM = 57624
const REAL = 57625
const DOUBLE = 57626
const FLOAT_TYPE = 57627
const DECIMAL_TYPE = 57628
const NUMERIC = 57629
const TIME = 57630
const TIMESTAMP = 57631
const DATETIME = 57632
const YEAR = 57633
const CHAR = 57634
const VARCHAR = 57635
const BOOL = 57636
const CHARACTER = 57637
const VARBINARY = 57638
const NCHAR = 57639
const TEXT = 57640
const TINYTEXT = 57641
const MEDIUMTEXT = 57642
const LONGTEXT = 57643
const BLOB = 57644
const TINYBLOB = 57645
const MEDIUMBLOB = 57646
const LONGBLOB = 57647
const JSON = 57648
const ENUM = 57649
const GEOMETRY = 57650
const POINT = 57651
const LINESTRING = 57652
const POLYGON = 57653
const GEOMETRYCOLLECTION = 57654
const MULTIPOINT = 57655
const MULTILINESTRING = 57656
const MULTIPOLYGON = 57657
const ASCII = 57658
const UNICODE = 57659
const NULLX = 57660
const AUTO_INCREMENT = 57661
const APPROXNUM = 57662
const SIGNED = 57663
const UNSIGNED = 57664
const ZEROFILL = 57665
const CODE = 57666
const COLLATION = 57667
const COLUMNS = 57668
const DATABASES = 57669
const ENGINES = 57670
const EVENT = 57671
const EXTENDED = 57672
const FIELDS = 57673
const FULL = 57674
const FUNCTION = 57675
const GTID_EXECUTED = 57676
const KEYSPACES = 57677
const OPEN = 57678
const PLUGINS = 57679
const PRIVILEGES = 57680
const PROCESSLIST = 57681
const SCHEMAS = 57682
const TABLES = 57683
const TRIGGERS = 57684
const USER = 57685
const VGTID_EXECUTED = 57686
const VITESS_KEYSPACES = 57687
const VITESS_METADATA = 57688
const VITESS_MIGRATIONS = 57689
const VITESS_REPLICATION_STATUS = 57690
const VITESS_SHARDS = 57691
const VITESS_TABLETS = 57692
const VSCHEMA = 57693
const NAMES = 57694
const GLOBAL = 57695
const SESSION = 57696
const ISOLATION = 57697
const LEVEL = 57698
const READ = 57699
const WRITE = 57700
const ONLY = 57701
const REPEATABLE = 57702
const COMMITTED = 57703
const UNCOMMITTED = 57704
const SERIALIZABLE = 57705
const CURRENT_TIMESTAMP = 57706
const DATABASE = 57707
const CURRENT_DATE = 57708
const NOW = 57709
const CURRENT_TIME = 57710
const LOCALTIME = 57711
const LOCALTIMESTAMP = 57712
const CURRENT_USER = 57713
const UTC_DATE = 57714
const UTC_TIME = 57715
const UTC_TIMESTAMP = 57716
const DAY = 57717
const DAY_HOUR = 57718
const DAY_MICROSECOND = 57719
const DAY_MINUTE = 57720
const DAY_SECOND = 57721
const HOUR = 57722
const HOUR_MICROSECOND = 57723
const HOUR_MINUTE = 57724
const HOUR_SECOND = 57725
const MICROSECOND = 57726
const MINUTE = 57727
const MINUTE_MICROSECOND = 57728
const MINUTE_SECOND = 57729
const MONTH = 57730
const QUARTER = 57731
const SECOND = 57732
const SECOND_MICROSECOND = 57733
const YEAR_MONTH = 57734
const WEEK = 57735
const REPLACE = 57736
const CONVERT = 57737
const CAST = 57738
const SUBSTR = 57739
const SUBSTRING = 57740
const GROUP_CONCAT = 57741
const SEPARATOR = 57742
const TIMESTAMPADD = 57743
const TIMESTAMPDIFF = 57744
const WEIGHT_STRING = 57745
const MATCH = 57746
const AGAINST = 57747
const BOOLEAN = 57748
const LANGUAGE = 57749
const WITH = 57750
const QUERY = 57751
const EXPANSION = 57752
const WITHOUT = 57753
const VALIDATION = 57754
const UNUSED = 57755
const ARRAY = 57756
const CUME_DIST = 57757
const DESCRIPTION = 57758
const DENSE_RANK = 57759
const EMPTY = 57760
const EXCEPT = 57761
const FIRST_VALUE = 57762
const GROUPING = 57763
const GROUPS = 57764
const JSON_TABLE = 57765
const LAG = 57766
const LAST_VALUE = 57767
const LATERAL = 57768
const LEAD = 57769
const MEMBER = 57770
const NTH_VALUE = 57771
const NTILE = 57772
const OF = 57773
const OVER = 57774
const PERCENT_RANK = 57775
const RANK = 57776
const RECURSIVE = 57777
const ROW_NUMBER = 57778
const SYSTEM = 57779
const WINDOW = 57780
const ACTIVE = 57781
const ADMIN = 57782
const BUCKETS = 57783
const CLONE = 57784
const COMPONENT = 57785
const DEFINITION = 57786
const ENFORCED = 57787
const EXCLUDE = 57788
const FOLLOWING = 57789
const GEOMCOLLECTION = 57790
const GET_MASTER_PUBLIC_KEY = 57791
const HISTOGRAM = 57792
const HISTORY = 57793
const INACTIVE = 57794
const INVISIBLE = 57795
const LOCKED = 57796
const MASTER_COMPRESSION_ALGORITHMS = 57797
const MASTER_PUBLIC_KEY_PATH = 57798
const MASTER_TLS_CIPHERSUITES = 57799
const MASTER_ZSTD_COMPRESSION_LEVEL = 57800
const NESTED = 57801
const NETWORK_NAMESPACE = 57802
const NOWAIT = 57803
const NULLS = 57804
const OJ = 57805
const OLD = 57806
const OPTIONAL = 57807
const ORDINALITY = 57808
const ORGANIZATION = 57809
const OTHERS = 57810
const PATH = 57811
const PERSIST = 57812
const PERSIST_ONLY = 57813
const PRECEDING = 57814
const PRIVILEGE_CHECKS_USER = 57815
const PROCESS = 57816
const RANDOM = 57817
const REFERENCE = 57818
const REQUIRE_ROW_FORMAT = 57819
const RESOURCE = 57820
const RESPECT = 57821
const RESTART = 57822
const RETAIN = 57823
const REUSE = 57824
const ROLE = 57825
const SECONDARY = 57826
const SECONDARY_ENGINE = 57827
const SECONDARY_LOAD = 57828
const SECONDARY_UNLOAD = 57829
const SKIP = 57830
const SRID = 57831
const THREAD_PRIORITY = 57832
const TIES = 57833
const UNBOUNDED = 57834
const VCPU = 57835
const VISIBLE = 57836
const FORMAT = 57837
const TREE = 57838
const VITESS = 57839
const TRADITIONAL = 57840
const LOCAL = 57841
const LOW_PRIORITY = 57842
const NO_WRITE_TO_BINLOG = 57843
const LOGS = 57844
const ERROR = 57845
const GENERAL = 57846
const HOSTS = 57847
const OPTIMIZER_COSTS = 57848
const USER_RESOURCES = 57849
const SLOW = 57850
const CHANNEL = 57851
const RELAY = 57852
const EXPORT = 57853
const AVG_ROW_LENGTH = 57854
const CONNECTION = 57855
const CHECKSUM = 57856
const DELAY_KEY_WRITE = 57857
const ENCRYPTION = 57858
const ENGINE = 57859
const INSERT_METHOD = 57860
const MAX_ROWS = 57861
const MIN_ROWS = 57862
const PACK_KEYS = 57863
const PASSWORD = 57864
const FIXED = 57865
const DYNAMIC = 57866
const COMPRESSED = 57867
const REDUNDANT = 57868
const COMPACT = 57869
const ROW_FORMAT = 57870
const STATS_AUTO_RECALC = 57871
const STATS_PERSISTENT = 57872
const STATS_SAMPLE_PAGES = 57873
const STORAGE = 57874
const MEMORY = 57875
const DISK = 57876
const PARTITIONS = 57877
const LINEAR = 57878
const RANGE = 57879
const LIST = 57880
const SUBPARTITION = 57881
const SUBPARTITIONS = 57882
const HASH = 57883

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 140,
	559, 140,
	-2, 146,
	-1, 48,
	116, 146,
	156, 146,
	312, 146,
	-2, 454,
	-1, 55,
	33, 650,
	216, 650,
	227, 650,
	262, 664,
	263, 664,
	-2, 652,
	-1, 60,
	218, 675,
	-2, 673,
	-1, 114,
	215, 1146,
	-2, 119,
	-1, 116,
	1, 141,
	559, 141,
	-2, 146,
	-1, 126,
	117, 355,
	221, 355,
	-2, 448,
	-1, 145,
	116, 146,
	156, 146,
	312, 146,
	-2, 463,
	-1, 612,
	200, 1167,
	-2, 1163,
	-1, 613,
	200, 1168,
	-2, 1164,
	-1, 687,
	57, 743,
	-2, 758,
	-1, 724,
	132, 1530,
	-2, 112,
	-1, 725,
	132, 1406,
	-2, 113,
	-1, 731,
	132, 1460,
	-2, 1140,
	-1, 874,
	132, 1337,
	-2, 1137,
	-1, 913,
	226, 41,
	231, 41,
	-2, 366,
	-1, 990,
	1, 502,
	559, 502,
	-2, 146,
	-1, 1193,
	57, 744,
	-2, 763,
	-1, 1194,
	57, 745,
	-2, 764,
	-1, 1246,
	116, 146,
	156, 146,
	312, 146,
	-2, 398,
	-1, 1324,
	117, 355,
	221, 355,
	-2, 448,
	-1, 1333,
	226, 42,
	231, 42,
	-2, 367,
	-1, 1590,
	200, 1172,
	-2, 1166,
	-1, 1671,
	116, 146,
	156, 146,
	312, 146,
	-2, 399,
	-1, 1678,
	23, 165,
	-2, 167,
	-1, 1874,
	84, 39,
	-2, 798,
	-1, 1924,
	75, 94,
	84, 94,
	-2, 818,
	-1, 1989,
	534, 578,
	-2, 565,
	-1, 2094,
	47, 1108,
	-2, 1102,
	-1, 2276,
	84, 39,
	-2, 799,
	-1, 2314,
	5, 53,
	16, 53,
	18, 53,
	85, 53,
	-2, 791,
}

const yyPrivate = 57344

const yyLast = 36087

var yyAct = [...]int{
	612, 2595, 2379, 2556, 1625, 2557, 2230, 2543, 2186, 2464,
	2589, 2145, 2152, 2108, 2105, 1054, 606, 3, 1606, 702,
	1172, 96, 2404, 680, 2213, 2154, 1732, 2478, 1862, 2109,
	2212, 1208, 562, 2106, 1897, 2285, 2279, 2409, 1629, 603,
	615, 566, 943, 1604, 604, 2305, 559, 605, 37, 588,
	2215, 182, 1644, 1920, 182, 2103, 526, 182, 2095, 1889,
	2271, 1701, 542, 1956, 182, 560, 1002, 2026, 1986, 1722,
	1706, 558, 182, 1957, 877, 1958, 1657, 154, 38, 729,
	36, 1649, 1881, 703, 1648, 1195, 1864, 182, 554, 1721,
	1668, 1909, 1584, 1529, 1031, 1708, 1238, 2042, 682, 140,
	1636, 1488, 1774, 903, 1950, 1926, 1217, 1741, 1651, 542,
	571, 1175, 542, 182, 542, 91, 908, 1347, 1533, 1540,
	621, 95, 1439, 1331, 726, 684, 1552, 688, 1506, 1073,
	1435, 884, 1338, 911, 914, 881, 1719, 1421, 1587, 909,
	885, 910, 1235, 1221, 1630, 705, 921, 1237, 1052, 694,
	1047, 1697, 1444, 98, 117, 118, 1298, 123, 690, 986,
	689, 124, 692, 716, 97, 76, 1303, 85, 1597, 549,
	1139, 2509, 1979, 89, 2596, 2204, 2183, 157, 1323, 1143,
	1734, 1735, 1736, 1734, 1977, 945, 2005, 2004, 2201, 1772,
	2362, 691, 77, 2034, 2035, 1601, 1602, 1495, 959, 960,
	499, 963, 964, 965, 966, 90, 696, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 710, 948, 715, 119, 8, 125, 878, 1407,
	7, 6, 2202, 1494, 1493, 550, 1074, 1492, 1491, 1490,
	1477, 681, 2572, 683, 2208, 1860, 102, 184, 185, 186,
	552, 723, 553, 730, 2091, 1891, 1482, 889, 894, 2338,
	697, 924, 1074, 2460, 901, 704, 2459, 2169, 594, 947,
	2372, 900, 899, 2373, 925, 946, 2605, 2553, 2599, 78,
	949, 950, 951, 1812, 2526, 2588, 178, 104, 105, 2380,
	108, 78, 78, 114, 119, 80, 179, 78, 2544, 494,
	956, 1760, 961, 2552, 2525, 1105, 2041, 2263, 1313, 1239,
	120, 1240, 2013, 1861, 893, 1900, 2012, 895, 1713, 676,
	677, 678, 679, 162, 2141, 687, 2469, 1106, 1107, 1108,
	1109, 1110, 1111, 1112, 1114, 1113, 1115, 1116, 1603, 2033,
	1901, 1084, 1711, 1038, 1809, 1040, 2422, 1810, 1662, 2205,
	2142, 2143, 1050, 718, 719, 1021, 87, 1935, 119, 674,
	1934, 1663, 1664, 1936, 673, 1940, 1009, 1084, 87, 87,
	898, 1010, 995, 996, 87, 1022, 1009, 178, 1026, 1027,
	159, 1010, 160, 1037, 1039, 1015, 1980, 1947, 1982, 1008,
	2254, 1007, 177, 1681, 1680, 529, 2232, 2252, 2282, 529,
	529, 120, 2068, 142, 998, 540, 1481, 544, 538, 1397,
	1179, 898, 1987, 890, 162, 2008, 2148, 1427, 1742, 1775,
	892, 891, 989, 529, 1786, 1783, 1785, 1784, 896, 1780,
	2598, 1422, 1044, 2225, 1080, 962, 1030, 1072, 985, 902,
	1788, 2226, 1789, 991, 1790, 152, 1483, 1484, 1485, 2021,
	141, 2364, 1049, 1398, 1023, 1399, 1024, 1025, 2363, 1779,
	1080, 2149, 1791, 968, 1016, 967, 2234, 1028, 1710, 896,
	1777, 159, 2447, 160, 1035, 2233, 2360, 1029, 1036, 1325,
	1326, 151, 150, 177, 1781, 904, 2151, 1745, 1041, 905,
	2146, 87, 1645, 2573, 182, 2600, 182, 163, 905, 182,
	941, 1778, 932, 940, 2156, 2157, 168, 930, 939, 2043,
	1034, 2147, 938, 937, 1182, 936, 935, 1042, 923, 934,
	929, 1316, 942, 2158, 2586, 882, 1019, 542, 542, 542,
	917, 882, 2593, 1337, 916, 1117, 1810, 882, 897, 1436,
	1720, 880, 2025, 2153, 717, 542, 542, 607, 2022, 589,
	611, 591, 608, 609, 2069, 587, 590, 610, 898, 984,
	1766, 1117, 923, 1432, 1066, 1060, 952, 1005, 2176, 1011,
	1012, 1013, 1014, 2007, 1311, 1310, 146, 1327, 153, 897,
	1324, 1309, 147, 148, 592, 593, 2435, 2359, 163, 1997,
	2045, 530, 1051, 1433, 37, 530, 530, 168, 1079, 1076,
	1077, 1078, 1083, 1085, 1082, 2168, 1081, 1428, 2155, 2470,
	1307, 2508, 1978, 1075, 2010, 1045, 922, 155, 2037, 530,
	2158, 926, 916, 988, 1079, 1076, 1077, 1078, 1083, 1085,
	1082, 927, 1081, 1120, 1121, 1122, 1123, 1336, 498, 1075,
	1631, 1632, 933, 1128, 1823, 1131, 1981, 931, 1865, 1867,
	958, 928, 2055, 2054, 2053, 2047, 2524, 2051, 2514, 2046,
	922, 2044, 493, 1165, 2283, 2499, 2049, 1426, 1712, 2206,
	2207, 1170, 1118, 1119, 182, 2048, 1056, 1057, 542, 542,
	1043, 2028, 2209, 2319, 1124, 2301, 2027, 2028, 1811, 1762,
	2050, 2052, 2027, 2020, 182, 1931, 2019, 81, 86, 712,
	1183, 1896, 1117, 1852, 1171, 682, 1188, 1186, 155, 1018,
	86, 86, 987, 542, 1596, 1225, 86, 182, 1151, 1000,
	1020, 1669, 542, 2150, 1116, 2140, 897, 923, 542, 1185,
	699, 2591, 116, 1189, 2592, 1032, 2590, 726, 77, 684,
	1409, 1408, 1410, 1411, 1412, 923, 111, 1004, 1445, 923,
	1048, 2563, 994, 997, 2520, 2561, 944, 1006, 1141, 2061,
	1142, 2355, 2295, 923, 2565, 2566, 1171, 555, 1187, 2156,
	2157, 1145, 95, 1069, 1776, 1429, 2562, 1067, 1068, 184,
	185, 186, 1176, 1531, 149, 1241, 1070, 1157, 1158, 1159,
	1160, 1161, 1511, 1553, 1970, 1866, 1423, 143, 1424, 706,
	144, 1425, 1089, 112, 98, 2418, 1512, 1513, 1510, 2330,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 1087, 2329, 1088, 1089, 922, 173, 174, 175, 176,
	2063, 916, 919, 920, 1553, 882, 1838, 1088, 1089, 913,
	917, 1759, 1173, 922, 1749, 957, 1346, 922, 681, 1184,
	1532, 2584, 926, 916, 1757, 1345, 1207, 683, 1204, 1335,
	912, 922, 927, 1754, 1761, 1033, 730, 916, 919, 920,
	932, 882, 930, 2155, 1003, 913, 917, 182, 1446, 2582,
	1236, 1299, 1231, 1232, 2531, 2158, 1087, 2320, 1088, 1089,
	1758, 1308, 1109, 1110, 1111, 1112, 1114, 1113, 1115, 1116,
	1754, 156, 161, 158, 164, 165, 166, 167, 169, 170,
	171, 172, 542, 990, 1333, 1847, 2532, 173, 174, 175,
	176, 2492, 1342, 1637, 1638, 1226, 1344, 1756, 2260, 542,
	542, 1416, 542, 1190, 542, 542, 2603, 542, 542, 542,
	542, 542, 542, 2455, 1314, 1315, 1111, 1112, 1114, 1113,
	1115, 1116, 542, 2493, 2454, 2601, 182, 1380, 1093, 1094,
	1095, 1096, 1097, 1098, 1099, 1091, 1343, 1501, 1503, 1504,
	2258, 1202, 182, 1107, 1108, 1109, 1110, 1111, 1112, 1114,
	1113, 1115, 1116, 542, 87, 182, 1329, 1827, 1502, 721,
	1393, 1375, 1376, 1202, 1415, 2445, 1434, 1834, 1509, 542,
	1087, 182, 1088, 1089, 1383, 1384, 1087, 1322, 1088, 1089,
	1389, 1390, 1087, 2395, 1088, 1089, 1202, 182, 1087, 2394,
	1088, 1089, 2337, 1557, 182, 2505, 1377, 1558, 1087, 2602,
	1088, 1089, 1414, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 542, 542, 542, 1341, 1404, 1349, 1306, 1350,
	2336, 1352, 1354, 1340, 2184, 1358, 1360, 1362, 1364, 1366,
	1087, 2174, 1088, 1089, 1320, 1954, 1339, 1339, 1318, 1833,
	1332, 1215, 1953, 182, 1829, 1716, 1202, 1815, 1816, 1817,
	1441, 1417, 1449, 1828, 1087, 1319, 1088, 1089, 1402, 1453,
	1401, 1455, 1456, 1457, 1458, 1413, 1400, 1378, 1462, 1391,
	2443, 1385, 1447, 1448, 2266, 1087, 1382, 1088, 1089, 1403,
	1381, 1087, 1476, 1088, 1089, 1356, 1452, 1507, 1530, 1087,
	2583, 1088, 1089, 1459, 1460, 1461, 2517, 1211, 1437, 2516,
	2496, 1543, 542, 2495, 2494, 1087, 1214, 1088, 1089, 2450,
	1087, 1312, 1088, 1089, 2356, 900, 899, 542, 542, 1514,
	2265, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1505, 1955, 2417, 1588, 119, 1515,
	1451, 2415, 1087, 2391, 1088, 1089, 1212, 2334, 182, 1087,
	1554, 1088, 1089, 542, 1202, 2326, 1087, 1963, 1088, 1089,
	1472, 1473, 1474, 1951, 2229, 1475, 626, 627, 628, 1609,
	1087, 1824, 1088, 1089, 1770, 1769, 1615, 182, 1616, 1628,
	542, 1508, 184, 185, 186, 1610, 2327, 184, 185, 186,
	182, 1938, 1478, 542, 1442, 184, 185, 186, 182, 1730,
	182, 1590, 182, 182, 542, 1405, 1392, 542, 1538, 1536,
	1536, 1588, 184, 185, 186, 1388, 1592, 1593, 542, 726,
	1387, 1386, 726, 1213, 95, 1046, 1090, 184, 185, 186,
	1059, 1728, 1887, 2597, 1539, 101, 101, 1887, 2550, 1887,
	2537, 1545, 1546, 95, 1589, 2477, 100, 100, 99, 99,
	2476, 1621, 1887, 2535, 1137, 1647, 92, 94, 2527, 1202,
	2439, 1591, 2438, 94, 1594, 1595, 92, 93, 1898, 1687,
	1688, 1689, 1690, 542, 2378, 1590, 1988, 93, 1887, 2510,
	1723, 1724, 1725, 2370, 2507, 1727, 1729, 1887, 2446, 1966,
	696, 1677, 1673, 555, 1672, 2370, 1202, 1887, 2368, 542,
	1898, 1620, 1754, 1202, 1655, 542, 1342, 2299, 1202, 1342,
	1678, 1342, 2166, 2165, 2104, 1202, 1202, 1753, 1642, 2187,
	1883, 1202, 2162, 2163, 2294, 1743, 1623, 2162, 2161, 1703,
	2569, 1202, 1906, 1202, 1676, 94, 1640, 100, 1105, 1906,
	2036, 1709, 1825, 1202, 1810, 2006, 1659, 542, 730, 1530,
	2294, 730, 1660, 1905, 1530, 1530, 1105, 1675, 1822, 1674,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1113, 1115,
	1116, 2294, 1582, 1740, 1715, 1302, 1991, 1218, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1114, 1113, 1115, 1116, 2296,
	182, 1682, 1825, 1683, 1684, 1685, 1686, 182, 1984, 1985,
	1887, 1886, 182, 182, 1704, 1825, 182, 1906, 182, 1693,
	1694, 1695, 1696, 1714, 1718, 182, 1699, 1700, 1927, 1726,
	94, 1763, 182, 1755, 1927, 1086, 1202, 1302, 1301, 1748,
	2135, 924, 1751, 1086, 1752, 2519, 1747, 1746, 1704, 1810,
	1750, 1887, 1765, 2339, 925, 1247, 1246, 1767, 1768, 1906,
	182, 542, 2164, 2079, 1339, 1764, 1574, 1563, 1564, 1565,
	1566, 1576, 1567, 1568, 1569, 1581, 1577, 1570, 1571, 1578,
	1579, 1580, 1572, 1573, 1575, 1661, 686, 2540, 1202, 1825,
	1754, 1928, 1844, 1105, 1801, 1802, 1101, 1928, 1102, 1804,
	1930, 1773, 1843, 2340, 2341, 2342, 1810, 1507, 1805, 1754,
	1737, 1635, 1103, 1104, 1100, 1106, 1107, 1108, 1109, 1110,
	1111, 1112, 1114, 1113, 1115, 1116, 1206, 613, 1599, 1486,
	1431, 1233, 907, 906, 87, 1371, 2466, 1209, 1819, 2436,
	1821, 2429, 2354, 2351, 1794, 1106, 1107, 1108, 1109, 1110,
	1111, 1112, 1114, 1113, 1115, 1116, 2332, 2269, 1820, 2268,
	1304, 1702, 2227, 87, 2189, 2185, 1992, 1305, 1698, 1692,
	1691, 1419, 1334, 1330, 1300, 113, 1960, 989, 183, 2231,
	182, 183, 1959, 2467, 183, 1372, 1373, 1374, 182, 543,
	2343, 183, 1858, 1713, 542, 1613, 1808, 1368, 1875, 183,
	542, 1508, 2306, 2307, 2579, 2577, 1869, 2558, 2309, 2181,
	2180, 542, 2179, 2104, 183, 1971, 1795, 1479, 2312, 1818,
	1911, 1914, 1915, 1916, 1912, 2575, 1913, 1917, 2126, 1960,
	2306, 2307, 2551, 2127, 182, 182, 543, 2344, 2345, 543,
	183, 543, 1902, 2124, 1369, 1370, 2311, 1888, 2125, 2128,
	1937, 1915, 1916, 2123, 2122, 1210, 1590, 1627, 1837, 1911,
	1914, 1915, 1916, 1912, 1619, 1913, 1917, 1835, 2399, 2300,
	2398, 2084, 37, 2096, 2098, 2083, 2491, 2287, 2408, 2410,
	2290, 1922, 2099, 2093, 1443, 2286, 1430, 1884, 1176, 700,
	672, 1859, 2160, 1945, 542, 1964, 954, 701, 953, 1589,
	182, 2241, 1948, 1949, 1849, 1850, 1549, 182, 1959, 2031,
	1871, 1058, 1536, 2292, 1921, 1885, 1880, 92, 2397, 542,
	1550, 92, 1895, 1983, 94, 1999, 542, 1998, 93, 1941,
	1342, 1342, 93, 1962, 120, 542, 1925, 94, 1932, 2177,
	1200, 1196, 1929, 1637, 1638, 1798, 2506, 2003, 1200, 1196,
	99, 2462, 2159, 1919, 1939, 1197, 1624, 1709, 182, 182,
	182, 182, 182, 1197, 708, 709, 1496, 1497, 1498, 1499,
	1942, 2082, 1787, 2272, 101, 182, 182, 1952, 1814, 2081,
	1617, 1618, 1199, 1961, 1198, 100, 101, 99, 1193, 1194,
	1199, 182, 1198, 1972, 1973, 1974, 1105, 100, 1967, 99,
	2483, 1968, 2482, 2416, 2414, 2413, 1541, 1542, 94, 2406,
	1530, 2352, 2291, 2001, 1547, 2289, 2190, 1322, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1114, 1113, 1115, 1116, 1583,
	1738, 1317, 101, 542, 707, 100, 2002, 682, 2405, 2060,
	2280, 1898, 1883, 100, 2581, 2580, 2581, 1845, 2073, 542,
	1611, 2000, 1227, 1993, 1994, 1219, 106, 107, 555, 2580,
	2497, 2325, 698, 103, 182, 88, 1, 596, 542, 2039,
	2560, 511, 1600, 1174, 2038, 2029, 2023, 542, 2030, 525,
	1406, 1396, 2381, 2463, 542, 542, 2195, 182, 182, 182,
	182, 182, 2073, 2193, 1633, 1634, 2086, 2101, 2110, 182,
	2116, 1744, 2350, 2057, 182, 182, 2056, 182, 1707, 915,
	182, 182, 182, 145, 1670, 1671, 2546, 2087, 110, 875,
	109, 1667, 2107, 2200, 2072, 2040, 918, 2107, 1017, 541,
	2074, 688, 1739, 2371, 1946, 1679, 2197, 2196, 2194, 1253,
	1251, 1252, 1250, 2085, 1255, 2175, 1254, 1249, 2134, 1846,
	2088, 1189, 182, 1480, 539, 1918, 180, 1242, 1220, 955,
	2136, 501, 690, 2137, 689, 542, 2078, 2167, 1771, 2118,
	2119, 2117, 2121, 542, 2120, 507, 728, 2211, 182, 879,
	1705, 886, 2172, 2173, 2133, 1129, 95, 2138, 182, 2129,
	2080, 1441, 2075, 2076, 2077, 1933, 727, 720, 2144, 1612,
	1873, 2112, 2115, 182, 2284, 2092, 182, 2094, 1890, 2192,
	2097, 2090, 2171, 2170, 2490, 2407, 2242, 2538, 1943, 2219,
	1216, 183, 1836, 183, 2218, 1136, 183, 1551, 1652, 1608,
	1500, 564, 563, 561, 1876, 1899, 1092, 616, 1863, 2191,
	1228, 1709, 2210, 1910, 1908, 1907, 1796, 1656, 2308, 2222,
	2304, 1650, 1882, 572, 543, 543, 543, 565, 557, 614,
	542, 182, 2322, 2217, 2009, 2228, 2011, 1944, 2237, 2224,
	1071, 2236, 543, 543, 1192, 551, 2239, 2240, 888, 1548,
	2468, 2512, 1813, 2244, 2262, 1191, 1561, 1201, 2243, 2250,
	1562, 178, 2182, 1989, 1731, 63, 41, 546, 2571, 1062,
	2278, 714, 32, 31, 30, 29, 28, 23, 22, 21,
	20, 19, 25, 18, 17, 120, 182, 2273, 2274, 16,
	2203, 115, 50, 47, 45, 122, 121, 48, 162, 44,
	2281, 2303, 992, 2288, 2328, 42, 27, 26, 15, 182,
	14, 2293, 2313, 13, 12, 11, 2310, 10, 9, 5,
	4, 2317, 2318, 35, 34, 33, 1065, 182, 24, 2,
	182, 182, 182, 2199, 2198, 1976, 1733, 2315, 2219, 2316,
	542, 542, 0, 2218, 2357, 2358, 0, 0, 2323, 2324,
	2333, 0, 2335, 0, 0, 159, 0, 160, 0, 0,
	2247, 2248, 0, 2249, 0, 0, 2251, 177, 2253, 0,
	2255, 183, 0, 0, 0, 543, 543, 0, 0, 0,
	0, 0, 542, 542, 542, 542, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 2361, 0, 0, 0, 2365,
	2366, 2367, 0, 1839, 0, 2377, 0, 0, 0, 0,
	543, 2375, 2376, 0, 183, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 543, 182, 0, 0, 0,
	0, 0, 2390, 0, 0, 0, 0, 2387, 0, 0,
	0, 0, 2386, 0, 0, 0, 0, 0, 0, 0,
	542, 0, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2110, 2425, 2403, 2423, 2110, 0, 2402,
	2412, 2411, 163, 0, 0, 682, 2421, 2427, 2419, 0,
	0, 168, 0, 0, 0, 1218, 2107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 37, 0, 0, 0,
	2431, 2432, 0, 0, 0, 542, 0, 0, 2434, 2444,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 2448, 2440, 2442,
	0, 542, 2441, 0, 0, 0, 2456, 0, 0, 0,
	0, 0, 0, 0, 2457, 2458, 2465, 542, 0, 0,
	0, 542, 542, 0, 0, 2451, 2452, 2453, 0, 0,
	0, 0, 0, 0, 728, 728, 728, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 2487, 2489, 2484, 2485,
	542, 2486, 1061, 1063, 2501, 0, 2498, 542, 0, 2110,
	0, 2504, 155, 0, 0, 0, 0, 2500, 0, 0,
	0, 0, 182, 682, 0, 2502, 0, 0, 0, 543,
	0, 0, 0, 0, 2511, 0, 0, 542, 182, 0,
	2515, 2521, 0, 0, 0, 0, 543, 543, 0, 543,
	2518, 543, 543, 0, 543, 543, 543, 543, 543, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	542, 0, 0, 183, 0, 0, 0, 0, 0, 1168,
	37, 0, 2533, 0, 0, 0, 0, 0, 2541, 183,
	542, 542, 2536, 0, 2539, 0, 0, 0, 542, 2545,
	543, 0, 183, 2058, 2059, 2465, 2547, 0, 2062, 2107,
	0, 0, 0, 2064, 2065, 2066, 543, 2567, 183, 0,
	2559, 2564, 0, 0, 37, 0, 0, 2574, 0, 0,
	0, 2578, 2576, 0, 183, 1180, 1181, 0, 0, 0,
	542, 183, 0, 0, 2585, 0, 0, 2587, 0, 0,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 543,
	543, 543, 2594, 0, 0, 0, 0, 0, 2102, 2604,
	1223, 0, 0, 0, 0, 0, 0, 0, 0, 728,
	0, 0, 0, 0, 0, 1243, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 161, 158, 164, 165,
	166, 167, 169, 170, 171, 172, 0, 0, 0, 0,
	0, 173, 174, 175, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	2188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 543, 0, 0,
	0, 0, 0, 2264, 0, 0, 0, 183, 0, 0,
	543, 0, 0, 0, 0, 183, 0, 183, 0, 183,
	183, 543, 0, 0, 543, 0, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 0, 1203, 1205, 879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 555, 1168, 0, 0, 0, 1348, 1348, 0, 1348,
	0, 1348, 1348, 0, 1357, 1348, 1348, 1348, 1348, 1348,
	0, 0, 0, 0, 0, 0, 0, 1168, 1168, 879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 0, 0, 0, 0, 0, 543, 0, 0, 0,
	0, 0, 543, 597, 0, 2353, 1438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1258, 0, 0, 2374, 0, 0, 0,
	0, 0, 0, 0, 543, 0, 0, 0, 0, 728,
	728, 728, 0, 0, 181, 0, 0, 497, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 497, 0, 0, 2388, 0,
	2389, 0, 0, 0, 0, 2392, 2393, 183, 0, 0,
	695, 0, 0, 0, 183, 0, 0, 0, 0, 183,
	183, 0, 0, 183, 0, 183, 713, 0, 713, 0,
	0, 0, 183, 0, 1271, 2420, 497, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 2428, 0, 0, 2430,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1544,
	0, 2433, 0, 0, 0, 0, 1168, 183, 543, 0,
	0, 0, 2437, 0, 1559, 1560, 0, 0, 0, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 1284, 1287,
	1288, 1289, 1290, 1291, 1292, 0, 1293, 1294, 1295, 1296,
	1297, 1272, 1273, 1274, 1275, 1256, 1257, 1285, 0, 1259,
	1614, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 0, 0,
	0, 0, 0, 0, 0, 2488, 555, 0, 0, 0,
	1223, 0, 0, 728, 0, 0, 0, 0, 0, 0,
	0, 728, 0, 0, 728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 555,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 543, 0, 0, 0, 0, 0, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 1286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	886, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 555, 0, 0, 879, 0, 0, 0,
	0, 0, 886, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2568, 0, 0, 0, 0, 0, 0, 0, 1555, 0,
	0, 0, 1556, 0, 0, 0, 0, 0, 0, 0,
	0, 543, 0, 0, 879, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 1203,
	1598, 0, 0, 0, 0, 0, 543, 0, 0, 0,
	0, 0, 0, 543, 0, 0, 0, 0, 0, 0,
	0, 1177, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 183, 183, 183, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 496, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 545, 0, 0, 1807, 0,
	0, 0, 0, 675, 0, 0, 0, 497, 0, 497,
	0, 0, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1717, 883, 0, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 0, 0, 0, 0, 0,
	0, 543, 543, 0, 183, 183, 183, 183, 183, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 183, 183, 0, 183, 0, 0, 183, 183, 183,
	0, 0, 0, 0, 728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 0, 0, 0, 1169, 0, 1877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1892, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 0, 0, 0, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 183, 0, 0, 0, 695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	497, 1965, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1626, 543, 183, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 1995, 0, 0, 0, 0, 1826, 0, 0,
	0, 1830, 0, 1831, 1832, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 1841, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 1853,
	1854, 1855, 1856, 1857, 0, 1622, 183, 0, 0, 0,
	0, 0, 184, 185, 186, 0, 1870, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 183, 183, 183,
	0, 0, 0, 0, 0, 0, 0, 543, 543, 0,
	728, 0, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 0,
	497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2089, 0, 0, 0, 543,
	543, 543, 543, 516, 728, 0, 0, 0, 1168, 0,
	0, 2114, 1348, 1168, 0, 993, 0, 999, 0, 0,
	1001, 0, 0, 0, 0, 0, 0, 0, 1169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 515,
	0, 0, 0, 1169, 1169, 0, 0, 0, 0, 497,
	0, 513, 0, 0, 0, 0, 0, 543, 0, 543,
	0, 0, 0, 0, 0, 1394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 497, 0,
	0, 0, 879, 0, 0, 1168, 0, 0, 0, 0,
	1626, 510, 0, 0, 1440, 0, 0, 0, 0, 0,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	497, 0, 543, 0, 0, 521, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 183, 1463, 1464, 497, 497,
	497, 497, 497, 497, 497, 0, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 543, 0, 0, 0, 543, 543,
	0, 0, 0, 0, 2067, 0, 497, 2070, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 2089, 500, 0,
	502, 517, 0, 532, 0, 531, 506, 543, 504, 508,
	518, 509, 0, 503, 543, 514, 0, 0, 505, 519,
	520, 522, 536, 535, 523, 0, 512, 533, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 713,
	0, 2113, 0, 0, 543, 183, 713, 713, 1230, 0,
	0, 0, 1169, 0, 0, 0, 0, 0, 2131, 2132,
	623, 79, 0, 0, 713, 1440, 713, 713, 713, 713,
	713, 0, 0, 0, 0, 0, 0, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1394, 0, 0, 0, 0, 0, 543, 543, 0,
	0, 0, 0, 0, 0, 543, 713, 1626, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	695, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 497, 0, 0, 0, 0, 685, 1440,
	79, 497, 0, 497, 0, 497, 1658, 543, 0, 2382,
	2383, 2384, 2385, 0, 0, 0, 0, 0, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 0, 887, 0, 0, 0, 0, 0,
	2246, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	527, 0, 0, 0, 2256, 2257, 2259, 2261, 0, 0,
	1321, 0, 0, 0, 2267, 528, 0, 0, 1248, 0,
	2270, 0, 1168, 120, 0, 142, 2275, 2424, 0, 2426,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2297,
	2298, 0, 0, 2302, 0, 0, 0, 152, 0, 0,
	0, 0, 141, 0, 0, 0, 0, 0, 0, 0,
	0, 2314, 1626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 160, 0, 1379, 0, 0,
	0, 1325, 1326, 151, 150, 177, 0, 0, 728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2480, 0, 1420, 0, 2480, 2480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 497, 0, 0, 0, 0, 0, 0,
	497, 0, 0, 0, 0, 497, 497, 1626, 1450, 497,
	2369, 1799, 0, 0, 1626, 1454, 0, 0, 497, 0,
	0, 0, 0, 0, 0, 497, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 0, 0, 0, 146, 1327,
	153, 0, 1324, 497, 147, 148, 0, 0, 0, 0,
	163, 0, 0, 0, 1489, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 0, 1168, 0, 2534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 728, 728, 0,
	0, 0, 0, 0, 0, 2554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 713,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1440, 0, 2461, 497, 0, 0, 0, 0, 0, 0,
	155, 1394, 0, 0, 0, 0, 2471, 2472, 2473, 0,
	2474, 2475, 0, 0, 2479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1639, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 1646, 0, 0, 1489, 0, 0, 497, 497, 0,
	0, 2503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1053, 1053, 1053,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2523, 79, 0, 143,
	0, 0, 144, 0, 0, 0, 2528, 0, 0, 0,
	0, 0, 2529, 2530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 497, 685, 1125, 1126, 1127, 0, 1130,
	1975, 1132, 1133, 1134, 1135, 0, 1138, 1140, 1140, 0,
	1140, 1144, 1144, 1146, 1147, 1148, 1149, 1150, 0, 1152,
	1153, 1154, 1155, 1156, 0, 0, 0, 0, 1144, 1144,
	1144, 1144, 1144, 0, 0, 0, 0, 0, 0, 0,
	2570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 497, 497, 497, 497, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 497, 497,
	0, 0, 0, 156, 161, 158, 164, 165, 166, 167,
	169, 170, 171, 172, 497, 0, 0, 0, 0, 173,
	174, 175, 176, 0, 0, 0, 1178, 0, 0, 713,
	0, 0, 685, 0, 0, 178, 685, 0, 0, 0,
	0, 1489, 685, 0, 0, 0, 0, 0, 1782, 0,
	0, 0, 0, 1792, 1793, 713, 0, 1797, 0, 120,
	0, 142, 0, 0, 0, 0, 1800, 0, 0, 0,
	0, 0, 162, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 78, 39, 40, 80, 0,
	0, 1806, 0, 152, 1169, 0, 0, 0, 141, 1169,
	497, 497, 497, 497, 497, 84, 0, 0, 0, 43,
	69, 70, 2130, 67, 71, 0, 0, 497, 1394, 159,
	497, 160, 68, 497, 2139, 1440, 0, 129, 130, 151,
	150, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 56, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 0, 0, 497,
	0, 0, 0, 0, 146, 127, 153, 134, 126, 0,
	147, 148, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 136, 131, 132, 133, 137, 1924, 0, 0, 0,
	0, 0, 128, 0, 497, 0, 0, 0, 0, 0,
	0, 139, 46, 49, 52, 51, 54, 0, 66, 0,
	0, 75, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 83, 82, 0, 0, 64,
	65, 53, 0, 0, 0, 0, 0, 73, 74, 497,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 497, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 57, 58, 0, 59, 60, 61, 62,
	497, 0, 0, 497, 497, 497, 0, 0, 0, 0,
	0, 0, 1053, 1053, 1053, 0, 0, 0, 0, 2014,
	2015, 2016, 2017, 2018, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1489, 2024, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 149, 0, 0, 0, 617, 624, 625, 626,
	627, 628, 618, 620, 0, 143, 0, 619, 144, 0,
	622, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1169, 0,
	81, 0, 0, 2220, 2221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 86, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 0, 0, 0, 156,
	161, 158, 164, 165, 166, 167, 169, 170, 171, 172,
	0, 1394, 0, 0, 0, 173, 174, 175, 176, 0,
	0, 0, 1653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2235, 0, 0, 2238, 0, 0,
	0, 0, 0, 887, 0, 1394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 887, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1169, 2277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 607, 0,
	0, 611, 0, 608, 609, 87, 0, 0, 610, 0,
	0, 617, 624, 625, 626, 627, 628, 618, 620, 0,
	0, 0, 619, 0, 0, 622, 629, 630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 1534, 1535, 0, 0, 0, 2346, 1537,
	0, 2347, 2348, 2349, 0, 0, 0, 0, 2220, 2221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1534, 1535, 1851,
	0, 0, 0, 1537, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1903, 1904, 0, 0, 0,
	0, 0, 0, 0, 1923, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2111, 0, 79, 0, 0, 1653, 1653, 1653,
	1653, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1923, 0, 0, 1653, 0, 0,
	1653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2396, 0, 2400, 2401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2111, 0, 79,
	0, 2111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 857, 843, 419, 0, 790, 860, 760, 778, 870,
	781, 784, 825, 739, 803, 341, 775, 79, 764, 735,
	770, 736, 762, 792, 244, 759, 845, 807, 859, 297,
	241, 741, 765, 355, 780, 193, 827, 395, 228, 307,
	304, 426, 255, 247, 243, 227, 281, 313, 353, 413,
	347, 866, 301, 813, 0, 404, 326, 0, 0, 0,
	794, 849, 801, 839, 789, 826, 749, 812, 861, 776,
	822, 862, 287, 226, 192, 338, 405, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 2548, 0, 2549, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 772, 819,
	856, 773, 821, 239, 285, 246, 238, 423, 867, 848,
	0, 0, 209, 858, 796, 0, 824, 0, 873, 734,
	815, 0, 737, 740, 869, 852, 768, 249, 0, 0,
	0, 0, 0, 0, 0, 793, 802, 836, 787, 0,
	0, 0, 0, 0, 0, 0, 766, 0, 811, 0,
	0, 0, 745, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 791, 0, 0, 0, 748,
	0, 767, 837, 0, 732, 268, 742, 327, 231, 0,
	841, 851, 788, 456, 855, 786, 785, 831, 746, 847,
	779, 296, 744, 293, 188, 205, 0, 777, 337, 378,
	384, 846, 763, 771, 229, 769, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 810, 829, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 1055, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	758, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 842, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	834, 872, 350, 383, 219, 442, 403, 753, 757, 751,
	816, 752, 805, 806, 754, 863, 864, 865, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 838, 747, 0,
	755, 756, 0, 844, 853, 854, 492, 809, 187, 202,
	299, 868, 372, 261, 470, 450, 446, 733, 750, 236,
	761, 0, 0, 774, 782, 783, 795, 797, 798, 799,
	800, 323, 817, 818, 820, 828, 830, 833, 835, 840,
	850, 871, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 808, 814, 310, 254, 273, 284, 823,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 804,
	832, 306, 420, 421, 280, 857, 843, 419, 0, 790,
	860, 760, 778, 870, 781, 784, 825, 739, 803, 341,
	775, 0, 764, 735, 770, 736, 762, 792, 244, 759,
	845, 807, 859, 297, 241, 741, 765, 355, 780, 193,
	827, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 866, 301, 813, 0, 404,
	326, 0, 0, 0, 794, 849, 801, 839, 789, 826,
	749, 812, 861, 776, 822, 862, 287, 226, 192, 338,
	405, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 772, 819, 856, 773, 821, 239, 285, 246,
	238, 423, 867, 848, 0, 0, 209, 858, 796, 0,
	824, 0, 873, 734, 815, 0, 737, 740, 869, 852,
	768, 249, 0, 0, 0, 0, 0, 0, 0, 793,
	802, 836, 787, 0, 0, 0, 0, 0, 2140, 0,
	766, 0, 811, 0, 0, 0, 745, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 791,
	0, 0, 0, 748, 0, 767, 837, 0, 732, 268,
	742, 327, 231, 0, 841, 851, 788, 456, 855, 786,
	785, 831, 746, 847, 779, 296, 744, 293, 188, 205,
	0, 777, 337, 378, 384, 846, 763, 771, 229, 769,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	810, 829, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 1055, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 758, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 842, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 834, 872, 350, 383, 219, 442,
	403, 753, 757, 751, 816, 752, 805, 806, 754, 863,
	864, 865, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 838, 747, 0, 755, 756, 0, 844, 853, 854,
	492, 809, 187, 202, 299, 868, 372, 261, 470, 450,
	446, 733, 750, 236, 761, 0, 0, 774, 782, 783,
	795, 797, 798, 799, 800, 323, 817, 818, 820, 828,
	830, 833, 835, 840, 850, 871, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 314, 315, 316, 317, 334, 335, 336, 339,
	342, 343, 346, 348, 349, 352, 359, 360, 361, 362,
	364, 366, 373, 377, 385, 386, 387, 388, 389, 391,
	392, 396, 397, 398, 399, 407, 411, 429, 430, 441,
	454, 459, 270, 437, 460, 0, 308, 808, 814, 310,
	254, 273, 284, 823, 449, 408, 207, 379, 262, 196,
	225, 210, 233, 248, 251, 288, 318, 325, 354, 358,
	267, 245, 223, 376, 220, 394, 414, 415, 416, 418,
	322, 240, 357, 804, 832, 306, 420, 421, 280, 857,
	843, 419, 0, 790, 860, 760, 778, 870, 781, 784,
	825, 739, 803, 341, 775, 0, 764, 735, 770, 736,
	762, 792, 244, 759, 845, 807, 859, 297, 241, 741,
	765, 355, 780, 193, 827, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 866,
	301, 813, 0, 404, 326, 0, 0, 0, 794, 849,
	801, 839, 789, 826, 749, 812, 861, 776, 822, 862,
	287, 226, 192, 338, 405, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 772, 819, 856, 773,
	821, 239, 285, 246, 238, 423, 867, 848, 0, 0,
	209, 858, 796, 0, 824, 0, 873, 734, 815, 0,
	737, 740, 869, 852, 768, 249, 0, 0, 0, 0,
	0, 0, 0, 793, 802, 836, 787, 0, 0, 0,
	0, 0, 2100, 0, 766, 0, 811, 0, 0, 0,
	745, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 791, 0, 0, 0, 748, 0, 767,
	837, 0, 732, 268, 742, 327, 231, 0, 841, 851,
	788, 456, 855, 786, 785, 831, 746, 847, 779, 296,
	744, 293, 188, 205, 0, 777, 337, 378, 384, 846,
	763, 771, 229, 769, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 810, 829, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 1055, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 758, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 842, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 834, 872,
	350, 383, 219, 442, 403, 753, 757, 751, 816, 752,
	805, 806, 754, 863, 864, 865, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 838, 747, 0, 755, 756,
	0, 844, 853, 854, 492, 809, 187, 202, 299, 868,
	372, 261, 470, 450, 446, 733, 750, 236, 761, 0,
	0, 774, 782, 783, 795, 797, 798, 799, 800, 323,
	817, 818, 820, 828, 830, 833, 835, 840, 850, 871,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 808, 814, 310, 254, 273, 284, 823, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 804, 832, 306,
	420, 421, 280, 857, 843, 419, 0, 790, 860, 760,
	778, 870, 781, 784, 825, 739, 803, 341, 775, 0,
	764, 735, 770, 736, 762, 792, 244, 759, 845, 807,
	859, 297, 241, 741, 765, 355, 780, 193, 827, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 866, 301, 813, 0, 404, 326, 0,
	0, 0, 794, 849, 801, 839, 789, 826, 749, 812,
	861, 776, 822, 862, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	772, 819, 856, 773, 821, 239, 285, 246, 238, 423,
	867, 848, 0, 0, 209, 858, 796, 0, 824, 0,
	873, 734, 815, 0, 737, 740, 869, 852, 768, 249,
	0, 0, 0, 0, 0, 0, 0, 793, 802, 836,
	787, 0, 0, 0, 0, 0, 1641, 0, 766, 0,
	811, 0, 0, 0, 745, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 791, 0, 0,
	0, 748, 0, 767, 837, 0, 732, 268, 742, 327,
	231, 0, 841, 851, 788, 456, 855, 786, 785, 831,
	746, 847, 779, 296, 744, 293, 188, 205, 0, 777,
	337, 378, 384, 846, 763, 771, 229, 769, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 810, 829,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	1055, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 758, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 842, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 834, 872, 350, 383, 219, 442, 403, 753,
	757, 751, 816, 752, 805, 806, 754, 863, 864, 865,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 838,
	747, 0, 755, 756, 0, 844, 853, 854, 492, 809,
	187, 202, 299, 868, 372, 261, 470, 450, 446, 733,
	750, 236, 761, 0, 0, 774, 782, 783, 795, 797,
	798, 799, 800, 323, 817, 818, 820, 828, 830, 833,
	835, 840, 850, 871, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 808, 814, 310, 254, 273,
	284, 823, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 804, 832, 306, 420, 421, 280, 857, 843, 419,
	0, 790, 860, 760, 778, 870, 781, 784, 825, 739,
	803, 341, 775, 0, 764, 735, 770, 736, 762, 792,
	244, 759, 845, 807, 859, 297, 241, 741, 765, 355,
	780, 193, 827, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 866, 301, 813,
	0, 404, 326, 0, 0, 0, 794, 849, 801, 839,
	789, 826, 749, 812, 861, 776, 822, 862, 287, 226,
	192, 338, 405, 259, 0, 87, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 772, 819, 856, 773, 821, 239,
	285, 246, 238, 423, 867, 848, 0, 0, 209, 858,
	796, 0, 824, 0, 873, 734, 815, 0, 737, 740,
	869, 852, 768, 249, 0, 0, 0, 0, 0, 0,
	0, 793, 802, 836, 787, 0, 0, 0, 0, 0,
	0, 0, 766, 0, 811, 0, 0, 0, 745, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 791, 0, 0, 0, 748, 0, 767, 837, 0,
	732, 268, 742, 327, 231, 0, 841, 851, 788, 456,
	855, 786, 785, 831, 746, 847, 779, 296, 744, 293,
	188, 205, 0, 777, 337, 378, 384, 846, 763, 771,
	229, 769, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 810, 829, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 1055, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 758, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 842,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 834, 872, 350, 383,
	219, 442, 403, 753, 757, 751, 816, 752, 805, 806,
	754, 863, 864, 865, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 838, 747, 0, 755, 756, 0, 844,
	853, 854, 492, 809, 187, 202, 299, 868, 372, 261,
	470, 450, 446, 733, 750, 236, 761, 0, 0, 774,
	782, 783, 795, 797, 798, 799, 800, 323, 817, 818,
	820, 828, 830, 833, 835, 840, 850, 871, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 808,
	814, 310, 254, 273, 284, 823, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 804, 832, 306, 420, 421,
	280, 857, 843, 419, 0, 790, 860, 760, 778, 870,
	781, 784, 825, 739, 803, 341, 775, 0, 764, 735,
	770, 736, 762, 792, 244, 759, 845, 807, 859, 297,
	241, 741, 765, 355, 780, 193, 827, 395, 228, 307,
	304, 426, 255, 247, 243, 227, 281, 313, 353, 413,
	347, 866, 301, 813, 0, 404, 326, 0, 0, 0,
	794, 849, 801, 839, 789, 826, 749, 812, 861, 776,
	822, 862, 287, 226, 192, 338, 405, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 772, 819,
	856, 773, 821, 239, 285, 246, 238, 423, 867, 848,
	0, 0, 209, 858, 796, 0, 824, 0, 873, 734,
	815, 0, 737, 740, 869, 852, 768, 249, 0, 0,
	0, 0, 0, 0, 0, 793, 802, 836, 787, 0,
	0, 0, 0, 0, 0, 0, 766, 0, 811, 0,
	0, 0, 745, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 791, 0, 0, 0, 748,
	0, 767, 837, 0, 732, 268, 742, 327, 231, 0,
	841, 851, 788, 456, 855, 786, 785, 831, 746, 847,
	779, 296, 744, 293, 188, 205, 0, 777, 337, 378,
	384, 846, 763, 771, 229, 769, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 810, 829, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 1055, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	758, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 842, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	834, 872, 350, 383, 219, 442, 403, 753, 757, 751,
	816, 752, 805, 806, 754, 863, 864, 865, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 838, 747, 0,
	755, 756, 0, 844, 853, 854, 492, 809, 187, 202,
	299, 868, 372, 261, 470, 450, 446, 733, 750, 236,
	761, 0, 0, 774, 782, 783, 795, 797, 798, 799,
	800, 323, 817, 818, 820, 828, 830, 833, 835, 840,
	850, 871, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 808, 814, 310, 254, 273, 284, 823,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 804,
	832, 306, 420, 421, 280, 857, 843, 419, 0, 790,
	860, 760, 778, 870, 781, 784, 825, 739, 803, 341,
	775, 0, 764, 735, 770, 736, 762, 792, 244, 759,
	845, 807, 859, 297, 241, 741, 765, 355, 780, 193,
	827, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 866, 301, 813, 0, 404,
	326, 0, 0, 0, 794, 849, 801, 839, 789, 826,
	749, 812, 861, 776, 822, 862, 287, 226, 192, 338,
	405, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 772, 819, 856, 773, 821, 239, 285, 246,
	238, 423, 867, 848, 0, 0, 874, 858, 796, 0,
	824, 0, 873, 734, 815, 0, 737, 740, 869, 852,
	768, 249, 0, 0, 0, 0, 0, 0, 0, 793,
	802, 836, 787, 0, 0, 0, 0, 0, 0, 0,
	766, 0, 811, 0, 0, 0, 745, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 791,
	0, 0, 0, 748, 0, 767, 837, 0, 732, 268,
	742, 327, 231, 0, 841, 851, 788, 456, 855, 786,
	785, 831, 746, 847, 779, 296, 744, 293, 188, 205,
	0, 777, 337, 378, 384, 846, 763, 771, 229, 769,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	810, 829, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 743, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 758, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 842, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 731,
	725, 724, 294, 303, 834, 872, 350, 383, 219, 442,
	403, 753, 757, 751, 816, 752, 805, 806, 754, 863,
	864, 865, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 838, 747, 0, 755, 756, 0, 844, 853, 854,
	492, 809, 187, 202, 299, 868, 372, 261, 470, 450,
	446, 733, 750, 236, 761, 0, 0, 774, 782, 783,
	795, 797, 798, 799, 800, 323, 817, 818, 820, 828,
	830, 833, 835, 840, 850, 871, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 314, 315, 316, 317, 334, 335, 336, 339,
	342, 343, 346, 348, 349, 352, 359, 360, 361, 362,
	364, 366, 373, 377, 385, 386, 387, 388, 389, 391,
	392, 396, 397, 398, 399, 407, 411, 429, 430, 441,
	454, 459, 270, 437, 460, 0, 308, 808, 814, 310,
	254, 273, 284, 823, 449, 408, 207, 379, 262, 196,
	225, 210, 233, 248, 251, 288, 318, 325, 354, 358,
	267, 245, 223, 376, 220, 394, 414, 415, 416, 418,
	322, 240, 357, 804, 832, 306, 420, 421, 280, 857,
	843, 419, 0, 790, 860, 760, 778, 870, 781, 784,
	825, 739, 803, 341, 775, 0, 764, 735, 770, 736,
	762, 792, 244, 759, 845, 807, 859, 297, 241, 741,
	765, 355, 780, 193, 827, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 866,
	301, 813, 0, 404, 326, 0, 0, 0, 794, 849,
	801, 839, 789, 826, 749, 812, 861, 776, 822, 862,
	287, 226, 192, 338, 405, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 772, 819, 856, 773,
	821, 239, 285, 246, 238, 423, 867, 848, 0, 0,
	874, 858, 796, 0, 824, 0, 873, 734, 815, 0,
	737, 740, 869, 852, 768, 249, 0, 0, 0, 0,
	0, 0, 0, 793, 802, 836, 787, 0, 0, 0,
	0, 0, 0, 0, 766, 0, 811, 0, 0, 0,
	745, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 791, 0, 0, 0, 748, 0, 767,
	837, 0, 732, 268, 742, 327, 231, 0, 841, 851,
	788, 456, 855, 786, 785, 831, 746, 847, 779, 296,
	744, 293, 188, 205, 0, 777, 337, 378, 384, 846,
	763, 771, 229, 769, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 810, 829, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	1234, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 743, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 758, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 842, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 731, 725, 724, 294, 303, 834, 872,
	350, 383, 219, 442, 403, 753, 757, 751, 816, 752,
	805, 806, 754, 863, 864, 865, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 838, 747, 0, 755, 756,
	0, 844, 853, 854, 492, 809, 187, 202, 299, 868,
	372, 261, 470, 450, 446, 733, 750, 236, 761, 0,
	0, 774, 782, 783, 795, 797, 798, 799, 800, 323,
	817, 818, 820, 828, 830, 833, 835, 840, 850, 871,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 808, 814, 310, 254, 273, 284, 823, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 804, 832, 306,
	420, 421, 280, 857, 843, 419, 0, 790, 860, 760,
	778, 870, 781, 784, 825, 739, 803, 341, 775, 0,
	764, 735, 770, 736, 762, 792, 244, 759, 845, 807,
	859, 297, 241, 741, 765, 355, 780, 193, 827, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 866, 301, 813, 0, 404, 326, 0,
	0, 0, 794, 849, 801, 839, 789, 826, 749, 812,
	861, 776, 822, 862, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	772, 819, 856, 773, 821, 239, 285, 246, 238, 423,
	867, 848, 0, 0, 874, 858, 796, 0, 824, 0,
	873, 734, 815, 0, 737, 740, 869, 852, 768, 249,
	0, 0, 0, 0, 0, 0, 0, 793, 802, 836,
	787, 0, 0, 0, 0, 0, 0, 0, 766, 0,
	811, 0, 0, 0, 745, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 791, 0, 0,
	0, 748, 0, 767, 837, 0, 732, 268, 742, 327,
	231, 0, 841, 851, 788, 456, 855, 786, 785, 831,
	746, 847, 779, 296, 744, 293, 188, 205, 0, 777,
	337, 378, 384, 846, 763, 771, 229, 769, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 810, 829,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 722, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	743, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 758, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 842, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 731, 725, 724,
	294, 303, 834, 872, 350, 383, 219, 442, 403, 753,
	757, 751, 816, 752, 805, 806, 754, 863, 864, 865,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 838,
	747, 0, 755, 756, 0, 844, 853, 854, 492, 809,
	187, 202, 299, 868, 372, 261, 470, 450, 446, 733,
	750, 236, 761, 0, 0, 774, 782, 783, 795, 797,
	798, 799, 800, 323, 817, 818, 820, 828, 830, 833,
	835, 840, 850, 871, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 808, 814, 310, 254, 273,
	284, 823, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 804, 832, 306, 420, 421, 280, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 1585, 0, 573, 0, 0, 0, 244, 578,
	0, 0, 0, 297, 241, 0, 1586, 355, 0, 193,
	0, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 585, 301, 0, 0, 404,
	326, 0, 0, 0, 0, 0, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 338,
	405, 259, 0, 87, 0, 0, 184, 185, 186, 617,
	624, 625, 626, 627, 628, 618, 620, 0, 0, 217,
	619, 224, 594, 622, 629, 630, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 556, 570, 0, 584, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 568, 711, 0,
	0, 0, 601, 0, 569, 0, 0, 577, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 600, 0, 0, 456, 0, 0,
	598, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 607, 599, 589, 611, 591, 608, 609, 586, 587,
	590, 610, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 602, 576, 575, 0, 582, 583, 0, 592, 593,
	595, 574, 187, 202, 299, 0, 372, 261, 470, 450,
	446, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 314, 315, 316, 317, 334, 335, 336, 339,
	342, 343, 346, 348, 349, 352, 359, 360, 361, 362,
	364, 366, 373, 377, 385, 386, 387, 388, 389, 391,
	392, 396, 397, 398, 399, 407, 411, 429, 430, 441,
	454, 459, 270, 437, 460, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 449, 408, 207, 379, 262, 196,
	225, 210, 233, 248, 251, 288, 318, 325, 354, 358,
	267, 245, 223, 376, 220, 394, 414, 415, 416, 418,
	322, 240, 357, 419, 0, 306, 420, 421, 280, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	573, 0, 0, 0, 244, 578, 0, 0, 0, 297,
	241, 0, 0, 355, 0, 193, 0, 395, 228, 307,
	304, 426, 255, 247, 243, 227, 281, 313, 353, 413,
	347, 585, 301, 0, 0, 404, 326, 0, 0, 0,
	0, 0, 580, 581, 0, 0, 0, 0, 0, 0,
	1665, 0, 287, 226, 192, 338, 405, 259, 0, 87,
	0, 0, 184, 185, 186, 617, 624, 625, 626, 627,
	628, 618, 620, 0, 0, 217, 619, 224, 594, 622,
	629, 630, 1666, 239, 285, 246, 238, 423, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	556, 570, 0, 584, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 567, 568, 0, 0, 0, 0, 601, 0,
	569, 0, 0, 577, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 327, 231, 0,
	600, 0, 0, 456, 0, 0, 598, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 337, 378,
	384, 0, 0, 0, 229, 0, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 0, 0, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 0, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 0, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	0, 0, 350, 383, 219, 442, 403, 607, 599, 589,
	611, 591, 608, 609, 586, 587, 590, 610, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 602, 576, 575,
	0, 582, 583, 0, 592, 593, 595, 574, 187, 202,
	299, 0, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 78,
	419, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 573, 0, 0,
	0, 244, 578, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 585, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 580,
	581, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 87, 0, 0, 184,
	185, 186, 617, 624, 625, 626, 627, 628, 618, 620,
	0, 0, 217, 619, 224, 594, 622, 629, 630, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 556, 570, 0,
	584, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	568, 0, 0, 0, 0, 601, 0, 569, 0, 0,
	577, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 600, 0, 0,
	456, 0, 0, 598, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 607, 599, 589, 611, 591, 608,
	609, 586, 587, 590, 610, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 602, 576, 575, 0, 582, 583,
	0, 592, 593, 595, 574, 187, 202, 299, 86, 372,
	261, 470, 450, 446, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 419, 0, 306, 420,
	421, 280, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 573, 0, 0, 0, 244, 578, 0,
	0, 0, 297, 241, 0, 0, 355, 0, 193, 0,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 585, 301, 0, 0, 404, 326,
	0, 0, 0, 0, 0, 580, 581, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 338, 405,
	259, 0, 87, 0, 0, 184, 185, 186, 617, 624,
	625, 626, 627, 628, 618, 620, 0, 0, 217, 619,
	224, 594, 622, 629, 630, 0, 239, 285, 246, 238,
	423, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 556, 570, 0, 584, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 568, 0, 0, 0,
	0, 601, 0, 569, 0, 0, 577, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	327, 231, 0, 600, 0, 0, 456, 0, 0, 598,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 337, 378, 384, 0, 0, 0, 229, 0, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 2542,
	0, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 0, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 0, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 0, 0, 350, 383, 219, 442, 403,
	607, 599, 589, 611, 591, 608, 609, 586, 587, 590,
	610, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	602, 576, 575, 0, 582, 583, 0, 592, 593, 595,
	574, 187, 202, 299, 0, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 573,
	0, 0, 0, 244, 578, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	585, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 580, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 87, 0,
	1202, 184, 185, 186, 617, 624, 625, 626, 627, 628,
	618, 620, 0, 0, 217, 619, 224, 594, 622, 629,
	630, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 556,
	570, 0, 584, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 568, 0, 0, 0, 0, 601, 0, 569,
	0, 0, 577, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 600,
	0, 0, 456, 0, 0, 598, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 607, 599, 589, 611,
	591, 608, 609, 586, 587, 590, 610, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 602, 576, 575, 0,
	582, 583, 0, 592, 593, 595, 574, 187, 202, 299,
	0, 372, 261, 470, 450, 446, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 419, 0,
	306, 420, 421, 280, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 573, 0, 0, 0, 244,
	578, 0, 0, 0, 297, 241, 0, 0, 355, 0,
	193, 0, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 585, 301, 0, 0,
	404, 326, 0, 0, 0, 0, 0, 580, 581, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	338, 405, 259, 0, 87, 0, 0, 184, 185, 186,
	617, 624, 625, 626, 627, 628, 618, 620, 0, 0,
	217, 619, 224, 594, 622, 629, 630, 0, 239, 285,
	246, 238, 423, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 556, 570, 0, 584, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 568, 711,
	0, 0, 0, 601, 0, 569, 0, 0, 577, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 327, 231, 0, 600, 0, 0, 456, 0,
	0, 598, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 337, 378, 384, 0, 0, 0, 229,
	0, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 0, 0, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 0, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 0, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 0, 0, 350, 383, 219,
	442, 403, 607, 599, 589, 611, 591, 608, 609, 586,
	587, 590, 610, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 602, 576, 575, 0, 582, 583, 0, 592,
	593, 595, 574, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 419, 0, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 573, 0, 0, 0, 244, 578, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 585, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 580, 581, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	87, 0, 0, 184, 185, 186, 617, 624, 625, 626,
	627, 628, 618, 620, 0, 0, 217, 619, 224, 594,
	622, 629, 630, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 556, 570, 0, 584, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 568, 0, 0, 0, 0, 601,
	0, 569, 0, 0, 577, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 600, 0, 0, 456, 0, 0, 598, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 607, 599,
	589, 611, 591, 608, 609, 586, 587, 590, 610, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 602, 576,
	575, 0, 582, 583, 0, 592, 593, 595, 574, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 573, 0, 0,
	0, 244, 578, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 585, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 580,
	581, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 87, 0, 0, 184,
	185, 186, 617, 624, 625, 626, 627, 628, 618, 620,
	0, 0, 217, 619, 224, 594, 622, 629, 630, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 570, 0,
	584, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	568, 0, 0, 0, 0, 601, 0, 569, 0, 0,
	577, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 600, 0, 0,
	456, 0, 0, 598, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 607, 599, 589, 611, 591, 608,
	609, 586, 587, 590, 610, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 602, 576, 575, 0, 582, 583,
	0, 592, 593, 595, 574, 187, 202, 299, 0, 372,
	261, 470, 450, 446, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 419, 0, 306, 420,
	421, 280, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 355, 0, 193, 0,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 0, 301, 0, 0, 404, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 338, 405,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	423, 0, 0, 0, 0, 209, 0, 923, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	327, 231, 0, 0, 0, 922, 456, 0, 0, 0,
	0, 0, 919, 920, 296, 882, 293, 188, 205, 913,
	917, 337, 378, 384, 0, 0, 0, 229, 0, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 0,
	0, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 0, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 0, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 0, 0, 350, 383, 219, 442, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 187, 202, 299, 0, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 1222, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	0, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1224, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 0, 0, 1087, 0, 1088, 1089, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 0,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 187, 202, 299,
	0, 372, 261, 470, 450, 446, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 419, 0,
	306, 420, 421, 280, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 355, 0,
	193, 0, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 0, 301, 0, 0,
	404, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	338, 405, 259, 0, 0, 0, 0, 184, 185, 186,
	1164, 1167, 0, 0, 0, 0, 1163, 1166, 0, 0,
	217, 1162, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 423, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 327, 231, 0, 0, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 337, 378, 384, 0, 0, 0, 229,
	0, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 0, 0, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 0, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 0, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 0, 0, 350, 383, 219,
	442, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 78, 419, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 87, 0, 1202, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	187, 202, 299, 86, 372, 261, 470, 450, 446, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 78, 419, 306, 420, 421, 280, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	0, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 87, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 0,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 187, 202, 299,
	86, 372, 261, 470, 450, 446, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 419, 0,
	306, 420, 421, 280, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 1607, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 355, 0,
	193, 0, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 0, 301, 0, 0,
	404, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	338, 405, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1395, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 423, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 327, 231, 0, 0, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 337, 378, 384, 0, 0, 0, 229,
	0, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 0, 1605, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 0, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 0, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 0, 0, 350, 383, 219,
	442, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 419, 0, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 0, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 296, 882, 293, 188, 205, 880, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 1202, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 2481, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 187, 202, 299, 0, 372,
	261, 470, 450, 446, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 419, 0, 306, 420,
	421, 280, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 1607, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 355, 0, 193, 0,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 0, 301, 0, 0, 404, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 338, 405,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 1395,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	423, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	327, 231, 0, 0, 0, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 337, 378, 384, 0, 0, 0, 229, 0, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 0,
	0, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 0, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 0, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 0, 0, 350, 383, 219, 442, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 187, 202, 299, 0, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	0, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1893, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1894, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 0,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 187, 202, 299,
	0, 372, 261, 470, 450, 446, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 419, 0,
	306, 420, 421, 280, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 355, 0,
	193, 0, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 0, 301, 0, 0,
	404, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	338, 405, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 1878, 0, 0, 0, 1879, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 423, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 327, 231, 0, 0, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 337, 378, 384, 0, 0, 0, 229,
	0, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 0, 0, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 0, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 0, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 0, 0, 350, 383, 219,
	442, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 419, 0, 306, 420, 421, 280,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 1245, 0, 0, 0,
	297, 241, 0, 0, 355, 0, 193, 0, 395, 228,
	307, 304, 426, 255, 247, 243, 227, 281, 313, 353,
	413, 347, 0, 301, 0, 0, 404, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 338, 405, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 1244, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 423, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 327, 231,
	0, 0, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 337,
	378, 384, 0, 0, 0, 229, 0, 382, 351, 440,
	213, 257, 375, 356, 380, 363, 260, 0, 0, 381,
	302, 428, 370, 438, 457, 458, 237, 331, 447, 417,
	453, 469, 206, 234, 345, 410, 443, 401, 324, 424,
	425, 292, 400, 266, 191, 300, 463, 204, 390, 221,
	211, 197, 412, 436, 218, 393, 0, 0, 471, 199,
	434, 409, 320, 289, 290, 198, 0, 374, 242, 264,
	232, 340, 431, 432, 230, 472, 208, 452, 201, 0,
	451, 333, 427, 435, 321, 312, 200, 433, 319, 311,
	295, 253, 275, 368, 305, 369, 276, 329, 328, 330,
	194, 444, 0, 195, 0, 406, 445, 473, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	344, 367, 365, 371, 0, 422, 439, 448, 455, 461,
	462, 464, 465, 466, 467, 468, 332, 278, 402, 294,
	303, 0, 0, 350, 383, 219, 442, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 187,
	202, 299, 0, 372, 261, 470, 450, 446, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 314,
	315, 316, 317, 334, 335, 336, 339, 342, 343, 346,
	348, 349, 352, 359, 360, 361, 362, 364, 366, 373,
	377, 385, 386, 387, 388, 389, 391, 392, 396, 397,
	398, 399, 407, 411, 429, 430, 441, 454, 459, 270,
	437, 460, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 449, 408, 207, 379, 262, 196, 225, 210, 233,
	248, 251, 288, 318, 325, 354, 358, 267, 245, 223,
	376, 220, 394, 414, 415, 416, 418, 322, 240, 357,
	419, 0, 306, 420, 421, 280, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	355, 0, 193, 0, 395, 228, 307, 304, 426, 255,
	247, 243, 227, 281, 313, 353, 413, 347, 0, 301,
	0, 0, 404, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 338, 405, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 423, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 327, 231, 0, 0, 0, 0,
	456, 0, 0, 0, 2555, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 337, 378, 384, 0, 0,
	0, 229, 0, 382, 351, 440, 213, 257, 375, 356,
	380, 363, 260, 0, 0, 381, 302, 428, 370, 438,
	457, 458, 237, 331, 447, 417, 453, 469, 206, 234,
	345, 410, 443, 401, 324, 424, 425, 292, 400, 266,
	191, 300, 463, 204, 390, 221, 211, 197, 412, 436,
	218, 393, 0, 0, 471, 199, 434, 409, 320, 289,
	290, 198, 0, 374, 242, 264, 232, 340, 431, 432,
	230, 472, 208, 452, 201, 0, 451, 333, 427, 435,
	321, 312, 200, 433, 319, 311, 295, 253, 275, 368,
	305, 369, 276, 329, 328, 330, 194, 444, 0, 195,
	0, 406, 445, 473, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 344, 367, 365, 371,
	0, 422, 439, 448, 455, 461, 462, 464, 465, 466,
	467, 468, 332, 278, 402, 294, 303, 0, 0, 350,
	383, 219, 442, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 187, 202, 299, 0, 372,
	261, 470, 450, 446, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 314, 315, 316, 317, 334,
	335, 336, 339, 342, 343, 346, 348, 349, 352, 359,
	360, 361, 362, 364, 366, 373, 377, 385, 386, 387,
	388, 389, 391, 392, 396, 397, 398, 399, 407, 411,
	429, 430, 441, 454, 459, 270, 437, 460, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 449, 408, 207,
	379, 262, 196, 225, 210, 233, 248, 251, 288, 318,
	325, 354, 358, 267, 245, 223, 376, 220, 394, 414,
	415, 416, 418, 322, 240, 357, 419, 0, 306, 420,
	421, 280, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 355, 0, 193, 0,
	395, 228, 307, 304, 426, 255, 247, 243, 227, 281,
	313, 353, 413, 347, 0, 301, 0, 0, 404, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 338, 405,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 1395,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	423, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	327, 231, 0, 0, 0, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 337, 378, 384, 0, 0, 0, 229, 0, 382,
	351, 440, 213, 257, 375, 356, 380, 363, 260, 0,
	0, 381, 302, 428, 370, 438, 457, 458, 237, 331,
	447, 417, 453, 469, 206, 234, 345, 410, 443, 401,
	324, 424, 425, 292, 400, 266, 191, 300, 463, 204,
	390, 221, 211, 197, 412, 436, 218, 393, 0, 0,
	471, 199, 434, 409, 320, 289, 290, 198, 0, 374,
	242, 264, 232, 340, 431, 432, 230, 472, 208, 452,
	201, 0, 451, 333, 427, 435, 321, 312, 200, 433,
	319, 311, 295, 253, 275, 368, 305, 369, 276, 329,
	328, 330, 194, 444, 0, 195, 0, 406, 445, 473,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 344, 367, 365, 371, 0, 422, 439, 448,
	455, 461, 462, 464, 465, 466, 467, 468, 332, 278,
	402, 294, 303, 0, 0, 350, 383, 219, 442, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 187, 202, 299, 0, 372, 261, 470, 450, 446,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 314, 315, 316, 317, 334, 335, 336, 339, 342,
	343, 346, 348, 349, 352, 359, 360, 361, 362, 364,
	366, 373, 377, 385, 386, 387, 388, 389, 391, 392,
	396, 397, 398, 399, 407, 411, 429, 430, 441, 454,
	459, 270, 437, 460, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 449, 408, 207, 379, 262, 196, 225,
	210, 233, 248, 251, 288, 318, 325, 354, 358, 267,
	245, 223, 376, 220, 394, 414, 415, 416, 418, 322,
	240, 357, 419, 0, 306, 420, 421, 280, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 355, 0, 193, 0, 395, 228, 307, 304,
	426, 255, 247, 243, 227, 281, 313, 353, 413, 347,
	0, 301, 0, 0, 404, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 338, 405, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 423, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 327, 231, 0, 0,
	0, 0, 456, 0, 0, 0, 2481, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 337, 378, 384,
	0, 0, 0, 229, 0, 382, 351, 440, 213, 257,
	375, 356, 380, 363, 260, 0, 0, 381, 302, 428,
	370, 438, 457, 458, 237, 331, 447, 417, 453, 469,
	206, 234, 345, 410, 443, 401, 324, 424, 425, 292,
	400, 266, 191, 300, 463, 204, 390, 221, 211, 197,
	412, 436, 218, 393, 0, 0, 471, 199, 434, 409,
	320, 289, 290, 198, 0, 374, 242, 264, 232, 340,
	431, 432, 230, 472, 208, 452, 201, 0, 451, 333,
	427, 435, 321, 312, 200, 433, 319, 311, 295, 253,
	275, 368, 305, 369, 276, 329, 328, 330, 194, 444,
	0, 195, 0, 406, 445, 473, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 344, 367,
	365, 371, 0, 422, 439, 448, 455, 461, 462, 464,
	465, 466, 467, 468, 332, 278, 402, 294, 303, 0,
	0, 350, 383, 219, 442, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 187, 202, 299,
	0, 372, 261, 470, 450, 446, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 314, 315, 316,
	317, 334, 335, 336, 339, 342, 343, 346, 348, 349,
	352, 359, 360, 361, 362, 364, 366, 373, 377, 385,
	386, 387, 388, 389, 391, 392, 396, 397, 398, 399,
	407, 411, 429, 430, 441, 454, 459, 270, 437, 460,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 449,
	408, 207, 379, 262, 196, 225, 210, 233, 248, 251,
	288, 318, 325, 354, 358, 267, 245, 223, 376, 220,
	394, 414, 415, 416, 418, 322, 240, 357, 419, 0,
	306, 420, 421, 280, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 355, 0,
	193, 0, 395, 228, 307, 304, 426, 255, 247, 243,
	227, 281, 313, 353, 413, 347, 0, 301, 0, 0,
	404, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	338, 405, 259, 0, 87, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 423, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 327, 231, 0, 0, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 337, 378, 384, 0, 0, 0, 229,
	0, 382, 351, 440, 213, 257, 375, 356, 380, 363,
	260, 0, 0, 381, 302, 428, 370, 438, 457, 458,
	237, 331, 447, 417, 453, 469, 206, 234, 345, 410,
	443, 401, 324, 424, 425, 292, 400, 266, 191, 300,
	463, 204, 390, 221, 211, 197, 412, 436, 218, 393,
	0, 0, 471, 199, 434, 409, 320, 289, 290, 198,
	0, 374, 242, 264, 232, 340, 431, 432, 230, 472,
	208, 452, 201, 0, 451, 333, 427, 435, 321, 312,
	200, 433, 319, 311, 295, 253, 275, 368, 305, 369,
	276, 329, 328, 330, 194, 444, 0, 195, 0, 406,
	445, 473, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 344, 367, 365, 371, 0, 422,
	439, 448, 455, 461, 462, 464, 465, 466, 467, 468,
	332, 278, 402, 294, 303, 0, 0, 350, 383, 219,
	442, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 187, 202, 299, 0, 372, 261, 470,
	450, 446, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 314, 315, 316, 317, 334, 335, 336,
	339, 342, 343, 346, 348, 349, 352, 359, 360, 361,
	362, 364, 366, 373, 377, 385, 386, 387, 388, 389,
	391, 392, 396, 397, 398, 399, 407, 411, 429, 430,
	441, 454, 459, 270, 437, 460, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 449, 408, 207, 379, 262,
	196, 225, 210, 233, 248, 251, 288, 318, 325, 354,
	358, 267, 245, 223, 376, 220, 394, 414, 415, 416,
	418, 322, 240, 357, 0, 419, 306, 420, 421, 280,
	1654, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	187, 202, 299, 0, 372, 261, 470, 450, 446, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 419, 0, 306, 420, 421, 280, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 355, 0, 193, 0, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 0,
	301, 0, 0, 404, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 338, 405, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 1224, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 423, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 327, 231, 0, 0, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 337, 378, 384, 0,
	0, 0, 229, 0, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 0, 0, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 0, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 0, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 0, 0,
	350, 383, 219, 442, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 419, 0, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 297, 241, 0, 0, 355, 0, 193,
	0, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 0, 301, 0, 0, 404,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 338,
	405, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 0, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 187, 202, 299, 0, 372, 261, 470, 450,
	446, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 314, 315, 316, 317, 334, 335, 336, 339,
	342, 343, 346, 348, 349, 352, 359, 360, 361, 362,
	364, 366, 373, 377, 385, 386, 387, 388, 389, 391,
	392, 396, 397, 398, 399, 407, 411, 429, 430, 441,
	454, 459, 270, 437, 460, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 449, 408, 207, 379, 262, 196,
	225, 210, 233, 248, 251, 288, 318, 325, 354, 358,
	267, 245, 223, 376, 220, 394, 414, 415, 416, 418,
	322, 240, 357, 419, 0, 306, 420, 421, 280, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 355, 0, 193, 0, 395, 228, 307,
	304, 426, 255, 247, 243, 227, 281, 313, 353, 413,
	347, 0, 301, 0, 0, 404, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 338, 405, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 423, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 327, 231, 0,
	0, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 337, 378,
	384, 0, 0, 0, 229, 0, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 0, 0, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 0, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 0, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	0, 0, 350, 383, 219, 442, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 187, 202,
	299, 1487, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 1367, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 0, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 1365,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	187, 202, 299, 0, 372, 261, 470, 450, 446, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 419, 0, 306, 420, 421, 280, 0, 0, 0,
	0, 0, 0, 341, 0, 1363, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 355, 0, 193, 0, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 0,
	301, 0, 0, 404, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 338, 405, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 423, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 327, 231, 0, 0, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 337, 378, 384, 0,
	0, 0, 229, 0, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 0, 0, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 0, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 0, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 0, 0,
	350, 383, 219, 442, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 419, 0, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 341,
	0, 1361, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 297, 241, 0, 0, 355, 0, 193,
	0, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 0, 301, 0, 0, 404,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 338,
	405, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 0, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 187, 202, 299, 0, 372, 261, 470, 450,
	446, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 314, 315, 316, 317, 334, 335, 336, 339,
	342, 343, 346, 348, 349, 352, 359, 360, 361, 362,
	364, 366, 373, 377, 385, 386, 387, 388, 389, 391,
	392, 396, 397, 398, 399, 407, 411, 429, 430, 441,
	454, 459, 270, 437, 460, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 449, 408, 207, 379, 262, 196,
	225, 210, 233, 248, 251, 288, 318, 325, 354, 358,
	267, 245, 223, 376, 220, 394, 414, 415, 416, 418,
	322, 240, 357, 419, 0, 306, 420, 421, 280, 0,
	0, 0, 0, 0, 0, 341, 0, 1359, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 355, 0, 193, 0, 395, 228, 307,
	304, 426, 255, 247, 243, 227, 281, 313, 353, 413,
	347, 0, 301, 0, 0, 404, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 338, 405, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 423, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 327, 231, 0,
	0, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 337, 378,
	384, 0, 0, 0, 229, 0, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 0, 0, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 0, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 0, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	0, 0, 350, 383, 219, 442, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 187, 202,
	299, 0, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 1355, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 0, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 1353,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	187, 202, 299, 0, 372, 261, 470, 450, 446, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 419, 0, 306, 420, 421, 280, 0, 0, 0,
	0, 0, 0, 341, 0, 1351, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 355, 0, 193, 0, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 0,
	301, 0, 0, 404, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 338, 405, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 423, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 327, 231, 0, 0, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 337, 378, 384, 0,
	0, 0, 229, 0, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 0, 0, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 0, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 0, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 0, 0,
	350, 383, 219, 442, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 270, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 419, 0, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 297, 241, 0, 0, 355, 0, 193,
	0, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 0, 301, 0, 0, 404,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 338,
	405, 259, 0, 1328, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 0, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 187, 202, 299, 0, 372, 261, 470, 450,
	446, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 314, 315, 316, 317, 334, 335, 336, 339,
	342, 343, 346, 348, 349, 352, 359, 360, 361, 362,
	364, 366, 373, 377, 385, 386, 387, 388, 389, 391,
	392, 396, 397, 398, 399, 407, 411, 429, 430, 441,
	454, 459, 270, 437, 460, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 449, 408, 207, 379, 262, 196,
	225, 210, 233, 248, 251, 288, 318, 325, 354, 358,
	267, 245, 223, 376, 220, 394, 414, 415, 416, 418,
	322, 240, 357, 419, 0, 306, 420, 421, 280, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 1229, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 355, 0, 193, 0, 395, 228, 307,
	304, 426, 255, 247, 243, 227, 281, 313, 353, 413,
	347, 0, 301, 0, 0, 404, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 338, 405, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 423, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 327, 231, 0,
	0, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 337, 378,
	384, 0, 0, 0, 229, 0, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 0, 0, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 0, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 0, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	0, 0, 350, 383, 219, 442, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 187, 202,
	299, 0, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 0, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1064, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	187, 202, 299, 0, 372, 261, 470, 450, 446, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	693, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 419, 0, 306, 420, 421, 280, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 355, 0, 193, 0, 395, 228, 307, 304, 426,
	255, 247, 243, 227, 281, 313, 353, 413, 347, 0,
	301, 0, 0, 404, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 338, 405, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 423, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 548, 0, 268, 0, 327, 231, 0, 0, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 337, 378, 384, 0,
	0, 0, 229, 0, 382, 351, 440, 213, 257, 375,
	356, 380, 363, 260, 0, 0, 381, 302, 428, 370,
	438, 457, 458, 237, 331, 447, 417, 453, 469, 206,
	234, 345, 410, 443, 401, 324, 424, 425, 292, 400,
	266, 191, 300, 463, 204, 390, 221, 211, 197, 412,
	436, 218, 393, 0, 0, 471, 199, 434, 409, 320,
	289, 290, 198, 0, 374, 242, 264, 232, 340, 431,
	432, 230, 472, 208, 452, 201, 0, 451, 333, 427,
	435, 321, 312, 200, 433, 319, 311, 295, 253, 275,
	368, 305, 369, 276, 329, 328, 330, 194, 444, 0,
	195, 0, 406, 445, 473, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 344, 367, 365,
	371, 0, 422, 439, 448, 455, 461, 462, 464, 465,
	466, 467, 468, 332, 278, 402, 294, 303, 0, 0,
	350, 383, 219, 442, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 187, 202, 299, 0,
	372, 261, 470, 450, 446, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 314, 315, 316, 317,
	334, 335, 336, 339, 342, 343, 346, 348, 349, 352,
	359, 360, 361, 362, 364, 366, 373, 377, 385, 386,
	387, 388, 389, 391, 392, 396, 397, 398, 399, 407,
	411, 429, 430, 441, 454, 459, 547, 437, 460, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 449, 408,
	207, 379, 262, 196, 225, 210, 233, 248, 251, 288,
	318, 325, 354, 358, 267, 245, 223, 376, 220, 394,
	414, 415, 416, 418, 322, 240, 357, 419, 0, 306,
	420, 421, 280, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 297, 241, 0, 0, 355, 0, 193,
	0, 395, 228, 307, 304, 426, 255, 247, 243, 227,
	281, 313, 353, 413, 347, 0, 301, 0, 0, 404,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 338,
	405, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 423, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 327, 231, 0, 0, 495, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 337, 378, 384, 0, 0, 0, 229, 0,
	382, 351, 440, 213, 257, 375, 356, 380, 363, 260,
	0, 0, 381, 302, 428, 370, 438, 457, 458, 237,
	331, 447, 417, 453, 469, 206, 234, 345, 410, 443,
	401, 324, 424, 425, 292, 400, 266, 191, 300, 463,
	204, 390, 221, 211, 197, 412, 436, 218, 393, 0,
	0, 471, 199, 434, 409, 320, 289, 290, 198, 0,
	374, 242, 264, 232, 340, 431, 432, 230, 472, 208,
	452, 201, 0, 451, 333, 427, 435, 321, 312, 200,
	433, 319, 311, 295, 253, 275, 368, 305, 369, 276,
	329, 328, 330, 194, 444, 0, 195, 0, 406, 445,
	473, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 344, 367, 365, 371, 0, 422, 439,
	448, 455, 461, 462, 464, 465, 466, 467, 468, 332,
	278, 402, 294, 303, 0, 0, 350, 383, 219, 442,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 187, 202, 299, 0, 372, 261, 470, 450,
	446, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 314, 315, 316, 317, 334, 335, 336, 339,
	342, 343, 346, 348, 349, 352, 359, 360, 361, 362,
	364, 366, 373, 377, 385, 386, 387, 388, 389, 391,
	392, 396, 397, 398, 399, 407, 411, 429, 430, 441,
	454, 459, 270, 437, 460, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 449, 408, 207, 379, 262, 196,
	225, 210, 233, 248, 251, 288, 318, 325, 354, 358,
	267, 245, 223, 376, 220, 394, 414, 415, 416, 418,
	322, 240, 357, 419, 0, 306, 420, 421, 280, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 355, 0, 193, 0, 395, 228, 307,
	304, 426, 255, 247, 243, 227, 281, 313, 353, 413,
	347, 0, 301, 0, 0, 404, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 338, 405, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 423, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 327, 231, 0,
	0, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 337, 378,
	384, 0, 0, 0, 229, 0, 382, 351, 440, 213,
	257, 375, 356, 380, 363, 260, 0, 0, 381, 302,
	428, 370, 438, 457, 458, 237, 331, 447, 417, 453,
	469, 206, 234, 345, 410, 443, 401, 324, 424, 425,
	292, 400, 266, 191, 300, 463, 204, 390, 221, 211,
	197, 412, 436, 218, 393, 0, 0, 471, 199, 434,
	409, 320, 289, 290, 198, 0, 374, 242, 264, 232,
	340, 431, 432, 230, 472, 208, 452, 201, 0, 451,
	333, 427, 435, 321, 312, 200, 433, 319, 311, 295,
	253, 275, 368, 305, 369, 276, 329, 328, 330, 194,
	444, 0, 195, 0, 406, 445, 473, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 344,
	367, 365, 371, 0, 422, 439, 448, 455, 461, 462,
	464, 465, 466, 467, 468, 332, 278, 402, 294, 303,
	0, 0, 350, 383, 219, 442, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 187, 202,
	299, 0, 372, 261, 470, 450, 446, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 314, 315,
	316, 317, 334, 335, 336, 339, 342, 343, 346, 348,
	349, 352, 359, 360, 361, 362, 364, 366, 373, 377,
	385, 386, 387, 388, 389, 391, 392, 396, 397, 398,
	399, 407, 411, 429, 430, 441, 454, 459, 270, 437,
	460, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	449, 408, 207, 379, 262, 196, 225, 210, 233, 248,
	251, 288, 318, 325, 354, 358, 267, 245, 223, 376,
	220, 394, 414, 415, 416, 418, 322, 240, 357, 419,
	0, 306, 420, 421, 280, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 355,
	0, 193, 0, 395, 228, 307, 304, 426, 255, 247,
	243, 227, 281, 313, 353, 413, 347, 0, 301, 0,
	0, 404, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 338, 405, 259, 0, 0, 0, 0, 184, 2276,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 423, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 327, 231, 0, 0, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 337, 378, 384, 0, 0, 0,
	229, 0, 382, 351, 440, 213, 257, 375, 356, 380,
	363, 260, 0, 0, 381, 302, 428, 370, 438, 457,
	458, 237, 331, 447, 417, 453, 469, 206, 234, 345,
	410, 443, 401, 324, 424, 425, 292, 400, 266, 191,
	300, 463, 204, 390, 221, 211, 197, 412, 436, 218,
	393, 0, 0, 471, 199, 434, 409, 320, 289, 290,
	198, 0, 374, 242, 264, 232, 340, 431, 432, 230,
	472, 208, 452, 201, 0, 451, 333, 427, 435, 321,
	312, 200, 433, 319, 311, 295, 253, 275, 368, 305,
	369, 276, 329, 328, 330, 194, 444, 0, 195, 0,
	406, 445, 473, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 344, 367, 365, 371, 0,
	422, 439, 448, 455, 461, 462, 464, 465, 466, 467,
	468, 332, 278, 402, 294, 303, 0, 0, 350, 383,
	219, 442, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 187, 202, 299, 0, 372, 261,
	470, 450, 446, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 314, 315, 316, 317, 334, 335,
	336, 339, 342, 343, 346, 348, 349, 352, 359, 360,
	361, 362, 364, 366, 373, 377, 385, 386, 387, 388,
	389, 391, 392, 396, 397, 398, 399, 407, 411, 429,
	430, 441, 454, 459, 270, 437, 460, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 449, 408, 207, 379,
	262, 196, 225, 210, 233, 248, 251, 288, 318, 325,
	354, 358, 267, 245, 223, 376, 220, 394, 414, 415,
	416, 418, 322, 240, 357, 419, 0, 306, 420, 421,
	280, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 355, 0, 193, 0, 395,
	228, 307, 304, 426, 255, 247, 243, 227, 281, 313,
	353, 413, 347, 0, 301, 0, 0, 404, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 338, 405, 259,
	0, 0, 0, 0, 184, 1874, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 423,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 327,
	231, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	337, 378, 384, 0, 0, 0, 229, 0, 382, 351,
	440, 213, 257, 375, 356, 380, 363, 260, 0, 0,
	381, 302, 428, 370, 438, 457, 458, 237, 331, 447,
	417, 453, 469, 206, 234, 345, 410, 443, 401, 324,
	424, 425, 292, 400, 266, 191, 300, 463, 204, 390,
	221, 211, 197, 412, 436, 218, 393, 0, 0, 471,
	199, 434, 409, 320, 289, 290, 198, 0, 374, 242,
	264, 232, 340, 431, 432, 230, 472, 208, 452, 201,
	0, 451, 333, 427, 435, 321, 312, 200, 433, 319,
	311, 295, 253, 275, 368, 305, 369, 276, 329, 328,
	330, 194, 444, 0, 195, 0, 406, 445, 473, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 344, 367, 365, 371, 0, 422, 439, 448, 455,
	461, 462, 464, 465, 466, 467, 468, 332, 278, 402,
	294, 303, 0, 0, 350, 383, 219, 442, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	187, 202, 299, 0, 372, 261, 470, 450, 446, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	314, 315, 316, 317, 334, 335, 336, 339, 342, 343,
	346, 348, 349, 352, 359, 360, 361, 362, 364, 366,
	373, 377, 385, 386, 387, 388, 389, 391, 392, 396,
	397, 398, 399, 407, 411, 429, 430, 441, 454, 459,
	270, 437, 460, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 449, 408, 207, 379, 262, 196, 225, 210,
	233, 248, 251, 288, 318, 325, 354, 358, 267, 245,
	223, 376, 220, 394, 414, 415, 416, 418, 322, 240,
	357, 0, 0, 306, 420, 421, 280,
}

var yyPact = [...]int{
	4769, -1000, -386, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1717, 1801, -1000, -1000,
	-1000, -1000, 1866, -1000, 663, 1512, -1000, 1725, 4710, -1000,
	34436, 447, -1000, 33890, 423, 3626, 34436, -1000, 122, -1000,
	114, 34436, 118, 33344, -1000, -1000, -266, 14777, 1668, 6,
	1, 34436, -1000, -1000, -1000, -1000, 1847, 1500, -1000, 273,
	-1000, -1000, -1000, -1000, -1000, -1000, 32798, -1000, -1000, -1000,
	1730, 1721, 1872, 588, 1669, -1000, 1752, 1500, -1000, 14777,
	1837, 1763, 14231, -1000, 14231, 325, -1000, -1000, 10948, -1000,
	-1000, 19147, 34436, 24061, 197, -1000, 1725, -1000, -1000, 283,
	-1000, 238, 1469, -1000, 1468, -1000, 609, 400, 269, 396,
	391, 268, 265, 264, 262, 261, 257, 252, 249, 276,
	-1000, 624, 624, -154, -160, 2106, 312, 312, 312, 348,
	1685, 1683, -1000, 627, -1000, 624, 624, 279, 624, 624,
	624, 624, 206, 204, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 344,
	1725, 182, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 34436, 156, 34436, -1000, 519, 34436, 734,
	734, 33, 734, 734, 734, 734, 123, 493, -3, -1000,
	113, 194, 116, 174, 723, 128, 161, -1000, -1000, 169,
	723, 1165, 610, 94, -1000, 734, 8732, 8732, 8732, -1000,
	1701, -1000, -1000, -1000, -1000, -1000, -1000, 1173, -1000, 347,
	-1000, -1000, -1000, -1000, 34436, 32252, 286, 654, -1000, -1000,
	-1000, 79, -1000, -1000, 1379, 880, 14777, 826, -1000, 1392,
	546, -1000, -1000, -1000, -1000, -1000, 471, 15323, 15323, 15323,
	15323, -1000, -1000, 1471, 1471, 1471, 1471, 15323, 1471, 15323,
	1471, 1471, 1471, 1471, 14777, 1471, 1471, 1471, -1000, 1471,
	1471, 1471, 1471, 1471, 1471, 1471, 1471, 518, 1471, 1471,
	1471, 1471, 1471, -1000, -1000, -1000, -1000, 1471, 1471, 1471,
	1471, 1471, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 16961, -1000, 12593, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 34436, -1000, 1471, 131, 34436, 34436, 266,
	1752, 1500, -1000, 1847, 1789, 273, -1000, 1747, 1260, 1266,
	1099, 1500, 1462, 34436, -1000, 1474, -1000, -1000, -1000, 1616,
	1086, 1163, -1000, -1000, -1000, -1000, 1052, 14777, -1000, -1000,
	1863, -1000, 16415, 515, 827, 1860, 31706, -1000, 325, 325,
	1467, 10394, -63, -1000, -1000, -1000, 653, 21877, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1701, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1391, 34436, -1000, -1000, 2756,
	1156, -1000, 1511, -1000, 1373, -1000, 1497, 14777, 1519, 395,
	1156, 365, 359, 358, -1000, -103, -1000, -1000, -1000, -1000,
	-1000, 624, 624, -1000, 275, 1834, 4710, 4154, -1000, -1000,
	-1000, 31160, 1510, 1156, -1000, 1509, -1000, 741, 416, 444,
	444, 1156, -1000, -1000, 34436, 1156, 737, 728, 34436, 34436,
	-1000, 30614, -1000, 30068, 29522, 1023, 34436, 28976, 28430, 27884,
	27338, 26792, -1000, 1588, -1000, 1526, -1000, -1000, -1000, 34436,
	34436, 34436, 284, -1000, -1000, 34436, 1156, -1000, -1000, 1018,
	1014, 624, 624, 1009, 1161, 1160, 1155, 624, 624, 1007,
	1146, 22969, 177, 1004, 998, 996, 1017, 1145, 200, 1003,
	902, 989, 34436, 1508, 34436, -1000, 165, 593, 327, 643,
	1725, 1664, 1466, 345, 378, 1156, 319, 319, 34436, -1000,
	9286, -1000, -1000, 1134, 14777, -1000, 736, 723, 723, -1000,
	-1000, -1000, -1000, -1000, -1000, 734, 34436, 736, -1000, -1000,
	-1000, 723, 734, 34436, 734, 734, 734, 734, 723, 723,
	723, 734, 34436, 34436, 34436, 34436, 34436, 34436, 34436, 34436,
	34436, 8732, 8732, 8732, 610, 734, -279, -1000, 1132, -1000,
	1563, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	117, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-67, 1465, 26246, -1000, -280, -281, -282, -285, -1000, -1000,
	-1000, -286, -322, -1000, -1000, -1000, 14777, 14777, 14777, 14777,
	-1000, 864, 15323, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	901, 666, 15323, 15323, 15323, 15323, 15323, 15323, 15323, 15323,
	15323, 15323, 15323, 15323, 15323, 15323, 15323, 693, 5527, 5527,
	546, 546, 546, 546, -1000, 14231, 14777, 14777, 546, -1000,
	1156, 25700, 14231, 14231, 14777, 1704, 665, 880, 34436, -1000,
	1099, -1000, -1000, -1000, 931, -1000, 34436, 34436, 1094, 14777,
	11500, 9286, 14231, 14231, 14231, 14231, 14231, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 514,
	1261, 1276, 1371, -1000, 1464, -1000, -179, 18601, 14777, 1125,
	1858, 1540, 34436, -1000, -1000, -1000, 1752, -1000, 1752, 1261,
	1739, 1627, 14231, -1000, -1000, 1739, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1423, -1000, 34436, 1462, 1753, 34436,
	1617, 1119, 307, -1000, 14777, 14777, 1447, -1000, 898, 34436,
	-1000, -1000, 25154, -1000, -1000, 8178, -1000, 34436, 241, 34436,
	-1000, 24061, 24608, 9840, -63, -1000, 9840, 1421, -1000, -25,
	-14, 12046, 565, -1000, -1000, -1000, 2106, 15869, 1236, 565,
	55, -1000, -1000, -1000, 1497, -1000, 1497, 1497, 1497, 1497,
	307, 307, 307, 307, -1000, -1000, -1000, -1000, -1000, 1507,
	1506, -1000, 1497, 1497, 1497, 1497, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1505, 1505, 1505, 1498, 1498, 305, -1000,
	14777, 243, 24061, 1738, 983, 991, 165, 320, 1538, 1156,
	1156, 1156, 320, -1000, 1171, 1139, -1000, -373, 1446, -1000,
	-1000, 1833, -1000, -1000, 645, 761, 759, 631, 34436, 142,
	236, -1000, 299, -1000, 24061, 1156, 726, 444, 1156, -1000,
	1156, -1000, -1000, -1000, -1000, -1000, 1156, 1445, -1000, 1426,
	816, 743, 779, 730, 1445, -1000, -1000, -124, 1445, -1000,
	1445, -1000, 1445, -1000, 1445, -1000, 1445, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 659, 34436, 142, 693, -1000,
	342, -1000, -1000, 693, 693, -1000, -1000, -1000, -1000, 1115,
	1114, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -360, 34436,
	-1000, 151, 642, 213, 244, 214, 34436, 144, 1771, 171,
	203, 34436, 34436, 319, 1562, 34436, 1741, 34436, -1000, -1000,
	-1000, -1000, -1000, 880, 34436, -1000, -1000, 734, 734, -1000,
	-1000, 34436, 734, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 734, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34436,
	34436, -1000, -1000, -1000, -1000, -1000, 105, -30, 263, -1000,
	-1000, -1000, -1000, -1000, 1778, -1000, 880, 715, 679, -1000,
	-1000, -1000, 974, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	901, 15323, 15323, 15323, 1265, 405, 1695, 1422, 829, 746,
	746, 798, 798, 571, 571, 571, 571, 571, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1111, -1000, -1000, 1288,
	-1000, 964, 999, 1099, -1000, 1288, 1288, 985, 14231, -1000,
	-1000, 706, -1000, 14777, 1099, -1000, -1000, 1099, 1099, 1438,
	1428, 1855, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 892, 1099, 14231, 14231, 1425, 1471, 503,
	-1000, 1288, 1099, 1099, 1288, 1288, 9286, 1099, -1000, 34436,
	-1000, -271, -1000, -62, 576, 1471, -1000, 22969, 1099, 1379,
	-1000, 5383, -1000, 35528, -1000, -1000, -1000, -1000, -1000, 21331,
	1338, 1739, -1000, -1000, 1471, 1346, -1000, -1000, 307, 23,
	20785, -1000, -1000, 880, 880, 14777, -1000, -1000, -1000, -1000,
	-1000, -1000, 501, 1848, 285, 1471, -1000, 1353, 1615, -1000,
	-1000, -1000, 1750, 18055, 34436, 1442, 1436, -1000, 495, -1000,
	1421, -63, -17, -1000, -1000, -1000, -1000, 880, -1000, 1131,
	247, 281, -1000, 311, -1000, -1000, -1000, -1000, 1675, 47,
	-1000, -1000, -1000, 307, 307, -1000, -1000, -1000, -1000, -1000,
	-1000, 1103, 1103, -1000, -1000, -1000, -1000, -1000, 980, -1000,
	-1000, -1000, 973, -1000, -1000, 1080, 1571, 243, -1000, -1000,
	624, 1097, 1678, 34436, -1000, -1000, 1234, 1738, 151, 34436,
	670, 1561, -1000, 1538, 1538, 1538, 34436, -1000, -1000, -1000,
	-1000, -368, 54, 303, -1000, -1000, -1000, 372, 34436, 1344,
	-1000, 135, -1000, 1221, -1000, 34436, -1000, 1321, 1503, 1156,
	1156, -1000, -1000, -1000, 34436, 1471, -1000, -1000, -1000, -1000,
	374, 1718, 1716, 142, 135, 565, 1156, -1000, -1000, -1000,
	-1000, -1000, -364, 1290, 356, 140, 226, 34436, 34436, 34436,
	34436, 34436, 488, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 189, 330, -1000, 34436, 34436, 458, -1000, -1000, -1000,
	723, -1000, -1000, 723, -1000, -1000, -1000, -1000, -1000, 1698,
	34436, -35, -335, -1000, -332, -1000, -1000, -1000, -1000, 1247,
	379, 1695, 15323, 15323, -1000, 14231, -116, 352, 352, 693,
	-1000, -1000, -1000, 14777, 14777, 1351, 628, -1000, 14777, 701,
	-1000, -1000, -1000, 14777, 14777, 14777, 1099, 245, -1000, 1288,
	1288, 14231, 9286, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 576, -1000, 444, 444, 444, 34436, -1000,
	-1000, -1000, -1000, -1000, -1000, 1399, 1779, -1000, 1640, 1636,
	1850, 1848, -1000, 24061, 1739, -1000, -1000, 34436, -258, -1000,
	1659, 1648, -1000, -1000, -1000, -1000, 7624, 1752, 14777, 1559,
	34436, 1471, -1000, 17508, 34436, 34436, 24061, 24061, 24061, 24061,
	24061, -1000, 1610, 1609, -1000, 1599, 1584, 1605, 34436, -1000,
	1278, 1099, 1789, 18055, 20239, 1385, 24061, -1000, -1000, 24061,
	34436, 7070, -1000, -1000, -50, -28, -1000, -1000, -1000, -1000,
	2106, -1000, -1000, 387, 1749, 1673, -1000, -1000, -1000, -1000,
	1273, -1000, 1268, 1398, 1258, 143, -1000, 1518, 1697, 624,
	624, -1000, 969, -1000, 1156, -1000, -1000, -1000, 351, -1000,
	1735, 34436, 1558, 1556, 1555, -1000, -380, 962, 1502, 1271,
	14777, 1501, 1819, 1387, 34436, -1000, -1000, 34436, -1000, 133,
	-1000, 243, 34436, -1000, -1000, -1000, 236, 34436, -1000, 5342,
	135, -1000, -1000, -1000, -1000, -1000, -1000, 34436, 167, -1000,
	1499, 1107, -1000, -1000, 1524, -1000, -1000, -1000, -1000, 139,
	209, -1000, 34436, 452, 1571, 34436, -1000, -1000, -1000, 734,
	734, -1000, -1000, 1690, -1000, 1156, 15323, 15323, -1000, 546,
	-1000, 1471, 1099, 1497, 1497, -1000, 1497, 1498, -1000, 1497,
	100, 1497, 93, 1497, -1000, -1000, 1099, 1099, 886, 908,
	-110, -1000, 880, 14777, 1066, 1020, 991, -1000, 1496, 1494,
	-1000, -1000, 1099, -1000, -1000, 1773, 1773, 1773, 1248, 34982,
	34436, -1000, -1000, -1000, -1000, 1848, 1846, 1395, -1000, -1000,
	23, 349, -1000, 1652, 1648, -1000, 1818, 1653, 1815, -1000,
	-1000, -1000, 880, -1000, 1705, 1270, -1000, 630, 1335, -1000,
	-1000, 13685, 1253, 1634, 485, 1248, 1317, 1615, 1548, 1554,
	1576, -1000, -1000, -1000, -1000, 1602, -1000, 1574, -1000, -1000,
	1474, -1000, -1000, 1276, 241, 24061, 1285, 1285, -1000, 483,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 784, 5037, 1871,
	-1000, 1095, -1000, 1126, -1000, 704, 691, -1000, 34436, 1493,
	-1000, 307, 1087, 307, 958, -1000, 930, -1000, -1000, -203,
	-1000, -1000, 1444, 1581, -1000, -1000, 34436, -1000, -1000, 34436,
	34436, 34436, 1480, 1814, -1000, 14777, 1479, 629, 1059, 34436,
	34436, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 334, 624, -344, 199, 192, 624, 624, 624, -1000,
	-1000, 1243, 1241, -1000, -155, -1000, 14777, -1000, -1000, -1000,
	1104, 1104, -1000, 1474, -1000, -1000, -1000, 1219, -1000, -1000,
	-136, 34436, 34436, 34436, 34436, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 546, 15323, -1000, -1000, 307, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14777, -1000,
	14777, -1000, 1752, 1083, 880, 14777, 14777, -1000, 927, 921,
	-1000, 1471, 1674, 1471, 1471, 20239, -1000, -1000, 1846, 1843,
	1812, 1647, 1649, 1649, 1652, -1000, 1808, 1807, -1000, 1081,
	1806, 1076, 687, -1000, 34436, 14777, 1471, -1000, 291, 34436,
	1471, 34436, -1000, 1839, -1000, -1000, 14777, 1478, -1000, 14777,
	-1000, -1000, -1000, -1000, -1000, 1848, 1285, -1000, -1000, 577,
	-1000, 14777, -1000, -1000, -1000, 166, -1000, -1000, -1000, -1000,
	-1000, 1476, 14777, -1000, -1000, -1000, 1207, 1205, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1474, -1000, -1000, -1000,
	-1000, 236, -370, 1015, 34436, 903, -1000, 1233, 1387, 218,
	1471, 1049, 624, 624, 624, 862, 851, 22969, 290, -1000,
	236, -1000, -163, -166, 991, -1000, -1000, 1748, -1000, -1000,
	9286, -1000, -1000, 1473, 1528, -1000, 184, -1000, 991, 991,
	1099, -1000, 991, 991, 1195, 1190, 19693, -1000, 1805, 1803,
	23515, 23515, 576, 1843, -1000, 14777, 14777, 1644, 847, -1000,
	-1000, -1000, -1000, 1044, 1043, -1000, 1040, -1000, 1870, -1000,
	880, -1000, 1471, -1000, 465, 1335, -1000, 1752, 880, 34436,
	880, 1839, -1000, 991, -1000, 1471, 34436, 940, -1000, -1000,
	1743, 1229, 53, -1000, 1224, -1000, -1000, 408, -1000, 14777,
	-1000, 22969, 1039, 1036, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 273, 1381, -1000, 622, 34436, 34436, 1099, 233,
	-142, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1204, -1000,
	-1000, -1000, -1000, -1000, 1204, 1204, -1000, -1000, 880, 1379,
	-1000, 810, -1000, -1000, -1000, -1000, -1000, 34436, 1335, 34436,
	-1000, 1198, 1752, -1000, 1185, -1000, 273, -1000, 1424, 1271,
	-1000, -1000, -1000, 13139, -1000, -1000, -1000, -1000, -127, 9286,
	6516, 1183, -1000, -1000, 1592, -121, -150, 22423, -1000, -1000,
	-1000, -1000, -1000, 1296, -1000, -1000, -1000, 1553, 652, -127,
	14777, 1277, 1099, -1000, -23, -1000, -1000, -1000, -1000, -1000,
	1524, -1000, 1585, -1000, -1000, -1000, 1551, 1550, 1854, -1000,
	-1000, -1000, 776, 1030, -1000, -1000, -1000, -1000, 766, 34436,
	-1000, 298, -1000, -1000, -136, -140, -1000, 1856, -1000, 1868,
	502, 502, -1000, -1000, -383, 1178, 163, -1000, -148, -1000,
	-1000, -1000, 267, 926, -1000, -1000, 844, -383, -1000, -151,
	-1000, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2186, 2185, 8, 1, 2184, 2183, 2179, 47, 80,
	165, 17, 167, 78, 2178, 2176, 2175, 2174, 2173, 2170,
	2169, 231, 230, 226, 2168, 2167, 2165, 2164, 2163, 2160,
	2158, 2157, 2156, 2155, 191, 149, 162, 2152, 2149, 2147,
	99, 178, 73, 75, 161, 2146, 2145, 63, 2144, 2143,
	2142, 155, 154, 732, 2141, 177, 107, 26, 2140, 2139,
	2134, 2133, 2132, 2131, 2130, 2129, 2128, 2127, 2126, 2125,
	2124, 2123, 2122, 246, 2121, 2119, 7, 2118, 67, 2117,
	2116, 2115, 103, 2114, 2113, 2112, 2110, 2106, 2105, 2104,
	129, 2102, 2101, 2100, 2099, 164, 2098, 2095, 138, 92,
	119, 2094, 2090, 85, 159, 2089, 102, 2087, 2086, 2085,
	137, 2084, 699, 2083, 50, 44, 2082, 46, 65, 39,
	40, 2079, 118, 2078, 2077, 49, 71, 2073, 82, 53,
	2072, 84, 81, 2071, 45, 2070, 2068, 101, 2067, 2066,
	2065, 91, 2064, 2063, 3301, 2060, 76, 108, 86, 60,
	2058, 28, 34, 2057, 2056, 2055, 2054, 2053, 32, 2052,
	2051, 2050, 128, 20, 2049, 13, 16, 29, 110, 2048,
	41, 68, 2047, 126, 2045, 2042, 36, 22, 23, 2040,
	21, 106, 100, 19, 83, 115, 2038, 2037, 37, 59,
	2035, 2034, 2031, 2030, 2028, 2027, 58, 2025, 35, 2024,
	168, 2021, 4, 2020, 31, 27, 2019, 52, 117, 55,
	14, 2017, 144, 2016, 33, 142, 96, 147, 2015, 2010,
	2005, 163, 255, 1995, 1988, 66, 150, 130, 136, 1987,
	257, 1981, 1979, 79, 1547, 1887, 15, 143, 1978, 1977,
	2883, 122, 18, 43, 1976, 94, 1975, 1974, 1973, 169,
	148, 93, 880, 97, 1969, 1967, 1966, 1964, 1962, 1961,
	1960, 1959, 166, 1958, 1957, 1956, 179, 38, 90, 151,
	61, 1955, 1954, 1953, 104, 74, 1952, 141, 139, 116,
	146, 1948, 152, 132, 123, 1946, 42, 1943, 1940, 1939,
	1938, 1936, 77, 1935, 1934, 1933, 1929, 140, 131, 95,
	69, 1928, 70, 89, 134, 135, 30, 1922, 24, 1921,
	1913, 1906, 157, 9, 1903, 2, 0, 1902, 6, 156,
	258, 133, 1901, 1900, 10, 3, 5, 1899, 1893, 111,
	1892, 1891, 1890, 12, 25, 11, 120, 1886, 1885, 4030,
	2107, 105, 1883, 170,
}

//line sql.y:6350
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 337, 338, 338, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 316, 316,
	316, 319, 319, 32, 68, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 80, 80, 22, 23, 23, 23, 23,
	341, 341, 139, 139, 137, 137, 138, 138, 207, 207,
	24, 25, 25, 217, 217, 216, 216, 216, 218, 218,
	218, 218, 252, 252, 26, 26, 26, 26, 26, 96,
	96, 318, 318, 317, 315, 315, 314, 314, 313, 38,
	39, 48, 48, 48, 48, 49, 50, 320, 320, 288,
	54, 54, 53, 53, 53, 53, 55, 55, 52, 52,
	51, 51, 290, 290, 276, 276, 289, 289, 289, 289,
	289, 289, 289, 275, 275, 107, 107, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 332, 332,
	187, 187, 187, 187, 187, 187, 116, 116, 125, 125,
	125, 125, 125, 114, 114, 115, 113, 113, 113, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 124, 124, 120, 120, 120, 121, 121, 121,
	122, 122, 122, 122, 333, 333, 333, 333, 255, 255,
	255, 255, 258, 258, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 257, 257, 257, 257, 257, 259, 259,
	259, 259, 259, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 261, 261,
	261, 261, 261, 261, 261, 261, 274, 274, 262, 262,
	269, 269, 270, 270, 270, 271, 271, 271, 272, 272,
	267, 267, 267, 267, 267, 267, 268, 268, 268, 277,
	302, 302, 301, 301, 299, 299, 299, 299, 286, 286,
	296, 296, 296, 296, 296, 285, 285, 281, 281, 281,
	282, 282, 283, 283, 280, 280, 284, 284, 298, 298,
	297, 297, 278, 278, 279, 279, 304, 334, 334, 334,
	334, 334, 335, 335, 305, 325, 326, 324, 324, 324,
	324, 324, 78, 78, 78, 229, 229, 229, 294, 294,
	293, 293, 293, 295, 295, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 224, 224, 224, 323, 323, 323, 323,
	323, 323, 322, 322, 322, 291, 291, 291, 321, 321,
	56, 56, 171, 171, 45, 45, 45, 45, 45, 45,
	44, 44, 44, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 46, 46, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 82, 82, 83,
	83, 83, 83, 85, 85, 85, 307, 307, 57, 57,
	3, 3, 1, 1, 2, 2, 4, 4, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	273, 273, 273, 306, 306, 308, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 310, 310, 310, 58, 58,
	311, 263, 264, 265, 5, 6, 287, 309, 92, 92,
	28, 37, 37, 29, 29, 29, 29, 30, 30, 59,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 327, 327,
	223, 223, 231, 231, 222, 222, 245, 245, 245, 225,
	225, 225, 226, 226, 331, 331, 331, 61, 61, 61,
	63, 63, 64, 65, 65, 247, 247, 248, 248, 66,
	67, 79, 79, 79, 79, 79, 79, 81, 81, 81,
	15, 15, 15, 15, 75, 75, 75, 14, 14, 62,
	62, 69, 328, 328, 329, 330, 330, 330, 330, 70,
	72, 31, 31, 31, 31, 31, 31, 102, 102, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 97, 97, 97, 91, 91, 342, 73, 74, 74,
	95, 95, 95, 88, 88, 88, 94, 94, 94, 16,
	16, 17, 206, 206, 18, 18, 99, 99, 101, 101,
	101, 101, 101, 103, 103, 103, 103, 103, 103, 103,
	98, 98, 100, 100, 100, 100, 238, 238, 238, 237,
	237, 128, 128, 130, 129, 129, 131, 131, 132, 132,
	132, 169, 147, 147, 204, 204, 202, 202, 203, 203,
	205, 205, 205, 205, 208, 208, 133, 133, 133, 133,
	134, 134, 135, 135, 136, 136, 246, 246, 243, 243,
	243, 242, 242, 140, 140, 140, 142, 141, 141, 141,
	141, 143, 143, 145, 145, 144, 144, 146, 151, 151,
	150, 150, 148, 148, 148, 148, 149, 149, 149, 149,
	152, 152, 112, 112, 112, 112, 112, 112, 123, 123,
	123, 123, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 220,
	220, 153, 153, 161, 161, 161, 161, 154, 154, 154,
	154, 154, 154, 154, 162, 162, 162, 168, 163, 163,
	159, 159, 159, 159, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 343, 343, 266, 266, 266, 266,
	160, 160, 160, 160, 160, 93, 93, 93, 93, 93,
	251, 251, 251, 254, 254, 254, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 174, 174, 89, 89, 172, 172, 173, 175, 175,
	170, 170, 170, 156, 156, 156, 176, 176, 177, 177,
	178, 178, 180, 179, 179, 181, 182, 182, 182, 183,
	183, 184, 184, 184, 47, 47, 47, 47, 47, 42,
	42, 42, 42, 43, 43, 43, 104, 104, 104, 104,
	106, 106, 105, 105, 76, 76, 77, 77, 77, 110,
	110, 111, 111, 111, 108, 108, 109, 109, 200, 200,
	185, 185, 185, 192, 192, 192, 188, 188, 190, 190,
	190, 191, 191, 191, 189, 197, 197, 199, 199, 198,
	198, 194, 194, 195, 195, 196, 196, 196, 193, 193,
	155, 155, 155, 155, 155, 201, 201, 201, 201, 209,
	209, 165, 165, 167, 167, 166, 127, 210, 210, 214,
	211, 211, 215, 215, 215, 215, 215, 212, 212, 213,
	213, 239, 239, 239, 219, 219, 230, 230, 227, 227,
	228, 228, 221, 221, 232, 232, 232, 71, 164, 164,
	303, 303, 300, 235, 235, 236, 236, 240, 240, 244,
	244, 241, 241, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 339, 340, 249, 250, 250, 250,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 6, 3, 1, 1, 5,
	0, 1, 1, 1, 2, 2, 0, 1, 4, 4,
	4, 4, 2, 4, 1, 3, 1, 1, 3, 4,
	3, 3, 3, 5, 10, 0, 2, 0, 2, 3,
	5, 3, 4, 2, 3, 2, 3, 3, 1, 1,
	0, 2, 2, 3, 3, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 2, 2, 2, 1, 1, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 3, 0, 1,
	4, 3, 3, 4, 2, 0, 2, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 4, 3, 1, 3, 1, 7, 5, 6, 6,
	7, 7, 0, 1, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 2, 2, 4, 4, 3, 0, 1,
	4, 3, 4, 4, 3, 3, 3, 2, 1, 3,
	3, 3, 5, 7, 7, 6, 5, 3, 2, 3,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 2,
	4, 2, 4, 5, 4, 4, 4, 4, 4, 3,
	3, 3, 5, 2, 3, 3, 3, 3, 1, 1,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 2, 1, 3,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 3, 3, 7, 0, 3, 1, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 1,
	1, 2, 6, 5, 6, 6, 0, 2, 3, 3,
	0, 2, 3, 3, 3, 2, 3, 1, 3, 4,
	3, 1, 3, 4, 5, 6, 3, 4, 5, 6,
	3, 4, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 2, 2, 2, 2, 1, 1, 2,
	9, 6, 6, 6, 2, 2, 3, 3, 3, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 5, 5, 6, 4, 4, 8, 6, 8, 6,
	8, 5, 4, 2, 2, 1, 2, 2, 2, 8,
	8, 6, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 0, 5, 5, 2, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 2, 1,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 2, 2, 0, 3, 0, 2,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 0,
	1, 2, 4, 4, 0, 2, 2, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 4,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -337, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -59, -60, -61, -63,
	-64, -65, -66, -67, -14, -62, -31, -32, -68, -69,
	-70, -71, -72, -16, -17, -18, -9, -8, -13, 7,
	8, -80, -33, 30, -38, -48, 203, -49, -39, 204,
	-50, 206, 205, 242, 207, 235, 72, 284, 285, 287,
	288, 289, 290, -81, 240, 241, 209, 34, 43, 31,
	32, 35, 213, 248, 249, 212, -10, -34, 6, -339,
	9, 411, 237, 236, 26, -12, 425, 83, -338, 559,
	-200, -185, 20, 31, 27, -184, -180, -95, -185, 18,
	16, 5, -73, -342, -73, -73, 10, 11, -73, -288,
	-290, 83, 140, 83, -73, -54, -53, -52, -51, -55,
	29, -45, -46, -312, -44, -41, 208, 205, 252, 107,
	108, 242, 243, 244, 207, 226, 241, 245, 240, 261,
	-40, 78, 31, 425, 428, -295, 204, 210, 211, 412,
	110, 109, 73, 206, -292, 336, 529, -55, 531, 99,
	101, 530, 42, 216, 532, 533, 534, 535, 225, 536,
	537, 538, 539, 545, 546, 547, 548, 111, 5, -73,
	-244, -240, -316, -234, 86, 87, 88, 422, 228, 456,
	457, 277, 78, 39, 333, 336, 529, 284, 298, 292,
	319, 311, 423, 458, 280, 229, 265, 526, 309, 116,
	531, 283, 459, 243, 341, 342, 343, 99, 287, 378,
	544, 282, 460, 542, 101, 530, 77, 49, 42, 238,
	307, 212, 303, 532, 266, 461, 433, 259, 110, 107,
	551, 34, 301, 48, 28, 541, 109, 47, 533, 131,
	462, 534, 345, 324, 520, 46, 346, 244, 463, 81,
	249, 427, 528, 347, 302, 348, 276, 540, 209, 464,
	512, 349, 350, 521, 465, 325, 329, 466, 370, 351,
	558, 50, 467, 468, 522, 108, 469, 76, 535, 296,
	297, 470, 274, 227, 372, 323, 225, 33, 352, 424,
	278, 56, 253, 373, 44, 327, 555, 43, 516, 471,
	519, 322, 318, 51, 472, 473, 474, 475, 536, 321,
	295, 317, 550, 445, 271, 537, 60, 211, 331, 330,
	332, 260, 369, 314, 476, 477, 478, 232, 79, 479,
	304, 19, 480, 481, 353, 267, 482, 54, 483, 484,
	376, 241, 485, 52, 538, 37, 246, 552, 539, 486,
	487, 488, 489, 248, 490, 355, 491, 354, 326, 328,
	255, 356, 426, 492, 300, 245, 543, 493, 233, 527,
	247, 252, 240, 377, 234, 494, 495, 496, 497, 498,
	281, 499, 500, 288, 545, 41, 501, 502, 503, 504,
	275, 270, 371, 380, 59, 80, 338, 505, 525, 294,
	268, 506, 285, 53, 546, 547, 548, 262, 549, 7,
	556, 557, 358, 111, 272, 273, 45, 315, 254, 507,
	508, 305, 306, 320, 293, 316, 286, 513, 256, 359,
	242, 509, 379, 269, 334, 339, 430, 261, 360, 524,
	429, 313, 310, 263, 510, 361, 217, 257, 258, 511,
	514, 362, 363, 279, 364, 365, 366, 367, 368, 264,
	428, 291, 308, 340, 392, 393, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 420, 215, -73, 215, -144, -240, 215, -212,
	342, -231, 344, 357, 352, 362, 350, -223, 353, 355,
	255, -331, 370, 215, 359, 203, 157, 345, 354, 363,
	364, 279, 365, 368, 264, -327, -316, 534, 549, 116,
	312, 349, 347, 371, 516, 367, 366, -240, 286, -247,
	291, -235, -316, -234, 289, -144, -79, 512, 207, -249,
	-249, -97, 516, 518, -163, -112, 124, -123, -126, -117,
	-118, -157, -158, -159, -160, -124, -170, 146, 147, 154,
	125, -168, -127, 24, 421, 413, 412, 157, 29, 199,
	66, 67, 415, 416, 127, 55, 388, 389, -125, 383,
	390, 385, 418, 419, 102, 420, -235, -240, 220, 382,
	214, 152, 411, -119, -115, -8, -166, 381, 386, 387,
	391, 384, -316, -234, -121, -120, -153, 89, 95, 100,
	96, -336, 103, -339, 90, 91, 92, 93, 94, 104,
	105, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 42, 358, 358, -144, -73, -73, -73, -73,
	-178, -95, -180, -10, -8, -339, 6, -73, -8, -9,
	-13, -34, -36, 452, -35, -240, -185, -200, 10, 142,
	40, 48, -183, -184, -12, -8, -112, 17, 21, 22,
	-100, 148, -112, -240, -74, -100, -221, 219, -73, -73,
	-211, -252, 286, -215, 371, 370, -236, -213, -235, -233,
	-212, 369, 208, 431, 123, 23, 25, 126, 157, 17,
	127, 35, 210, 312, 226, 156, 222, 412, 203, 70,
	432, 383, 385, 381, 388, 414, 415, 382, 344, 29,
	11, 434, 26, 236, 22, 36, 150, 205, 130, 239,
	24, 237, 102, 105, 437, 20, 73, 231, 12, 224,
	38, 14, 438, 439, 15, 220, 219, 142, 216, 68,
	9, 199, 27, 139, 64, 440, 118, 441, 442, 443,
	444, 66, 140, 18, 553, 386, 387, 31, 517, 421,
	250, 152, 71, 57, 518, 124, 384, 446, 447, 103,
	448, 106, 74, 523, 120, 16, 69, 40, 449, 251,
	450, 221, 554, 451, 374, 452, 141, 206, 411, 67,
	453, 214, 357, 6, 417, 30, 235, 223, 113, 65,
	454, 215, 129, 418, 419, 218, 104, 5, 117, 32,
	10, 72, 75, 389, 390, 391, 55, 112, 425, 128,
	13, 455, 375, 122, 116, -289, 140, -275, -279, -235,
	230, -305, 226, -144, -298, -297, -235, -339, -96, -230,
	216, 224, 223, 117, -320, 120, 272, 382, 214, -51,
	-52, -212, 156, -82, 247, 251, 84, 84, -279, -278,
	-277, -321, 251, 230, -304, -296, 222, 231, -285, 223,
	224, -280, 216, 118, -321, -280, 221, 231, 251, 251,
	111, 251, 111, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 246, -286, 132, -286, 429, 429, -292, -321,
	-321, -321, 218, 33, 33, -232, -280, 218, 23, -286,
	-286, -212, 156, -286, -286, -286, -286, 259, 259, -286,
	-286, -286, -286, -286, -286, -286, -286, -286, -286, -286,
	-286, -286, -286, -286, 215, -320, -104, 368, 279, 78,
	-53, 261, -37, -144, -230, 216, 217, -320, 248, -144,
	200, -144, -225, 140, 13, -225, -222, 358, 356, 343,
	348, -225, -225, -225, -225, 262, 341, -281, 216, 33,
	227, 358, 262, 341, 262, 263, 262, 263, 351, 361,
	262, -245, 12, 142, 382, 346, 350, 255, 215, 256,
	217, 360, -316, 519, 263, -245, 90, -226, 140, 358,
	258, -225, -250, -339, -236, 312, -250, -250, 30, 87,
	218, -235, -75, -235, 90, -15, -11, -22, -21, -23,
	132, -102, 358, -90, 157, 534, 520, 521, 522, 519,
	355, 527, 525, 523, 262, 524, 84, 120, 122, 123,
	-112, 139, -154, 132, 133, 134, 135, 136, 137, 138,
	142, 124, 126, 140, 141, 121, 143, 144, 145, 146,
	147, 148, 149, 151, 150, 152, 153, 156, 201, 202,
	-118, -118, -118, -118, -168, -339, -339, -339, -118, -220,
	-339, -118, -339, -339, -339, -339, -174, -112, -339, -343,
	-339, -343, -343, -266, -339, -266, -339, -339, -339, -339,
	-339, 200, -339, -339, -339, -339, -339, -266, -266, -266,
	-266, -266, 100, 95, 89, -170, 96, 90, -235, -240,
	-8, -9, -163, -249, -328, -329, -147, -144, -339, 279,
	-235, -235, 248, -183, -12, -8, -178, -184, -180, -8,
	-73, -88, -101, 61, 62, -103, 22, 36, 65, 63,
	21, -340, 85, -340, -200, -340, 84, -36, -204, 83,
	59, 41, 90, 90, 84, 19, -179, -181, -112, 12,
	-238, -237, 23, -235, 90, 200, 98, 12, -145, 27,
	-144, -221, -221, 84, 286, -215, -252, -217, -216, 372,
	374, 132, -239, -235, 90, 29, 85, 84, -144, -255,
	-258, -260, -259, -261, -256, -257, 309, 310, 157, 313,
	315, 316, 317, 318, 319, 320, 321, 322, 323, 324,
	30, 238, 305, 306, 307, 308, 325, 326, 327, 328,
	329, 330, 331, 332, 292, 311, 423, 293, 294, 295,
	296, 297, 298, 300, 301, 302, 303, 304, -319, -316,
	83, 85, 84, -262, 83, -112, -104, 215, -316, 216,
	216, 216, -73, 411, -286, -286, 246, 17, -44, -41,
	-312, 16, -40, -41, 208, 107, 108, 205, 83, -275,
	83, -284, -319, -316, 83, 118, 221, 117, -283, -280,
	-283, -284, -316, -170, -316, 118, 118, -208, -235, -208,
	-208, 21, -208, 21, -208, 21, 92, -235, -208, 21,
	-208, 21, -208, 21, -208, 21, -208, 21, 29, 76,
	77, 29, 79, 80, 81, -170, -170, -275, -212, -144,
	-316, 92, 92, -286, -286, 92, 90, 90, 90, -286,
	-286, 92, 90, -242, -240, 90, -322, 232, 276, 278,
	92, 92, 92, 92, 29, 90, -323, 29, 541, 540,
	542, 543, 544, 92, 29, 92, 29, 92, -235, 83,
	-144, -110, 266, 203, 205, 208, 74, 90, 280, 132,
	42, 84, 218, 215, -316, -227, 220, -227, -235, -241,
	-240, -233, 90, -112, -282, 12, 142, -245, -245, -225,
	-144, -282, -245, -225, -144, -225, -225, -225, -225, -245,
	-245, -245, -225, -240, -240, -144, -144, -144, -144, -144,
	-144, -144, -250, -250, -250, -226, -225, 519, 90, 74,
	-248, 289, 323, 513, 514, 515, 84, 425, -137, -144,
	519, 519, 519, 519, 519, 519, -112, -112, -112, -112,
	-161, 103, 124, 104, 105, -126, -162, -166, -168, 97,
	142, 126, 140, 141, -117, -118, -117, -117, -117, -117,
	-117, -117, -117, -117, -117, -117, -117, -117, -117, -251,
	-316, 90, 157, -122, 90, 91, -336, 96, -122, -98,
	-100, -112, -112, -316, -235, -98, -98, -112, -94, 22,
	36, -172, -173, 128, -170, -340, -340, 92, 96, -235,
	-235, -87, -86, 393, 394, 395, 396, 398, 399, 400,
	403, 404, 408, 409, 392, 410, 397, 402, 405, 406,
	407, 401, 308, -112, -99, 22, 36, -98, -236, -241,
	-233, -98, -99, -99, -98, -98, 200, -200, -340, 84,
	-330, 374, 375, 517, -243, 251, -242, 23, -164, -163,
	90, 12, -206, 75, -235, -183, -183, 61, 62, 57,
	-98, -103, -340, -35, 23, -202, -235, 60, 90, -267,
	-212, 333, 334, -112, -112, 84, -182, 25, 26, -144,
	-237, 148, -241, -144, -207, 251, -144, -129, -131, -132,
	-133, -147, -169, -339, 12, -137, -138, -146, -240, -215,
	-217, 84, 373, 375, 376, 74, 106, -112, -268, 156,
	-294, -293, -292, -275, -277, -278, -279, 85, -268, -271,
	339, 338, -262, -262, -262, -262, -262, -267, -267, -267,
	-267, 83, 83, -262, -262, -262, -262, -269, 83, -269,
	-269, -270, 83, -270, -305, -112, -302, -301, -299, -300,
	225, 99, 425, 75, -297, -182, 92, -340, -110, -228,
	220, -303, -300, -316, -316, -316, -228, -316, 90, -316,
	90, -83, -57, -1, 553, 554, 555, 84, 17, -276,
	-275, -56, 276, -308, -309, 251, -304, -298, -284, 118,
	-283, -284, -284, -316, 84, 27, 111, 111, 111, 111,
	425, 205, 30, -275, -56, -251, 218, -251, -251, 90,
	90, -224, 549, -137, -106, 268, 132, 257, 257, 215,
	215, 270, -144, 281, 283, 282, 280, 21, 269, 271,
	273, 259, -144, -144, -227, 74, -139, -144, 24, -240,
	-144, -225, -225, -144, -225, -225, -144, -235, -90, 374,
	84, 425, 20, -91, 20, 103, 104, 105, -162, -117,
	-118, -117, 123, 239, 90, 84, -340, 23, 84, 75,
	-340, -340, -340, 84, 12, -98, -175, -173, 130, -112,
	-340, -340, -340, 84, 84, 12, -254, 23, -340, -98,
	-98, -339, 200, -340, -340, -340, -340, -340, -236, -329,
	516, 375, -151, -150, -148, 72, 219, 73, -339, -242,
	-340, -122, 87, -203, 87, -202, -156, -235, 92, 96,
	-185, -128, -130, 12, -103, -168, 85, 84, -267, -189,
	-194, -222, -235, 90, 157, -181, 200, -152, 13, -155,
	30, 55, -11, -339, -339, 30, 84, -140, -142, -141,
	-143, 64, 68, 70, 65, 66, 67, 71, -246, 23,
	-129, -9, -8, -339, -144, -137, -341, 12, 75, -341,
	84, 200, -216, -218, 377, 374, 380, -316, 90, -82,
	84, -292, -279, -186, -107, 38, -272, 340, -267, -267,
	-274, 90, -274, 92, 92, 85, -47, -42, -43, 31,
	78, -299, -286, 90, 37, -235, 85, -182, -106, -144,
	124, 74, -303, -303, -303, -240, -2, 552, 558, 118,
	83, 343, 16, -202, 84, 85, -171, 277, 85, -84,
	-235, 85, 83, -284, -284, -235, -339, 215, 29, 29,
	-56, -171, -268, -316, 551, 550, 85, 217, 275, -111,
	388, -108, 90, 86, -144, -144, -144, -144, -144, 208,
	205, 260, 218, -137, -144, 84, -78, 234, 229, -245,
	-245, 31, -144, 374, 528, 526, 123, 239, -126, -118,
	-100, 422, -253, 157, 309, 238, 307, 303, 323, 314,
	338, 305, 339, 302, 301, 300, -253, -251, -112, -112,
	-178, 131, -112, 129, -112, -112, -112, -340, 157, 309,
	-340, -340, -99, -236, -148, -280, -280, -280, -208, 84,
	-219, 20, 12, 55, 55, -128, -152, -129, -103, -235,
	-192, 512, -197, 44, -195, -196, 45, -193, 46, 54,
	148, -183, -112, -209, 74, -210, -214, -170, -165, -167,
	-166, -339, -201, -340, -235, -208, -210, -131, -132, -132,
	-131, -132, 64, 64, 64, 69, 64, 69, 64, -141,
	-240, -340, -340, -9, -243, 75, -129, -129, -146, -240,
	148, 374, 378, 379, -292, -335, 103, 124, 29, 74,
	336, 99, -333, 156, -334, 221, 117, 118, 233, 23,
	39, 85, 84, 85, 84, 85, 84, -229, 462, 124,
	-43, -42, -286, -286, 92, -316, 217, 24, -144, 74,
	74, 74, -85, 556, 92, 83, -3, 78, -112, 83,
	17, -275, -170, -310, -263, -311, -264, -265, -5, -6,
	-287, 55, 99, -58, 42, 216, 536, 537, 111, 549,
	-302, -202, -306, -308, -144, -114, -339, -113, -115, -119,
	146, 147, -171, -144, -105, 266, 274, 83, -109, 87,
	-318, 75, 257, 336, 257, -144, -78, -47, -144, -225,
	-225, 31, -316, -126, -118, -339, -340, -262, -262, -262,
	-270, -262, 297, -262, 297, -262, -340, -340, 84, -340,
	20, -340, -89, 417, -112, 84, 84, -340, 83, 83,
	-340, -149, 20, -149, -149, -340, 87, -144, -152, -176,
	14, -189, 49, 315, -199, -198, 53, 45, -196, 17,
	47, 17, 28, -209, 84, 132, 84, -340, -340, 84,
	55, 200, -340, -152, -135, -134, 74, 75, -136, 74,
	-134, 64, 64, -204, -340, -207, -129, -152, -152, 200,
	103, -339, -116, -125, -114, 10, 90, 90, -316, 118,
	118, -144, 83, -267, 90, -267, 92, 92, 462, 29,
	79, 80, 81, 29, 76, 77, -144, -144, -144, -144,
	-307, 83, 17, -112, 83, 132, 85, -202, -202, 253,
	142, -286, 534, 259, 259, -286, -286, -286, 85, -340,
	84, -273, 425, 428, -112, -120, -120, -204, 85, -315,
	425, -317, -235, -235, -235, -235, -117, -267, -112, -112,
	-183, 90, -112, -112, 92, 92, -339, 64, 16, 14,
	-339, -339, -243, -176, -177, 15, 17, -190, 51, -188,
	50, -188, -198, 17, 17, 90, 17, 90, 118, -214,
	-112, -167, 55, -11, -235, -165, -235, -178, -112, 83,
	-112, -152, -152, -112, -158, 420, 83, -112, 85, 85,
	-204, -306, -57, 85, -202, 92, 85, 254, -166, -339,
	90, -286, -286, -286, 92, 92, -242, -334, -308, 429,
	429, -340, 23, -314, -313, -236, 83, 75, -93, 142,
	425, -340, -340, -340, -340, -340, 85, 85, -205, -340,
	-235, 221, 17, 17, -205, -205, -151, -177, -112, -163,
	-191, 52, 74, 106, 90, 90, 90, 10, -165, 200,
	-183, -202, -178, -340, -202, 85, 23, 85, 558, 118,
	85, -166, -92, -339, 250, -242, 90, 90, -11, 84,
	132, -202, -144, -340, 423, 71, 426, 84, -340, -340,
	-340, 74, 106, -210, -235, 85, -183, 85, -187, -11,
	83, -3, 250, -76, 425, -313, -291, -236, 90, 92,
	85, 60, 424, 427, -235, 221, -325, -326, 74, -335,
	-332, 103, 124, 99, -333, 112, 113, -76, -112, 83,
	-340, -77, 265, 516, -318, 60, -326, 74, -325, 74,
	11, 10, 103, 90, 85, -202, 226, -315, 425, -324,
	234, 229, 232, 30, -324, -4, 557, 85, 267, 426,
	228, 29, 103, 92, -4, 427,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 736,
	736, 736, 0, 736, 0, 0, 736, -2, -2, 736,
	1169, 0, 736, 0, 0, -2, 668, 670, 0, 672,
	-2, 0, 0, 681, 1623, 1623, 731, 0, 0, 0,
	0, 0, 736, 736, 736, 736, 1030, 48, 736, 0,
	83, 84, 687, 688, 689, 63, 0, 1621, 1, 3,
	69, 73, 0, 0, 0, 56, 1039, 0, 76, 0,
	0, 740, 0, 738, 0, 1152, 736, 736, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 142, 143, 0,
	147, 517, 457, 500, 455, 486, -2, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 348, 348, 0, 0, -2, 448, 448, 448, 0,
	0, 0, 483, 1154, 403, 348, 348, 0, 348, 348,
	348, 348, 0, 0, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 1056,
	146, 1170, 1167, 1168, 38, 39, 40, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 0, 1146, 0, 598, 835, 0, 659,
	659, 0, 659, 659, 659, 659, 0, 0, 0, 610,
	0, 0, 0, 0, 656, 0, 0, 629, 631, 0,
	656, 0, 662, 0, 643, 659, 1624, 1624, 1624, 1137,
	0, 653, 651, 665, 666, 648, 649, 667, 671, 0,
	676, 679, 1163, 1164, 0, 694, 47, 1398, 686, 699,
	700, 0, 732, 733, 43, 928, 0, 857, 861, 872,
	885, 886, 887, 888, 889, 891, 892, 0, 0, 0,
	0, 897, 898, 0, 0, 0, 0, 0, 909, 0,
	0, 0, 0, 0, 1011, 0, 974, 974, 945, 974,
	976, 976, 0, 0, 0, 1620, 1020, 0, 0, 0,
	0, 0, 0, 252, 253, 927, 1126, 976, 976, 976,
	976, 976, -2, -2, 199, 200, 201, 202, 203, 204,
	205, 0, 195, 0, 257, 258, 254, 255, 256, 911,
	912, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 1623, 0, 709, 0, 0, 0, 0, 0,
	1039, 0, 1031, 1030, 61, 0, 736, -2, 0, 0,
	0, 0, 45, 0, 50, 794, 75, 74, 1078, 0,
	0, 0, 57, 1040, 65, 67, 1041, 0, 741, 742,
	0, 772, 776, 0, 737, 0, 0, 1153, 1152, 1152,
	100, 0, 1564, 1130, -2, -2, 0, 0, 1165, 1166,
	1139, -2, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, -2, 0, 0, 156, 157, 0,
	41, 375, 0, 152, 0, 368, 318, 0, 1056, 0,
	0, 0, 0, 0, 736, 0, 1147, 137, 138, 144,
	145, 348, 348, 497, 0, 0, 146, 146, 464, 465,
	466, 0, 0, -2, 373, 0, 449, 0, 0, 362,
	362, 366, 364, 365, 0, 0, 0, 0, 0, 0,
	477, 0, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 559, 0, 349, 0, 495, 496, 404, 0,
	0, 0, 0, 475, 476, 0, 0, 1155, 1156, 0,
	0, 348, 348, 0, 0, 0, 0, 348, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 1069, 0, 0, 0,
	-2, 0, 590, 0, 0, 0, 1148, 1148, 0, 597,
	0, 599, 600, 0, 0, 601, 0, 656, 656, 654,
	655, 603, 604, 605, 606, 659, 0, 0, 357, 358,
	359, 656, 659, 0, 659, 659, 659, 659, 656, 656,
	656, 659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1624, 1624, 1624, 662, 659, 0, 639, 0, 640,
	641, 644, 645, 1625, 1626, 1184, 646, 647, 1138, 669,
	677, 680, 697, 695, 696, 698, 690, 691, 692, 693,
	0, 711, 712, 717, 0, 0, 0, 0, 723, 724,
	725, 0, 0, 728, 729, 730, 0, 0, 0, 0,
	855, 0, 0, 917, 918, 919, 920, 921, 922, 923,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	893, 894, 895, 896, 899, 0, 0, 0, 904, 905,
	0, 0, 0, 0, 0, 746, 0, 1012, 0, 943,
	0, 944, 946, 947, 0, 948, 0, 0, 0, 0,
	756, 0, 0, 756, 756, 0, 0, 188, 189, 190,
	191, 192, 206, 207, 208, 209, 210, 259, 1020, 0,
	927, 0, 0, 44, 701, 702, 0, 818, 1158, 0,
	0, 752, 0, 55, 64, 66, 1039, 59, 1039, 0,
	758, 0, 0, -2, -2, 759, 765, 766, 767, 768,
	769, 52, 1622, 53, 0, 72, 0, 46, 0, 0,
	0, 0, 330, 1081, 0, 0, 1032, 1033, 1036, 0,
	773, 777, 0, 779, 780, 0, 739, 0, 98, 0,
	834, 0, 0, 0, 1564, 1136, 0, 102, 103, 0,
	0, 0, 336, 1141, 1142, 1143, -2, 355, 0, 336,
	325, 269, 270, 271, 318, 273, 318, 318, 318, 318,
	330, 330, 330, 330, 301, 302, 303, 304, 305, 0,
	0, 288, 318, 318, 318, 318, 308, 309, 310, 311,
	312, 313, 314, 315, 274, 275, 276, 277, 278, 279,
	280, 281, 282, 320, 320, 320, 322, 322, 0, 42,
	0, 340, 0, 1036, 0, 0, 1069, 1150, 1160, 0,
	0, 0, 1150, 120, 0, 0, 498, 528, 458, 487,
	499, 0, 461, 462, -2, 0, 0, 448, 0, 450,
	0, 356, 0, -2, 0, 366, 0, 362, 366, 363,
	366, 354, 367, 479, 480, 481, 0, 539, 804, 0,
	0, 0, 0, 0, 545, 546, 547, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 488, 489,
	490, 491, 492, 493, 494, 0, 0, 450, 0, 484,
	0, 405, 406, 0, 0, 409, 410, 411, 412, 0,
	0, 415, 416, 417, 821, 822, 418, 442, 443, 444,
	419, 420, 421, 422, 423, 424, 425, 436, 437, 438,
	439, 440, 441, 426, 427, 428, 429, 430, 433, 0,
	130, 1060, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1148, 0, 0, 0, 0, 755, 836,
	1171, 1172, 660, 661, 0, 360, 361, 659, 659, 607,
	630, 0, 659, 611, 632, 612, 614, 613, 615, 634,
	635, 659, 618, 657, 658, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 636, 637, 638, 663, 0,
	0, 678, 682, 683, 684, 685, 0, 0, 714, 94,
	719, 720, 721, 722, 734, 727, 929, 852, 853, 854,
	856, 858, 0, 913, 915, 860, 862, 924, 925, 926,
	0, 0, 0, 0, 0, 866, 870, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 884, 890,
	990, 991, 992, 907, 260, 261, 0, 263, 908, 0,
	770, 0, 0, 0, 906, 0, 0, 0, 0, 747,
	748, 1018, 1015, 0, 0, 975, 977, 0, 0, 0,
	0, 0, 953, 954, 955, 956, 957, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 993, 0, 0, 0, 757, 1021, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 1125, 0,
	704, 705, 707, 0, 838, 0, 819, 0, 0, 1159,
	710, 0, 751, 0, 754, 58, 60, 763, 764, 0,
	781, 760, 54, 49, 0, 0, 796, 1079, 330, 1101,
	0, 334, 335, 1042, 1043, 0, 1035, 1037, 1038, 77,
	778, 774, 0, 850, 0, 0, 833, 0, 784, 786,
	787, 788, 816, 0, 0, 0, 0, 96, 835, 1131,
	101, 0, 0, 106, 107, 1132, 1133, 1134, 1135, 0,
	517, -2, 400, 158, 160, 161, 162, 153, -2, 328,
	326, 327, 272, 330, 330, 295, 296, 297, 298, 299,
	300, 0, 0, 289, 290, 291, 292, 283, 0, 284,
	285, 286, 0, 287, 374, 0, 1044, 341, 342, 344,
	348, 0, 0, 0, 369, 370, 0, 1036, 1060, 0,
	0, 0, 1161, 1160, 1160, 1160, 0, 148, 149, 150,
	151, 534, 0, 0, 529, 532, 533, 146, 0, 0,
	154, 452, 451, 0, 566, 0, 372, 0, 0, 366,
	366, 351, 352, 482, 0, 0, 541, 542, 543, 544,
	0, 0, 0, 450, 452, 336, 0, 407, 408, 413,
	414, 431, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 512, 513, 514, 515, 516, 1057, 1058,
	1059, 0, 0, 591, 0, 0, 392, 92, 1149, 596,
	656, 617, 633, 656, 609, 616, 642, 674, 718, 0,
	0, 0, 0, 726, 0, 859, 914, 916, 863, 0,
	867, 871, 0, 0, 262, 0, 0, 0, 0, 0,
	910, 934, 935, 0, 0, 1030, 0, 1016, 0, 0,
	942, 978, 979, 0, 0, 0, 0, 0, 930, 0,
	0, 756, 0, 980, 981, 982, 983, 984, 1021, 703,
	706, 708, 792, 839, 840, 0, 0, 0, 0, 820,
	1157, 749, 750, 753, -2, 0, 0, 1023, 0, 0,
	781, 850, 782, 0, 761, 51, 795, 0, 1083, 1082,
	1095, 1108, 331, 332, 333, 1034, 0, 1039, 0, 1119,
	0, 0, 1111, 0, 0, 0, 0, 0, 0, 0,
	0, 823, 0, 0, 826, 0, 0, 0, 0, 817,
	0, 0, 0, 0, -2, 0, 0, 90, 91, 0,
	0, 0, 104, 105, 0, 0, 111, 337, 338, 139,
	146, 402, 159, 382, 0, 0, 268, 329, 293, 294,
	0, 316, 0, 0, 0, 395, 116, 1048, 1047, 348,
	348, 343, 0, 346, 0, 1162, 319, 371, 0, 129,
	0, 0, 0, 0, 0, 135, 523, 0, 0, 530,
	0, 0, 0, 456, 0, 467, 468, 0, 538, -2,
	587, 340, 0, 350, 353, 805, 0, 0, 469, 0,
	452, 473, 474, 485, 434, 435, 432, 0, 0, 1070,
	1071, 1076, 1074, 1075, 121, 505, 507, 506, 510, 0,
	0, 503, 0, 392, 1044, 0, 595, 393, 394, 659,
	659, 713, 95, 0, 716, 0, 0, 0, 864, 868,
	771, 0, 0, 318, 318, 998, 318, 322, 1001, 318,
	1003, 318, 1006, 318, 1009, 1010, 0, 0, 0, 0,
	1013, 941, 1019, 0, 0, 0, 0, 952, 0, 0,
	931, 932, 0, 1022, 841, 846, 846, 846, 0, 0,
	0, 1144, 1145, 1024, 1025, 850, 1026, 783, 762, 797,
	1101, 0, 1094, 0, -2, 1103, 0, 0, 0, 1109,
	775, 78, 851, 81, 0, 1119, 1127, 0, 1110, 1121,
	1123, 0, 0, 0, 1115, 0, 850, 785, 812, 814,
	0, 809, 824, 825, 827, 0, 829, 0, 831, 832,
	794, 790, 791, 0, 98, 0, 850, 850, 97, 0,
	837, 108, 109, 110, 401, 163, 168, 0, 0, 0,
	173, 0, 175, 0, 383, 0, 265, 267, 0, 0,
	166, 330, 0, 330, 0, 323, 0, 384, 396, 0,
	1045, 1046, 0, 0, 345, 347, 0, 1151, 131, 0,
	0, 0, 526, 0, 535, 0, 0, 0, 0, 0,
	0, 155, 453, 567, 568, 569, 570, 571, 572, 573,
	574, 0, 348, 0, 0, 0, 348, 348, 348, 579,
	339, 0, 0, 563, 560, 470, 0, 193, 194, 196,
	0, 0, 472, 794, 1061, 1062, 1063, 0, 1073, 1077,
	124, 0, 0, 0, 0, 592, 593, 594, 93, 602,
	608, 715, 735, 865, 869, 0, 901, 996, 330, 999,
	1000, 1002, 1004, 1005, 1007, 1008, 902, 903, 0, 937,
	0, 939, 1039, 0, 1017, 0, 0, 951, 0, 0,
	933, 0, 0, 0, 0, 818, -2, 62, 1026, 1028,
	0, 1088, 1086, 1086, 1096, 1097, 0, 0, 1104, 0,
	0, 0, 0, 82, 0, 0, 0, 1124, 0, 0,
	0, 0, 99, 1030, 806, 813, 0, 0, 807, 0,
	808, 828, 830, 789, -2, 850, 850, 88, 89, 0,
	169, 0, 171, 186, 187, 0, 174, 176, 177, 264,
	266, 0, 0, 306, 317, 307, 0, 0, 397, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 794, 132, 133, 134,
	518, 0, 528, 0, 0, 0, 521, 0, 459, 0,
	0, 0, 348, 348, 348, 0, 0, 0, 0, 540,
	0, 548, 0, 0, 0, 197, 198, 0, 1072, 504,
	0, 122, 123, 0, 0, 509, 985, 997, 0, 0,
	0, 1014, 0, 0, 0, 0, 0, 847, 0, 0,
	0, 0, 838, 1028, 80, 0, 0, 1091, 0, 1084,
	1087, 1085, 1098, 0, 0, 1105, 0, 1107, 0, 1128,
	1129, 1122, 0, 1114, 1117, 1113, 1116, 1039, 810, 0,
	815, 1030, 87, 0, 172, 0, 0, 0, 321, 324,
	0, 0, 0, 519, 0, 531, 522, 0, 577, 0,
	581, 0, 0, 0, 584, 585, 586, 376, 564, 561,
	562, 471, 0, 125, 126, 0, 0, 0, 0, 0,
	0, 936, 938, 940, 949, 950, 994, 995, 0, 843,
	800, 801, 848, 849, 0, 0, 793, 79, 1029, 1027,
	1080, 0, 1089, 1090, 1099, 1100, 1106, 0, 1112, 0,
	85, 0, 1039, 170, 0, 180, 0, 527, 0, 530,
	520, 575, 576, 0, 588, 580, 582, 583, 1064, 0,
	0, 0, 511, 900, 0, 0, 0, 0, 842, 844,
	845, 1092, 1093, 1120, 1118, 811, 86, 377, 382, 1064,
	0, 0, 0, 501, 1066, 127, 128, 445, 446, 447,
	121, 986, 0, 989, 802, 803, 378, 379, 0, 164,
	181, 182, 0, 0, 185, 178, 179, 117, 0, 0,
	589, 0, 1067, 1068, 124, 987, 380, 0, 381, 0,
	0, 0, 183, 184, 536, 0, 0, 508, 0, 385,
	387, 388, 0, 0, 386, 524, 0, 536, 1065, 0,
	389, 390, 391, 537, 525, 988,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 125, 3, 3, 3, 151, 143, 3,
	83, 85, 148, 146, 84, 147, 200, 149, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 559,
	133, 132, 134, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 121, 3, 154,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 122, 123, 124, 126,
	127, 128, 129, 130, 131, 135, 136, 137, 138, 139,
	140, 141, 142, 144, 145, 150, 152, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:480
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:485
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:486
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:490
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:526
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:532
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:536
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:540
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:545
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:549
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:555
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:561
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:567
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:571
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:576
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:580
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:586
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:590
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:596
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:602
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:606
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:610
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:633
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:639
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:644
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:650
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:657
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:663
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:670
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:680
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:684
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:736
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:749
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:755
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:763
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:775
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:787
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:799
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:803
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:809
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:815
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:819
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:823
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:827
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:832
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:833
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:837
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:841
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:847
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:851
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:857
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:861
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:866
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:870
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:876
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:882
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:886
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:892
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:896
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:902
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:906
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:910
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:916
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:920
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:924
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:928
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:934
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:938
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:944
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:950
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:957
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:966
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:970
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:977
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:981
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:986
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:990
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1001
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1006
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1012
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1017
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1023
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1029
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1036
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1043
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1048
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1053
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1058
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1065
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1072
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1083
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1094
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1100
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1104
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1108
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1118
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1122
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1128
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1132
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1138
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1142
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1149
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1153
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1159
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1169
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1174
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1179
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1183
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1188
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1192
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1196
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1207
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1216
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1225
		{
			yyVAL.str = ""
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1229
		{
			yyVAL.str = ""
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1238
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1242
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1248
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1254
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1259
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1264
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1269
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1274
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1279
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1284
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1288
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1295
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1299
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1304
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1308
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1313
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1319
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1325
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1330
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1337
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1344
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1348
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1352
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1356
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1360
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1371
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1378
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1382
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1388
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1392
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1400
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1404
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1408
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1412
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1417
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1421
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1425
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1429
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1433
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			yyVAL.str = Armscii8Str
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1444
		{
			yyVAL.str = ASCIIStr
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1448
		{
			yyVAL.str = Big5Str
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1452
		{
			yyVAL.str = UBinaryStr
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1456
		{
			yyVAL.str = Cp1250Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.str = Cp1251Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = Cp1256Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = Cp1257Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.str = Cp850Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1476
		{
			yyVAL.str = Cp852Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1480
		{
			yyVAL.str = Cp866Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1484
		{
			yyVAL.str = Cp932Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = Dec8Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = EucjpmsStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = EuckrStr
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = Gb18030Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = Gb2312Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = GbkStr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = Geostd8Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = GreekStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = HebrewStr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = Hp8Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = Keybcs2Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = Koi8rStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = Koi8uStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = Latin1Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = Latin2Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = Latin5Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = Latin7Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = MacceStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = MacromanStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = SjisStr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = Swe7Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = Tis620Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = Ucs2Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = UjisStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = Utf16Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = Utf16leStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = Utf32Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = Utf8Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = Utf8mb4Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1610
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1614
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1618
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1625
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1629
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1633
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1639
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1643
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1647
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1651
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1658
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1662
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1666
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1670
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1676
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1687
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1754
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1772
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1776
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1784
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1790
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1794
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1798
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1802
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1806
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1810
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1814
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1892
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1897
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1901
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1906
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1910
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1918
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1922
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1928
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1936
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1940
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1944
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1949
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1953
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1958
		{
			yyVAL.str = ""
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1962
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1966
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1970
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1974
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1985
		{
			yyVAL.str = ""
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2000
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2009
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2015
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2025
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2029
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2034
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2038
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2044
		{
			yyVAL.str = ""
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2054
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2058
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2062
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2066
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2070
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2075
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2079
		{
			yyVAL.str = yyDollar[2].str
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2109
		{
			yyVAL.str = "key"
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.str = yyDollar[1].str
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2123
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2128
		{
			yyVAL.str = ""
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2132
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2138
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2142
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2148
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2152
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2158
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2162
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2168
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2172
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2178
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2184
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2188
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2192
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2196
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2200
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion(), OnDelete: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2209
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2215
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2221
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2227
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2233
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2237
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2241
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2245
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2249
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2254
		{
			yyVAL.str = ""
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2262
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2267
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2271
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2275
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2280
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2284
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2290
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2294
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2304
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2308
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2314
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2318
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2322
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2326
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2330
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2334
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2338
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2342
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2346
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2350
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2354
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2358
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2362
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2366
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2370
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2374
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2378
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2382
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2386
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2390
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2394
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2398
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2402
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2406
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2410
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2414
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2418
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2422
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2427
		{
			yyVAL.str = ""
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2431
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2435
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2454
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2458
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2467
		{
			yyVAL.str = ""
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2473
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2477
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2482
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2486
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2491
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2495
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2499
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2503
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2507
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2511
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2517
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2521
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2525
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2531
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2535
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2539
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2543
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2547
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2551
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2555
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2559
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2563
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2567
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2571
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2575
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2579
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2583
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2587
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2591
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2595
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2599
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2603
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2607
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2611
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2615
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2619
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2625
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2629
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2635
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2639
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2643
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2647
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2651
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2655
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2659
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2663
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2667
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2673
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2680
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2687
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2694
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2700
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2704
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2711
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2718
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2730
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2740
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2744
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2748
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2771
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2775
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2786
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2793
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2800
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2807
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2814
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2821
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2825
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2834
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2842
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2851
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2858
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2866
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2870
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2879
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2890
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2894
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2899
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2903
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2908
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2912
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2918
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2922
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2927
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2931
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2936
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2940
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2946
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2950
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2954
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2958
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2962
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2966
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2970
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2974
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2978
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2982
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2986
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2990
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2994
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2998
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3002
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3006
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3010
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3014
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3018
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3022
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3026
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3030
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3035
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3039
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3043
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3050
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3054
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3060
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3065
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3069
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3074
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3079
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3084
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3089
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3094
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3100
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3106
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3113
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3120
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3127
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3135
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3139
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3145
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3151
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3157
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3163
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3169
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3175
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3181
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3187
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3193
		{
			yyVAL.str = ""
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3197
		{
			yyVAL.str = ""
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3209
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3213
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 593:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3232
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3236
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3246
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3257
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3261
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3265
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3269
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3273
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3277
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3281
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3317
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3325
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3329
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3337
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3341
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3345
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3349
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3357
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3365
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3369
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3373
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3381
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3385
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3389
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3393
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3397
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3401
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3406
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3410
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3414
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3419
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3423
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3427
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3431
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3436
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3450
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3454
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3458
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3464
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3468
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3474
		{
			yyVAL.str = ""
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3478
		{
			yyVAL.str = "extended "
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3484
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3488
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3494
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3498
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3504
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3508
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3512
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3518
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3522
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3526
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3536
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3542
		{
			yyVAL.empty = struct{}{}
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3546
		{
			yyVAL.empty = struct{}{}
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3550
		{
			yyVAL.empty = struct{}{}
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3556
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3560
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3564
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3570
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3574
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3580
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3586
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3590
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3595
		{
			yyVAL.empty = struct{}{}
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3597
		{
			yyVAL.empty = struct{}{}
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3600
		{
			yyVAL.empty = struct{}{}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3602
		{
			yyVAL.empty = struct{}{}
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3607
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3613
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3618
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3622
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3626
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3630
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3634
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3638
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3644
		{
			yyVAL.str = yyDollar[1].str
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3648
		{
			yyVAL.str = yyDollar[1].str
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3652
		{
			yyVAL.str = yyDollar[1].str
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3658
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3662
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3666
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3670
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = ""
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3689
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3693
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3699
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3703
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3709
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3715
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3719
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3725
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3731
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3735
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3739
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3743
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3749
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3755
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3761
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3765
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3769
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3773
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3781
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3791
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3797
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3801
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3805
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3809
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3813
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3817
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3821
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3825
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3829
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3837
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3841
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3846
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3850
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3854
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3859
		{
			yyVAL.str = ""
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3863
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3868
		{
			setAllowComments(yylex, true)
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3872
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3878
		{
			yyVAL.strs = nil
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3882
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3888
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3892
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3896
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3901
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3905
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3909
		{
			yyVAL.str = SQLCacheStr
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3914
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3918
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3922
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: yyDollar[2].strs,
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3953
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3959
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3963
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3968
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3972
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3977
		{
			yyVAL.strs = nil
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3981
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3985
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3989
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3993
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3999
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4003
		{
			yyVAL.str = SQLCacheStr
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4007
		{
			yyVAL.str = DistinctStr
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4011
		{
			yyVAL.str = DistinctStr
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4015
		{
			yyVAL.str = StraightJoinHint
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4019
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4023
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4029
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4033
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4039
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4043
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4047
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4051
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4056
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4060
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4064
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4071
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4076
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4080
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4086
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4092
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4096
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4106
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4110
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4114
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4120
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4126
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4130
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4139
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4145
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4149
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4155
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4159
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4165
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4169
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4173
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4177
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4183
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4187
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4200
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4204
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4208
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4212
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4218
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4220
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4224
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4226
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4230
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4232
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4235
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4237
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4240
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4248
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4255
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4261
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4265
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4269
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4275
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4281
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4285
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4289
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4293
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4299
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4303
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4313
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4317
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4323
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4327
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4333
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4338
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4342
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4348
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4352
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 842:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4358
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4362
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4366
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4370
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4375
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4379
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4383
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4387
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4397
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4404
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4408
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4412
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4416
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4420
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4424
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4431
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4435
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4439
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4443
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4449
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4453
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4457
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4461
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4465
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4469
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4473
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4477
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4481
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4485
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4489
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4495
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4499
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4503
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4507
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4511
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4515
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4519
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4523
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4527
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4531
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4535
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4539
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4543
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4549
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4553
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4557
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4561
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4565
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4569
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4573
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4577
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4581
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4585
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4589
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4593
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4597
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4601
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4605
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4609
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4613
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4617
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4621
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4629
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4633
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4641
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4652
		{
			yyVAL.str = ""
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4656
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4662
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4666
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4673
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4677
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4681
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4685
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4691
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4695
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4699
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4703
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4707
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4711
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4715
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4721
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4725
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4729
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4736
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4742
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4746
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4756
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4760
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4764
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4768
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4778
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4782
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4786
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4790
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4794
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4798
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4802
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4806
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4810
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4814
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4825
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4829
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4835
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4839
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4844
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4848
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4852
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4856
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4860
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4866
		{
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4868
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4872
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4876
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4880
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4884
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4888
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4892
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4896
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4900
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4904
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4908
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4914
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4918
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4922
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4926
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4930
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4934
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4938
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4942
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4946
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4964
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4968
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4979
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4983
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4987
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4991
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4995
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5001
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5005
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5009
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5013
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5017
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5027
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5031
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5037
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5041
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5045
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5051
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5055
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5059
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5063
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5067
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5073
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5077
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5081
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5085
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5089
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5093
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5097
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5101
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5105
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5109
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5119
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5124
		{
			yyVAL.str = string("")
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5128
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5134
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5138
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5144
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5153
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5159
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5163
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5167
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5173
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5182
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5186
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5196
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5205
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5214
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5220
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5226
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5230
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5236
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5241
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5245
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5249
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5254
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5258
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5264
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5268
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5272
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5281
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5285
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5289
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5293
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5300
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5304
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5308
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5312
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5318
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5322
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5326
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5331
		{
			yyVAL.str = ""
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5335
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5339
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5343
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5348
		{
			yyVAL.str = ""
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5352
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5358
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5362
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5367
		{
			yyVAL.str = ""
		}
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5371
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5376
		{
			yyVAL.str = "cascaded"
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5380
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5384
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5393
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5399
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5405
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5411
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5420
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5424
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5429
		{
			yyVAL.str = ""
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5433
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5439
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5443
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5449
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5453
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5457
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5462
		{
			yyVAL.str = ""
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5466
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5470
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5475
		{
			yyVAL.str = ""
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5479
		{
			yyVAL.str = " header"
		}
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5484
		{
			yyVAL.str = ""
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5488
		{
			yyVAL.str = " manifest on"
		}
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5492
		{
			yyVAL.str = " manifest off"
		}
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5497
		{
			yyVAL.str = ""
		}
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5501
		{
			yyVAL.str = " overwrite on"
		}
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5505
		{
			yyVAL.str = " overwrite off"
		}
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5511
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5516
		{
			yyVAL.str = ""
		}
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5520
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5526
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5530
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5536
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5540
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5545
		{
			yyVAL.str = ""
		}
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5549
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5555
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5559
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5565
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5569
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5573
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5578
		{
			yyVAL.str = ""
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5582
		{
			yyVAL.str = " optionally"
		}
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5595
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5599
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5603
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5607
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5611
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5617
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5621
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5625
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5629
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5634
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5638
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5644
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5648
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5654
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5658
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5664
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5669
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5679
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5683
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5689
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5695
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5699
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5705
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5709
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5713
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5717
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5721
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5729
		{
			yyVAL.str = "charset"
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5739
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5743
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5747
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5756
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5758
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5761
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5763
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5766
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5768
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5771
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5773
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5776
		{
			yyVAL.empty = struct{}{}
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5778
		{
			yyVAL.empty = struct{}{}
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5780
		{
			yyVAL.empty = struct{}{}
		}
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5784
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5793
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5798
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5800
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5804
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5810
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5814
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5821
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5827
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5831
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5837
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5841
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5848
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6321
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6330
		{
			decNesting(yylex)
		}
	case 1623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6335
		{
			skipToEnd(yylex)
		}
	case 1624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6340
		{
			skipToEnd(yylex)
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6344
		{
			skipToEnd(yylex)
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6348
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
