// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const EMPTY_FROM_CLAUSE = 57465
const LOWER_THAN_CHARSET = 57466
const CHARSET = 57467
const UNIQUE = 57468
const KEY = 57469
const EXPRESSION_PREC_SETTER = 57470
const OR = 57471
const XOR = 57472
const AND = 57473
const NOT = 57474
const BETWEEN = 57475
const CASE = 57476
const WHEN = 57477
const THEN = 57478
const ELSE = 57479
const END = 57480
const LE = 57481
const GE = 57482
const NE = 57483
const NULL_SAFE_EQUAL = 57484
const IS = 57485
const LIKE = 57486
const REGEXP = 57487
const IN = 57488
const SHIFT_LEFT = 57489
const SHIFT_RIGHT = 57490
const DIV = 57491
const MOD = 57492
const UNARY = 57493
const COLLATE = 57494
const BINARY = 57495
const UNDERSCORE_ARMSCII8 = 57496
const UNDERSCORE_ASCII = 57497
const UNDERSCORE_BIG5 = 57498
const UNDERSCORE_BINARY = 57499
const UNDERSCORE_CP1250 = 57500
const UNDERSCORE_CP1251 = 57501
const UNDERSCORE_CP1256 = 57502
const UNDERSCORE_CP1257 = 57503
const UNDERSCORE_CP850 = 57504
const UNDERSCORE_CP852 = 57505
const UNDERSCORE_CP866 = 57506
const UNDERSCORE_CP932 = 57507
const UNDERSCORE_DEC8 = 57508
const UNDERSCORE_EUCJPMS = 57509
const UNDERSCORE_EUCKR = 57510
const UNDERSCORE_GB18030 = 57511
const UNDERSCORE_GB2312 = 57512
const UNDERSCORE_GBK = 57513
const UNDERSCORE_GEOSTD8 = 57514
const UNDERSCORE_GREEK = 57515
const UNDERSCORE_HEBREW = 57516
const UNDERSCORE_HP8 = 57517
const UNDERSCORE_KEYBCS2 = 57518
const UNDERSCORE_KOI8R = 57519
const UNDERSCORE_KOI8U = 57520
const UNDERSCORE_LATIN1 = 57521
const UNDERSCORE_LATIN2 = 57522
const UNDERSCORE_LATIN5 = 57523
const UNDERSCORE_LATIN7 = 57524
const UNDERSCORE_MACCE = 57525
const UNDERSCORE_MACROMAN = 57526
const UNDERSCORE_SJIS = 57527
const UNDERSCORE_SWE7 = 57528
const UNDERSCORE_TIS620 = 57529
const UNDERSCORE_UCS2 = 57530
const UNDERSCORE_UJIS = 57531
const UNDERSCORE_UTF16 = 57532
const UNDERSCORE_UTF16LE = 57533
const UNDERSCORE_UTF32 = 57534
const UNDERSCORE_UTF8 = 57535
const UNDERSCORE_UTF8MB4 = 57536
const INTERVAL = 57537
const JSON_EXTRACT_OP = 57538
const JSON_UNQUOTE_EXTRACT_OP = 57539
const CREATE = 57540
const ALTER = 57541
const DROP = 57542
const RENAME = 57543
const ANALYZE = 57544
const ADD = 57545
const FLUSH = 57546
const CHANGE = 57547
const MODIFY = 57548
const DEALLOCATE = 57549
const REVERT = 57550
const SCHEMA = 57551
const TABLE = 57552
const INDEX = 57553
const VIEW = 57554
const TO = 57555
const IGNORE = 57556
const IF = 57557
const PRIMARY = 57558
const COLUMN = 57559
const SPATIAL = 57560
const FULLTEXT = 57561
const KEY_BLOCK_SIZE = 57562
const CHECK = 57563
const INDEXES = 57564
const ACTION = 57565
const CASCADE = 57566
const CONSTRAINT = 57567
const FOREIGN = 57568
const NO = 57569
const REFERENCES = 57570
const RESTRICT = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const COALESCE = 57580
const EXCHANGE = 57581
const REBUILD = 57582
const PARTITIONING = 57583
const REMOVE = 57584
const PREPARE = 57585
const EXECUTE = 57586
const MAXVALUE = 57587
const PARTITION = 57588
const REORGANIZE = 57589
const LESS = 57590
const THAN = 57591
const PROCEDURE = 57592
const TRIGGER = 57593
const VINDEX = 57594
const VINDEXES = 57595
const DIRECTORY = 57596
const NAME = 57597
const UPGRADE = 57598
const STATUS = 57599
const VARIABLES = 57600
const WARNINGS = 57601
const CASCADED = 57602
const DEFINER = 57603
const OPTION = 57604
const SQL = 57605
const UNDEFINED = 57606
const SEQUENCE = 57607
const MERGE = 57608
const TEMPORARY = 57609
const TEMPTABLE = 57610
const INVOKER = 57611
const SECURITY = 57612
const FIRST = 57613
const AFTER = 57614
const LAST = 57615
const VITESS_MIGRATION = 57616
const CANCEL = 57617
const RETRY = 57618
const COMPLETE = 57619
const CLEANUP = 57620
const BEGIN = 57621
const START = 57622
const TRANSACTION = 57623
const COMMIT = 57624
const ROLLBACK = 57625
const SAVEPOINT = 57626
const RELEASE = 57627
const WORK = 57628
const BIT = 57629
const TINYINT = 57630
const SMALLINT = 57631
const MEDIUMINT = 57632
const INT = 57633
const INTEGER = 57634
const BIGINT = 57635
const INTNUM = 57636
const REAL = 57637
const DOUBLE = 57638
const FLOAT_TYPE = 57639
const DECIMAL_TYPE = 57640
const NUMERIC = 57641
const TIME = 57642
const TIMESTAMP = 57643
const DATETIME = 57644
const YEAR = 57645
const CHAR = 57646
const VARCHAR = 57647
const BOOL = 57648
const CHARACTER = 57649
const VARBINARY = 57650
const NCHAR = 57651
const TEXT = 57652
const TINYTEXT = 57653
const MEDIUMTEXT = 57654
const LONGTEXT = 57655
const BLOB = 57656
const TINYBLOB = 57657
const MEDIUMBLOB = 57658
const LONGBLOB = 57659
const JSON = 57660
const JSON_SCHEMA_VALID = 57661
const JSON_SCHEMA_VALIDATION_REPORT = 57662
const ENUM = 57663
const GEOMETRY = 57664
const POINT = 57665
const LINESTRING = 57666
const POLYGON = 57667
const GEOMETRYCOLLECTION = 57668
const MULTIPOINT = 57669
const MULTILINESTRING = 57670
const MULTIPOLYGON = 57671
const ASCII = 57672
const UNICODE = 57673
const NULLX = 57674
const AUTO_INCREMENT = 57675
const APPROXNUM = 57676
const SIGNED = 57677
const UNSIGNED = 57678
const ZEROFILL = 57679
const CODE = 57680
const COLLATION = 57681
const COLUMNS = 57682
const DATABASES = 57683
const ENGINES = 57684
const EVENT = 57685
const EXTENDED = 57686
const FIELDS = 57687
const FULL = 57688
const FUNCTION = 57689
const GTID_EXECUTED = 57690
const KEYSPACES = 57691
const OPEN = 57692
const PLUGINS = 57693
const PRIVILEGES = 57694
const PROCESSLIST = 57695
const SCHEMAS = 57696
const TABLES = 57697
const TRIGGERS = 57698
const USER = 57699
const VGTID_EXECUTED = 57700
const VITESS_KEYSPACES = 57701
const VITESS_METADATA = 57702
const VITESS_MIGRATIONS = 57703
const VITESS_REPLICATION_STATUS = 57704
const VITESS_SHARDS = 57705
const VITESS_TABLETS = 57706
const VSCHEMA = 57707
const NAMES = 57708
const GLOBAL = 57709
const SESSION = 57710
const ISOLATION = 57711
const LEVEL = 57712
const READ = 57713
const WRITE = 57714
const ONLY = 57715
const REPEATABLE = 57716
const COMMITTED = 57717
const UNCOMMITTED = 57718
const SERIALIZABLE = 57719
const CURRENT_TIMESTAMP = 57720
const DATABASE = 57721
const CURRENT_DATE = 57722
const NOW = 57723
const CURRENT_TIME = 57724
const LOCALTIME = 57725
const LOCALTIMESTAMP = 57726
const CURRENT_USER = 57727
const UTC_DATE = 57728
const UTC_TIME = 57729
const UTC_TIMESTAMP = 57730
const DAY = 57731
const DAY_HOUR = 57732
const DAY_MICROSECOND = 57733
const DAY_MINUTE = 57734
const DAY_SECOND = 57735
const HOUR = 57736
const HOUR_MICROSECOND = 57737
const HOUR_MINUTE = 57738
const HOUR_SECOND = 57739
const MICROSECOND = 57740
const MINUTE = 57741
const MINUTE_MICROSECOND = 57742
const MINUTE_SECOND = 57743
const MONTH = 57744
const QUARTER = 57745
const SECOND = 57746
const SECOND_MICROSECOND = 57747
const YEAR_MONTH = 57748
const WEEK = 57749
const REPLACE = 57750
const CONVERT = 57751
const CAST = 57752
const SUBSTR = 57753
const SUBSTRING = 57754
const GROUP_CONCAT = 57755
const SEPARATOR = 57756
const TIMESTAMPADD = 57757
const TIMESTAMPDIFF = 57758
const WEIGHT_STRING = 57759
const JSON_ARRAY = 57760
const JSON_OBJECT = 57761
const JSON_QUOTE = 57762
const JSON_DEPTH = 57763
const JSON_TYPE = 57764
const JSON_LENGTH = 57765
const JSON_VALID = 57766
const JSON_ARRAY_APPEND = 57767
const JSON_ARRAY_INSERT = 57768
const JSON_INSERT = 57769
const JSON_MERGE = 57770
const JSON_MERGE_PATCH = 57771
const JSON_MERGE_PRESERVE = 57772
const JSON_REMOVE = 57773
const JSON_REPLACE = 57774
const JSON_SET = 57775
const JSON_UNQUOTE = 57776
const MATCH = 57777
const AGAINST = 57778
const BOOLEAN = 57779
const LANGUAGE = 57780
const WITH = 57781
const QUERY = 57782
const EXPANSION = 57783
const WITHOUT = 57784
const VALIDATION = 57785
const UNUSED = 57786
const ARRAY = 57787
const CUME_DIST = 57788
const DESCRIPTION = 57789
const DENSE_RANK = 57790
const EMPTY = 57791
const EXCEPT = 57792
const FIRST_VALUE = 57793
const GROUPING = 57794
const GROUPS = 57795
const JSON_TABLE = 57796
const LAG = 57797
const LAST_VALUE = 57798
const LATERAL = 57799
const LEAD = 57800
const NTH_VALUE = 57801
const NTILE = 57802
const OF = 57803
const OVER = 57804
const PERCENT_RANK = 57805
const RANK = 57806
const RECURSIVE = 57807
const ROW_NUMBER = 57808
const SYSTEM = 57809
const WINDOW = 57810
const ACTIVE = 57811
const ADMIN = 57812
const AUTOEXTEND_SIZE = 57813
const BUCKETS = 57814
const CLONE = 57815
const COLUMN_FORMAT = 57816
const COMPONENT = 57817
const DEFINITION = 57818
const ENFORCED = 57819
const ENGINE_ATTRIBUTE = 57820
const EXCLUDE = 57821
const FOLLOWING = 57822
const GEOMCOLLECTION = 57823
const GET_MASTER_PUBLIC_KEY = 57824
const HISTOGRAM = 57825
const HISTORY = 57826
const INACTIVE = 57827
const INVISIBLE = 57828
const LOCKED = 57829
const MASTER_COMPRESSION_ALGORITHMS = 57830
const MASTER_PUBLIC_KEY_PATH = 57831
const MASTER_TLS_CIPHERSUITES = 57832
const MASTER_ZSTD_COMPRESSION_LEVEL = 57833
const NESTED = 57834
const NETWORK_NAMESPACE = 57835
const NOWAIT = 57836
const NULLS = 57837
const OJ = 57838
const OLD = 57839
const OPTIONAL = 57840
const ORDINALITY = 57841
const ORGANIZATION = 57842
const OTHERS = 57843
const PARTIAL = 57844
const PATH = 57845
const PERSIST = 57846
const PERSIST_ONLY = 57847
const PRECEDING = 57848
const PRIVILEGE_CHECKS_USER = 57849
const PROCESS = 57850
const RANDOM = 57851
const REFERENCE = 57852
const REQUIRE_ROW_FORMAT = 57853
const RESOURCE = 57854
const RESPECT = 57855
const RESTART = 57856
const RETAIN = 57857
const REUSE = 57858
const ROLE = 57859
const SECONDARY = 57860
const SECONDARY_ENGINE = 57861
const SECONDARY_ENGINE_ATTRIBUTE = 57862
const SECONDARY_LOAD = 57863
const SECONDARY_UNLOAD = 57864
const SIMPLE = 57865
const SKIP = 57866
const SRID = 57867
const THREAD_PRIORITY = 57868
const TIES = 57869
const UNBOUNDED = 57870
const VCPU = 57871
const VISIBLE = 57872
const RETURNING = 57873
const FORMAT = 57874
const TREE = 57875
const VITESS = 57876
const TRADITIONAL = 57877
const LOCAL = 57878
const LOW_PRIORITY = 57879
const NO_WRITE_TO_BINLOG = 57880
const LOGS = 57881
const ERROR = 57882
const GENERAL = 57883
const HOSTS = 57884
const OPTIMIZER_COSTS = 57885
const USER_RESOURCES = 57886
const SLOW = 57887
const CHANNEL = 57888
const RELAY = 57889
const EXPORT = 57890
const AVG_ROW_LENGTH = 57891
const CONNECTION = 57892
const CHECKSUM = 57893
const DELAY_KEY_WRITE = 57894
const ENCRYPTION = 57895
const ENGINE = 57896
const INSERT_METHOD = 57897
const MAX_ROWS = 57898
const MIN_ROWS = 57899
const PACK_KEYS = 57900
const PASSWORD = 57901
const FIXED = 57902
const DYNAMIC = 57903
const COMPRESSED = 57904
const REDUNDANT = 57905
const COMPACT = 57906
const ROW_FORMAT = 57907
const STATS_AUTO_RECALC = 57908
const STATS_PERSISTENT = 57909
const STATS_SAMPLE_PAGES = 57910
const STORAGE = 57911
const MEMORY = 57912
const DISK = 57913
const PARTITIONS = 57914
const LINEAR = 57915
const RANGE = 57916
const LIST = 57917
const SUBPARTITION = 57918
const SUBPARTITIONS = 57919
const HASH = 57920

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	596, 145,
	-2, 153,
	-1, 48,
	128, 153,
	168, 153,
	324, 153,
	-2, 486,
	-1, 55,
	35, 717,
	228, 717,
	239, 717,
	274, 731,
	275, 731,
	-2, 719,
	-1, 60,
	230, 742,
	-2, 740,
	-1, 114,
	227, 1257,
	-2, 119,
	-1, 116,
	1, 146,
	596, 146,
	-2, 153,
	-1, 127,
	129, 377,
	233, 377,
	-2, 480,
	-1, 146,
	128, 153,
	168, 153,
	324, 153,
	-2, 495,
	-1, 680,
	212, 1278,
	-2, 1274,
	-1, 681,
	212, 1279,
	-2, 1275,
	-1, 755,
	59, 810,
	-2, 825,
	-1, 792,
	144, 1677,
	-2, 112,
	-1, 793,
	144, 1522,
	-2, 113,
	-1, 799,
	144, 1604,
	-2, 1251,
	-1, 944,
	144, 1451,
	-2, 1248,
	-1, 985,
	238, 41,
	243, 41,
	-2, 388,
	-1, 1068,
	1, 537,
	596, 537,
	-2, 153,
	-1, 1301,
	59, 811,
	-2, 830,
	-1, 1302,
	59, 812,
	-2, 831,
	-1, 1355,
	128, 153,
	168, 153,
	324, 153,
	-2, 427,
	-1, 1434,
	129, 377,
	233, 377,
	-2, 480,
	-1, 1443,
	238, 42,
	243, 42,
	-2, 389,
	-1, 1739,
	212, 1283,
	-2, 1277,
	-1, 1821,
	128, 153,
	168, 153,
	324, 153,
	-2, 428,
	-1, 1828,
	25, 174,
	-2, 176,
	-1, 2066,
	86, 39,
	-2, 866,
	-1, 2117,
	77, 94,
	86, 94,
	-2, 886,
	-1, 2184,
	571, 645,
	-2, 619,
	-1, 2316,
	49, 1219,
	-2, 1213,
	-1, 2529,
	86, 39,
	-2, 867,
	-1, 2567,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 859,
	-1, 2839,
	571, 645,
	-2, 633,
	-1, 2897,
	22, 1606,
	32, 1606,
	169, 1606,
	250, 1606,
	304, 1606,
	305, 1606,
	306, 1606,
	307, 1606,
	308, 1606,
	309, 1606,
	310, 1606,
	312, 1606,
	313, 1606,
	314, 1606,
	315, 1606,
	316, 1606,
	317, 1606,
	318, 1606,
	319, 1606,
	320, 1606,
	321, 1606,
	322, 1606,
	323, 1606,
	325, 1606,
	327, 1606,
	328, 1606,
	329, 1606,
	330, 1606,
	331, 1606,
	332, 1606,
	333, 1606,
	334, 1606,
	335, 1606,
	338, 1606,
	339, 1606,
	340, 1606,
	341, 1606,
	342, 1606,
	343, 1606,
	344, 1606,
	345, 1606,
	346, 1606,
	454, 1606,
	-2, 577,
}

const yyPrivate = 57344

const yyLast = 42178

var yyAct = [...]int{
	680, 689, 2665, 2666, 2820, 682, 2664, 2951, 2959, 2927,
	2895, 2928, 1358, 2642, 2275, 2462, 2879, 1818, 2368, 2375,
	1753, 2773, 2425, 1773, 2020, 2629, 673, 37, 2430, 2427,
	2426, 2424, 2429, 2428, 2327, 1755, 2416, 1132, 605, 96,
	3, 674, 748, 2330, 2445, 1888, 1316, 1280, 2679, 2444,
	2383, 186, 2054, 601, 186, 2796, 565, 186, 770, 2331,
	2328, 2684, 581, 2538, 186, 2089, 2239, 683, 2532, 2273,
	671, 1792, 186, 598, 672, 627, 2447, 2112, 2325, 2274,
	2558, 2317, 1777, 2081, 2524, 1080, 1851, 186, 599, 2149,
	2181, 1876, 1856, 2222, 2150, 771, 1919, 2151, 597, 1412,
	155, 947, 797, 2101, 752, 1807, 756, 36, 2073, 581,
	1796, 38, 581, 186, 581, 593, 750, 993, 1303, 1733,
	1656, 1459, 2056, 1646, 773, 1797, 1709, 1897, 141, 1875,
	1858, 1784, 1109, 95, 2143, 975, 1347, 1708, 1933, 980,
	2119, 1325, 610, 1799, 1283, 1555, 794, 1668, 1623, 1441,
	1151, 91, 1604, 1448, 954, 1551, 983, 1873, 1537, 951,
	986, 955, 981, 982, 1346, 1847, 1778, 1344, 1330, 1125,
	1407, 762, 1705, 1130, 119, 117, 1560, 118, 1433, 1064,
	784, 760, 124, 125, 159, 1017, 76, 757, 85, 98,
	97, 758, 1746, 588, 1222, 1218, 89, 2829, 2952, 1890,
	1891, 1892, 2174, 2630, 2413, 1890, 2201, 2200, 1931, 2435,
	2172, 759, 77, 1152, 8, 7, 6, 2586, 2622, 2230,
	2231, 1522, 538, 778, 2669, 783, 2669, 126, 2852, 90,
	568, 2853, 120, 188, 189, 190, 2435, 1750, 1751, 1611,
	1610, 1609, 764, 1608, 1607, 1152, 997, 1022, 1606, 2432,
	1593, 948, 591, 1598, 592, 2916, 2052, 2313, 2512, 589,
	2968, 959, 2083, 2926, 751, 1736, 2433, 749, 2942, 2195,
	973, 2931, 1031, 1867, 964, 798, 791, 87, 1616, 2769,
	1310, 2768, 1021, 1921, 765, 996, 772, 972, 2439, 1020,
	2967, 971, 970, 2433, 969, 2635, 2889, 1861, 2636, 2955,
	78, 120, 2848, 80, 1023, 1025, 1026, 2940, 2668, 2643,
	2668, 78, 2880, 1916, 2888, 2439, 2238, 2900, 1162, 2853,
	2496, 2847, 1422, 2365, 2366, 78, 1037, 1971, 2209, 1019,
	2128, 102, 2208, 2127, 1813, 1814, 2129, 1348, 2053, 1349,
	2364, 2229, 1034, 1035, 1036, 1968, 1039, 1040, 1041, 1042,
	1162, 1812, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 120,
	78, 1128, 104, 105, 2697, 108, 1099, 87, 114, 742,
	741, 183, 2821, 2140, 533, 188, 189, 190, 87, 2265,
	1100, 1969, 1087, 2436, 2092, 2371, 1093, 1088, 568, 2175,
	1831, 1830, 87, 1752, 744, 745, 746, 747, 2905, 2535,
	755, 1067, 1116, 1158, 1118, 2464, 1150, 1104, 1105, 2093,
	2436, 2487, 2903, 2485, 568, 568, 569, 2932, 579, 1597,
	583, 2909, 2910, 1860, 577, 1287, 2385, 2386, 786, 787,
	2372, 1087, 2182, 2904, 1543, 1158, 1088, 87, 2933, 1898,
	2204, 1939, 1115, 1117, 1086, 568, 1085, 1512, 1063, 1184,
	1945, 1942, 1944, 1943, 963, 2374, 555, 965, 1599, 1600,
	1601, 1101, 1947, 1127, 1948, 1538, 1949, 1094, 1934, 2369,
	2778, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1192,
	1194, 1195, 1122, 2385, 2386, 1038, 2465, 2457, 2217, 1108,
	2370, 1513, 2954, 1514, 1069, 2458, 1940, 2624, 1106, 1102,
	1103, 1938, 554, 2623, 968, 1950, 1073, 1074, 1107, 1006,
	1044, 1043, 2466, 1936, 552, 2753, 976, 87, 2620, 1004,
	977, 2917, 2376, 186, 1901, 186, 1793, 977, 186, 1015,
	2384, 2266, 1014, 1013, 1012, 1113, 1011, 1426, 1076, 1114,
	1010, 1016, 2387, 1937, 1009, 1290, 1120, 968, 1062, 1119,
	1196, 968, 1008, 960, 549, 1003, 581, 581, 581, 1969,
	962, 961, 966, 563, 2387, 2963, 952, 2221, 952, 2969,
	950, 1112, 988, 989, 581, 581, 1024, 2938, 560, 952,
	988, 1552, 2057, 2059, 569, 1874, 1447, 2384, 785, 2218,
	1157, 1154, 1155, 1156, 1161, 1163, 1160, 1196, 1159, 2387,
	1925, 1097, 37, 1548, 1033, 1153, 1138, 1779, 1780, 966,
	569, 569, 1066, 1027, 2406, 1083, 1144, 1089, 1090, 1091,
	1092, 2203, 1157, 1154, 1155, 1156, 1161, 1163, 1160, 2619,
	1159, 1920, 2206, 2234, 1544, 1420, 995, 1153, 1419, 1418,
	1129, 569, 1864, 539, 2192, 541, 556, 1549, 571, 1007,
	570, 545, 2828, 543, 547, 557, 548, 2173, 542, 1005,
	553, 2176, 974, 544, 558, 559, 561, 575, 574, 562,
	1416, 551, 572, 537, 967, 2536, 532, 1197, 1198, 1542,
	1983, 1865, 1123, 2817, 2240, 1199, 1200, 1201, 1202, 1863,
	1446, 1121, 2846, 2216, 2834, 1207, 2215, 1210, 995, 1918,
	2573, 2554, 2124, 1065, 2373, 2088, 2044, 81, 1278, 995,
	1745, 1334, 1259, 1078, 2224, 116, 1819, 967, 1273, 2223,
	1196, 967, 2224, 1866, 1195, 2363, 1110, 2223, 2437, 2438,
	1134, 1135, 186, 1862, 994, 767, 581, 581, 86, 2058,
	2667, 2441, 2667, 1561, 1126, 1203, 111, 1669, 2842, 86,
	1018, 1970, 186, 2584, 2585, 2437, 2438, 1524, 1523, 1525,
	1526, 1527, 1082, 86, 2615, 2242, 1293, 2548, 2441, 1935,
	1297, 581, 2779, 995, 2961, 186, 752, 2962, 1545, 2960,
	581, 750, 1296, 1350, 1294, 1072, 581, 77, 1148, 1279,
	1147, 1145, 1146, 1084, 1096, 2258, 994, 1291, 1075, 1669,
	2908, 1997, 988, 991, 992, 1098, 952, 994, 86, 1032,
	985, 989, 1220, 112, 1221, 1224, 1698, 794, 1539, 2165,
	1540, 1166, 1167, 1541, 1167, 2693, 2591, 2252, 2251, 2250,
	2244, 984, 2248, 2590, 2243, 1905, 2241, 1456, 1295, 1628,
	573, 2246, 95, 1455, 2907, 2377, 1445, 1915, 1913, 2381,
	2245, 1279, 995, 1629, 1630, 1627, 1910, 2380, 566, 1006,
	1265, 1266, 1267, 1268, 1269, 995, 1111, 2247, 2249, 1004,
	2934, 994, 2574, 567, 1335, 1284, 87, 988, 991, 992,
	1345, 952, 2965, 1562, 1917, 985, 989, 2858, 1910, 2810,
	1626, 2382, 2761, 1914, 2760, 2970, 2378, 2751, 98, 1081,
	1068, 2379, 1690, 1679, 1680, 1681, 1682, 1692, 1683, 1684,
	1685, 1697, 1693, 1686, 1687, 1694, 1695, 1696, 1688, 1689,
	1691, 1618, 1620, 1621, 1281, 1912, 2658, 1310, 1292, 2859,
	2657, 2811, 749, 1315, 1673, 1168, 751, 186, 1674, 2598,
	1312, 1408, 1619, 188, 189, 190, 798, 1648, 2597, 2935,
	994, 1417, 1975, 1976, 1977, 998, 988, 1340, 1341, 1168,
	1000, 2587, 2414, 994, 1001, 999, 1168, 2402, 998, 988,
	694, 695, 696, 1000, 581, 2147, 1443, 1001, 999, 2971,
	2146, 1870, 1785, 1786, 1452, 1002, 1533, 2006, 1454, 789,
	1517, 1457, 1458, 581, 581, 1516, 581, 1515, 581, 581,
	1505, 581, 581, 581, 581, 581, 581, 1188, 1189, 1190,
	1191, 1193, 1192, 1194, 1195, 1488, 1499, 581, 1184, 1496,
	2233, 186, 1493, 1532, 1649, 1453, 1185, 1186, 1187, 1188,
	1189, 1190, 1191, 1193, 1192, 1194, 1195, 1495, 186, 1494,
	1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1192, 1194,
	1195, 581, 1487, 186, 1489, 1190, 1191, 1193, 1192, 1194,
	1195, 1468, 2837, 1165, 1550, 1166, 1167, 581, 1530, 186,
	2836, 2814, 2260, 1507, 2813, 1439, 1298, 1172, 1173, 1174,
	1175, 1176, 1177, 1178, 1170, 186, 1531, 1165, 2812, 1166,
	1167, 1319, 186, 2461, 1165, 2756, 1166, 1167, 1432, 1449,
	1449, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	581, 581, 581, 2741, 2740, 1461, 2692, 1462, 1490, 1464,
	1466, 2690, 2654, 1470, 1472, 1474, 1476, 1478, 1415, 1519,
	2595, 1529, 2580, 1451, 1184, 2405, 1450, 1180, 2404, 1181,
	1320, 186, 2156, 1168, 2144, 1275, 1442, 1429, 1423, 1424,
	1425, 1430, 1428, 1182, 1183, 1179, 1185, 1186, 1187, 1188,
	1189, 1190, 1191, 1193, 1192, 1194, 1195, 1929, 1928, 1565,
	1776, 1557, 1758, 188, 189, 190, 1569, 2581, 1571, 1572,
	1573, 1574, 1594, 1558, 1491, 1578, 1168, 1647, 1528, 1653,
	1653, 1520, 1518, 1651, 1651, 1168, 188, 189, 190, 1592,
	1659, 581, 1650, 1654, 2493, 1510, 1506, 1502, 1563, 1564,
	1168, 1624, 1501, 1497, 1498, 1500, 581, 581, 1168, 1503,
	1504, 1553, 1568, 1168, 1321, 2789, 1310, 1168, 1124, 1575,
	1576, 1577, 1137, 971, 970, 1310, 969, 1993, 188, 189,
	190, 94, 2131, 120, 2786, 1631, 1670, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1622, 1632, 1567, 188, 189, 190, 1184, 1886, 1982, 1310,
	2785, 1165, 1706, 1166, 1167, 2745, 186, 2491, 1310, 2079,
	2953, 581, 1591, 1588, 1589, 1590, 1421, 1737, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1193, 1192, 1194, 1195, 1310,
	2029, 1310, 101, 2922, 1310, 186, 2936, 2744, 581, 1992,
	2079, 2886, 1625, 100, 1165, 99, 1166, 1167, 186, 2079,
	2866, 2641, 581, 1165, 1706, 1166, 1167, 186, 2358, 186,
	2090, 186, 186, 581, 2326, 1168, 581, 1969, 1165, 92,
	1166, 1167, 2090, 1763, 2547, 1764, 1165, 581, 1166, 1167,
	93, 1165, 1739, 1166, 1167, 1165, 2183, 1166, 1167, 188,
	189, 190, 1737, 1884, 95, 2161, 1828, 2079, 2862, 1911,
	794, 1741, 1742, 794, 188, 189, 190, 1168, 1882, 2854,
	1310, 1827, 1310, 95, 1186, 1187, 1188, 1189, 1190, 1191,
	1193, 1192, 1194, 1195, 1168, 1738, 92, 2079, 2830, 2633,
	2827, 2098, 581, 94, 1310, 2508, 1310, 93, 1795, 1877,
	1878, 1879, 1769, 2547, 1881, 1883, 1885, 2021, 2764, 1310,
	2079, 2752, 2633, 1310, 2079, 2631, 1910, 1739, 2547, 581,
	1910, 1310, 2552, 1310, 2120, 581, 1452, 1164, 1310, 1452,
	2549, 1452, 1837, 1838, 1839, 1840, 1822, 1909, 1823, 1757,
	1988, 2014, 1310, 1832, 764, 1833, 1834, 1835, 1836, 1987,
	1655, 1310, 1164, 1165, 2841, 1166, 1167, 1661, 1662, 1168,
	1790, 1843, 1844, 1845, 1846, 1899, 1771, 2825, 2079, 1168,
	581, 2097, 1647, 1853, 1805, 1168, 1826, 2098, 1647, 1647,
	1788, 2508, 1859, 1168, 2395, 2394, 1323, 2121, 1810, 798,
	1809, 1168, 798, 2391, 2392, 1165, 2123, 1166, 1167, 1825,
	1824, 2391, 2390, 2393, 1986, 1168, 1740, 2098, 1310, 1743,
	1744, 1168, 1165, 2301, 1166, 1167, 186, 1984, 1310, 1811,
	1896, 1984, 1168, 186, 1869, 2098, 1168, 2014, 186, 186,
	1168, 2003, 186, 2002, 186, 997, 1168, 2075, 1184, 1969,
	2202, 186, 1310, 1168, 2120, 1449, 1768, 1854, 186, 1849,
	1850, 1322, 94, 1868, 1872, 1411, 2186, 2913, 2749, 1880,
	1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1192, 1194,
	1195, 1922, 100, 2568, 996, 1904, 186, 581, 1907, 1903,
	1908, 1906, 1854, 1902, 2179, 2180, 1910, 1165, 2616, 1166,
	1167, 2079, 2078, 2510, 1168, 1924, 2599, 1165, 1923, 1166,
	1167, 1926, 1927, 1165, 2506, 1166, 1167, 2121, 2499, 1984,
	1893, 1165, 2498, 1166, 1167, 1783, 1969, 1314, 2038, 1165,
	1748, 1166, 1167, 1411, 1410, 754, 2148, 1168, 1602, 1960,
	1961, 1356, 1355, 1165, 1963, 1166, 1167, 1547, 1168, 1165,
	1984, 1166, 1167, 1964, 1483, 1342, 2600, 2601, 2602, 1624,
	1165, 2869, 1166, 1167, 1165, 979, 1166, 1167, 1165, 101,
	1166, 1167, 1168, 978, 1165, 87, 1166, 1167, 1932, 2775,
	100, 1165, 99, 1166, 1167, 2948, 2037, 1317, 2742, 2704,
	2614, 94, 1979, 2611, 1981, 1953, 2593, 2502, 1168, 681,
	2501, 1413, 1852, 1168, 1484, 1485, 1486, 2459, 1980, 1168,
	2419, 2415, 87, 2187, 1168, 1848, 1842, 1841, 2463, 2036,
	1535, 1444, 1168, 1440, 1409, 113, 2417, 2153, 1067, 2776,
	2035, 1867, 1165, 1761, 1166, 1167, 2152, 1168, 2919, 186,
	2603, 2946, 1480, 1967, 2565, 1168, 2929, 186, 2851, 1310,
	187, 1653, 581, 187, 2034, 1651, 187, 2794, 581, 2562,
	1625, 582, 2411, 187, 2063, 1165, 1978, 1166, 1167, 581,
	2564, 187, 1168, 2050, 2410, 2067, 1165, 2409, 1166, 1167,
	2033, 2345, 2061, 2153, 2326, 2032, 187, 2604, 2605, 1481,
	1482, 2031, 186, 182, 2344, 186, 2030, 2559, 2560, 2166,
	1165, 1954, 1166, 1167, 2024, 1996, 1595, 2887, 582, 37,
	2130, 582, 187, 582, 1775, 2348, 2346, 121, 2114, 2023,
	2349, 2347, 2350, 2094, 2107, 2108, 1165, 2022, 1166, 1167,
	164, 1165, 1318, 1166, 1167, 1168, 1767, 1165, 1739, 1166,
	1167, 1168, 1165, 2809, 1166, 1167, 2318, 2320, 2553, 2080,
	1165, 2306, 1166, 1167, 2019, 2321, 2683, 2305, 581, 2685,
	2543, 2674, 2540, 2673, 186, 1165, 768, 1166, 1167, 2315,
	2539, 186, 2133, 1165, 769, 1166, 1167, 1168, 2076, 1546,
	740, 1738, 1284, 2051, 2389, 581, 2138, 161, 2157, 162,
	1665, 1029, 581, 1028, 2473, 2152, 1452, 1452, 1168, 2113,
	1165, 581, 1166, 1167, 1666, 2077, 2141, 2142, 2178, 181,
	2072, 2672, 2134, 2227, 92, 2087, 2199, 2018, 1136, 2194,
	1994, 94, 92, 2017, 1168, 93, 2193, 186, 186, 186,
	186, 186, 2198, 93, 121, 2545, 94, 2122, 2125, 1859,
	2957, 1308, 1304, 2407, 186, 186, 2132, 2118, 2103, 2106,
	2107, 2108, 2104, 2135, 2105, 2109, 1305, 1785, 1786, 2015,
	186, 1957, 101, 1165, 2826, 1166, 1167, 2145, 2771, 1165,
	2388, 1166, 1167, 100, 2111, 99, 1772, 1946, 2154, 1647,
	2011, 1765, 1766, 1307, 94, 1306, 776, 777, 2304, 2525,
	2041, 2042, 1973, 2162, 100, 99, 2303, 2167, 2168, 2169,
	2801, 2163, 2800, 2691, 2197, 1165, 2010, 1166, 1167, 2689,
	2688, 1653, 1432, 1653, 165, 1651, 1653, 1651, 2681, 101,
	1651, 1653, 2612, 171, 750, 1651, 1165, 2257, 1166, 1167,
	100, 2090, 99, 2544, 2542, 581, 2155, 2420, 1894, 1427,
	2196, 2158, 2159, 775, 2253, 2188, 2189, 2680, 2276, 101,
	2276, 581, 1165, 2276, 1166, 1167, 2949, 2533, 2276, 2075,
	100, 2004, 2236, 1308, 1304, 1759, 186, 2950, 2949, 2950,
	581, 2235, 2295, 2288, 2289, 2290, 2291, 1336, 1305, 581,
	1327, 2278, 2225, 106, 107, 2226, 581, 581, 2815, 186,
	186, 186, 186, 186, 2281, 2237, 2219, 2579, 766, 2282,
	103, 186, 2254, 1301, 1302, 1307, 186, 1306, 186, 88,
	186, 1, 756, 186, 186, 186, 2295, 2583, 2902, 550,
	1749, 2329, 2338, 1282, 564, 2332, 2329, 2930, 2357, 2308,
	2898, 2269, 1297, 2899, 1521, 1511, 156, 2644, 2323, 1707,
	2772, 2423, 1900, 2309, 2610, 1857, 987, 146, 2403, 1820,
	1821, 2882, 110, 2294, 945, 109, 990, 186, 2283, 2284,
	2285, 2286, 2287, 1095, 1895, 2297, 2298, 2299, 2296, 2634,
	581, 2307, 2300, 2139, 1829, 1362, 1360, 1361, 581, 1359,
	1364, 1363, 2005, 186, 2511, 2310, 1596, 2359, 578, 2110,
	2360, 184, 1351, 757, 186, 1328, 1030, 758, 540, 2339,
	95, 2443, 2342, 2351, 2396, 1930, 546, 1208, 2337, 186,
	2302, 2422, 186, 2355, 2126, 2340, 2341, 1557, 2343, 2361,
	795, 788, 2474, 1760, 2367, 2065, 2334, 2537, 2314, 2316,
	2082, 2319, 187, 2312, 187, 2397, 2399, 187, 2398, 2103,
	2106, 2107, 2108, 2104, 2808, 2105, 2109, 2682, 2867, 2559,
	2560, 2136, 1324, 1995, 1215, 2451, 1667, 1800, 1617, 2450,
	603, 602, 600, 2068, 2091, 582, 582, 582, 1859, 2442,
	1171, 2421, 684, 2055, 157, 1337, 2102, 2454, 2100, 2099,
	1955, 169, 1806, 582, 582, 2561, 2505, 2557, 2894, 1802,
	1798, 2074, 581, 186, 611, 604, 596, 2576, 2449, 2205,
	2469, 2471, 2472, 2468, 2460, 2207, 2137, 2456, 1149, 1300,
	590, 958, 1664, 2477, 2777, 2832, 1972, 2495, 1299, 1677,
	1678, 2483, 2476, 177, 2839, 2431, 2628, 2412, 2400, 2401,
	2480, 2481, 2184, 2482, 1887, 63, 2484, 41, 2486, 585,
	2488, 2915, 1140, 782, 32, 31, 30, 29, 28, 186,
	23, 22, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 2531, 21, 20, 19, 2582, 176, 178,
	179, 180, 25, 2526, 2527, 18, 17, 16, 186, 2434,
	2925, 2956, 115, 50, 47, 45, 2534, 123, 2541, 2566,
	122, 48, 44, 1070, 2556, 42, 2546, 186, 27, 26,
	186, 186, 186, 15, 14, 13, 12, 11, 10, 9,
	581, 581, 5, 2563, 4, 2571, 2572, 35, 34, 2569,
	33, 1143, 24, 2, 2171, 1889, 2570, 0, 0, 0,
	0, 0, 2451, 2617, 2618, 0, 2450, 2577, 2578, 0,
	0, 187, 0, 0, 0, 582, 582, 0, 0, 0,
	0, 0, 0, 0, 581, 581, 581, 581, 0, 0,
	0, 187, 0, 2594, 0, 2596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 0, 0, 0, 187, 0, 0, 0, 0, 582,
	0, 0, 2640, 0, 0, 582, 0, 0, 1653, 0,
	1653, 0, 1651, 0, 1651, 0, 0, 0, 0, 0,
	2638, 2639, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2276, 0, 2276, 0, 2677,
	0, 0, 2649, 581, 2653, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 2650, 0, 0, 2588, 2589, 0,
	1653, 0, 0, 0, 1651, 0, 2660, 0, 37, 2670,
	0, 0, 0, 2706, 0, 0, 2329, 0, 2661, 0,
	0, 2332, 2698, 0, 0, 2332, 750, 2700, 2686, 2702,
	2678, 2687, 0, 0, 0, 0, 0, 0, 2694, 2696,
	0, 0, 0, 0, 0, 581, 0, 0, 0, 2621,
	0, 0, 0, 2625, 2626, 2627, 0, 0, 186, 0,
	0, 581, 0, 2710, 0, 2707, 2708, 0, 2750, 0,
	0, 0, 0, 0, 581, 0, 0, 0, 0, 0,
	0, 0, 0, 2746, 0, 0, 187, 0, 2748, 0,
	0, 2747, 2754, 2762, 0, 0, 0, 2791, 2792, 0,
	0, 1653, 581, 0, 0, 1651, 581, 581, 2767, 0,
	0, 2774, 2766, 0, 2795, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 581, 0, 0, 0, 0,
	0, 0, 582, 582, 0, 582, 0, 582, 582, 0,
	582, 582, 582, 582, 582, 582, 0, 2805, 2819, 2807,
	2804, 2802, 2803, 0, 0, 0, 582, 0, 0, 2332,
	187, 2816, 0, 581, 0, 0, 0, 750, 0, 0,
	2822, 0, 0, 0, 0, 0, 0, 187, 186, 0,
	0, 2818, 0, 0, 0, 0, 2824, 0, 0, 0,
	582, 0, 187, 0, 0, 0, 581, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 582, 0, 187, 0,
	2838, 0, 0, 2835, 0, 2831, 0, 0, 37, 2843,
	0, 0, 0, 0, 187, 0, 0, 0, 2757, 2758,
	2759, 187, 2840, 0, 0, 0, 0, 0, 581, 0,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 582,
	582, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 581, 0, 0, 664, 0, 0, 0,
	2860, 0, 0, 37, 2329, 581, 0, 0, 0, 0,
	187, 0, 2873, 2881, 186, 581, 2870, 2868, 2878, 2875,
	2874, 2872, 2877, 2876, 2890, 0, 0, 0, 0, 2774,
	2883, 2865, 0, 0, 2893, 2911, 2901, 2906, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2918, 0, 0, 0, 0, 0, 580, 2924,
	0, 0, 0, 0, 581, 0, 0, 0, 0, 0,
	582, 0, 0, 581, 0, 0, 0, 1653, 0, 0,
	0, 1651, 2939, 2941, 0, 582, 582, 2937, 2947, 2945,
	2944, 0, 2943, 0, 0, 0, 0, 0, 0, 2958,
	0, 0, 0, 0, 0, 796, 0, 0, 949, 2964,
	956, 2966, 0, 0, 0, 0, 182, 0, 0, 0,
	1653, 0, 0, 0, 1651, 2974, 2975, 2792, 0, 2973,
	0, 0, 0, 2972, 0, 0, 0, 0, 0, 0,
	121, 0, 143, 0, 0, 187, 0, 0, 0, 0,
	582, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 582, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 187, 0, 142,
	0, 582, 0, 0, 0, 0, 187, 0, 187, 0,
	187, 187, 582, 0, 0, 582, 0, 0, 0, 0,
	161, 0, 162, 0, 0, 0, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 130, 131,
	152, 151, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 2177, 0, 582, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 0, 121,
	0, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 147, 128, 154, 135, 127,
	0, 148, 149, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 136, 0, 582,
	0, 0, 161, 153, 162, 0, 0, 0, 142, 0,
	0, 139, 137, 132, 133, 134, 138, 0, 0, 0,
	0, 0, 0, 129, 181, 0, 0, 0, 0, 161,
	0, 162, 140, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 1435, 1436, 152,
	151, 181, 187, 0, 0, 0, 0, 187, 187, 0,
	0, 187, 0, 187, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 582, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 147, 1437, 154, 0, 1434, 0,
	148, 149, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 796, 796, 796, 144, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1139, 1141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 156, 0, 0, 169, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 0, 582, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 1276, 0, 0, 0,
	0, 176, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 0, 187, 144, 0, 0, 145, 0, 157,
	187, 0, 1288, 1289, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 157, 0, 0, 0,
	582, 0, 0, 169, 0, 0, 0, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 796, 0, 177, 0,
	0, 0, 1352, 0, 0, 0, 187, 187, 187, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 187, 177, 0, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 0, 187,
	0, 0, 0, 176, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 158, 163, 160, 166, 167, 168,
	170, 172, 173, 174, 175, 0, 0, 0, 0, 0,
	176, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 0, 0, 0, 582, 582, 0, 187, 187,
	187, 187, 187, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 187, 0, 187, 0, 187,
	949, 0, 187, 187, 187, 0, 0, 0, 0, 665,
	0, 0, 0, 1276, 0, 0, 0, 0, 0, 1460,
	1460, 0, 1460, 0, 1460, 1460, 0, 1469, 1460, 1460,
	1460, 1460, 1460, 0, 0, 0, 0, 0, 0, 0,
	1276, 0, 1276, 949, 0, 0, 187, 0, 0, 0,
	0, 0, 1285, 0, 0, 0, 0, 0, 0, 582,
	185, 0, 0, 536, 0, 0, 576, 582, 0, 0,
	0, 0, 187, 536, 0, 0, 0, 1534, 0, 0,
	0, 536, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1554, 2923, 0, 763, 0, 187, 0,
	0, 187, 0, 0, 1379, 0, 535, 0, 0, 0,
	0, 0, 781, 0, 781, 0, 584, 182, 0, 0,
	0, 0, 536, 0, 743, 0, 0, 0, 1431, 0,
	0, 0, 0, 0, 0, 0, 796, 796, 796, 0,
	0, 121, 0, 143, 1309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 187, 0, 0, 153, 0, 0, 0, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1660, 0, 1435,
	1436, 152, 151, 181, 1276, 0, 0, 0, 187, 0,
	0, 1367, 1675, 1676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 187,
	187, 187, 0, 0, 0, 0, 0, 0, 0, 582,
	582, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1380, 0, 0, 0, 147, 1437, 154, 0,
	1434, 0, 148, 149, 1774, 0, 0, 0, 165, 0,
	0, 0, 0, 582, 582, 582, 582, 171, 1332, 0,
	0, 796, 0, 0, 0, 0, 0, 0, 0, 796,
	0, 0, 796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 949, 0, 0, 1393, 1396, 1397, 1398,
	1399, 1400, 1401, 0, 1402, 1403, 1404, 1405, 1406, 1381,
	1382, 1383, 1384, 1365, 1366, 1394, 0, 1368, 0, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 187, 0,
	1378, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 78,
	39, 40, 80, 0, 0, 0, 0, 0, 956, 0,
	0, 0, 582, 0, 582, 0, 0, 0, 0, 84,
	0, 0, 0, 43, 69, 70, 0, 67, 71, 0,
	0, 0, 0, 0, 0, 949, 68, 0, 0, 0,
	156, 956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 56, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 949, 187, 0, 0,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 0, 0, 1395, 0, 0, 0,
	0, 0, 1379, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 536, 0, 536, 0, 0, 536, 0, 0,
	0, 582, 0, 0, 0, 582, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 1071, 0, 1077, 0, 0,
	1079, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 0, 0, 0, 46, 49, 52, 51,
	54, 0, 66, 0, 0, 75, 72, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 582, 187, 0, 55, 83,
	82, 0, 0, 64, 65, 53, 0, 0, 0, 1367,
	0, 73, 74, 0, 0, 0, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 0, 0, 0,
	0, 0, 176, 178, 179, 180, 0, 582, 0, 1277,
	0, 0, 0, 0, 0, 0, 0, 57, 58, 0,
	59, 60, 61, 62, 0, 0, 0, 0, 0, 0,
	0, 582, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 582, 0, 0, 0, 0, 0,
	1380, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 796, 0, 0, 0, 0, 0, 0, 0,
	0, 763, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 2069, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 536, 2084, 0, 0, 0, 0,
	0, 0, 582, 0, 1393, 1396, 1397, 1398, 1399, 1400,
	1401, 0, 1402, 1403, 1404, 1405, 1406, 1381, 1382, 1383,
	1384, 1365, 1366, 1394, 0, 1368, 0, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 81, 1339, 1378, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 0, 0,
	0, 0, 0, 0, 0, 0, 2064, 0, 0, 692,
	693, 0, 0, 0, 2160, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 1313, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 2185, 0,
	0, 0, 0, 0, 0, 0, 0, 2190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1395, 0, 536, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 0, 1357,
	0, 0, 0, 0, 0, 0, 1277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 0, 1277, 1276, 0, 1276, 0,
	536, 1276, 0, 0, 0, 0, 1276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 0, 0, 0, 0, 1460, 0, 0,
	0, 0, 0, 1492, 0, 0, 0, 0, 1556, 0,
	0, 0, 0, 0, 0, 0, 2311, 0, 0, 0,
	0, 0, 0, 0, 536, 796, 0, 0, 0, 1276,
	0, 536, 2336, 1460, 1276, 1536, 0, 0, 0, 0,
	1579, 1580, 536, 536, 536, 536, 536, 536, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1566, 0, 0,
	0, 0, 0, 0, 1570, 0, 0, 0, 0, 0,
	536, 0, 0, 0, 0, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 2712, 2714, 2713, 2720, 2721, 2722, 2723, 2724,
	2725, 2726, 633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 949, 0, 0, 1276,
	0, 0, 0, 1605, 1774, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 781, 0, 0, 0, 0, 0,
	0, 781, 781, 0, 0, 0, 0, 1277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 781, 1556,
	781, 781, 781, 781, 781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	781, 0, 0, 0, 0, 0, 0, 0, 2311, 0,
	0, 0, 0, 0, 763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 0, 0,
	0, 0, 0, 0, 1556, 0, 536, 0, 536, 0,
	536, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1671, 0, 0, 0, 1672, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	0, 1794, 0, 0, 1605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2715, 2716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1311, 1747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 0, 0,
	0, 0, 0, 675, 0, 628, 679, 630, 676, 677,
	0, 626, 629, 678, 0, 0, 0, 0, 0, 0,
	2645, 2646, 2647, 2648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	631, 632, 2711, 2717, 2718, 2719, 2727, 2729, 653, 2728,
	2730, 2731, 2732, 2735, 2736, 2737, 2738, 2733, 2734, 2739,
	0, 0, 0, 1276, 0, 1276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 0, 0, 0, 0,
	0, 0, 536, 0, 0, 0, 0, 536, 536, 1871,
	0, 536, 0, 1958, 1276, 0, 0, 0, 0, 2699,
	536, 2701, 0, 0, 0, 0, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 1941, 0, 0, 0, 0,
	1951, 1952, 0, 0, 1956, 536, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 0, 0,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2765, 1965, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2798, 0,
	0, 0, 2798, 2798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 781, 781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1556, 0, 0, 536, 1774,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 0,
	1985, 0, 0, 0, 1989, 0, 1990, 1991, 0, 0,
	0, 536, 0, 0, 536, 1999, 0, 0, 2000, 2001,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1276, 0, 2861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2007, 2008, 2009, 0, 0,
	2012, 0, 2013, 0, 0, 0, 2016, 2117, 796, 796,
	0, 0, 0, 0, 2025, 2026, 2027, 2028, 0, 0,
	0, 2891, 0, 0, 0, 0, 0, 2039, 2040, 0,
	0, 2896, 0, 536, 0, 2045, 2046, 2047, 2048, 2049,
	2170, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2164, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 2896,
	0, 0, 0, 0, 0, 0, 536, 536, 536, 536,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	780, 0, 0, 536, 536, 691, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2210,
	2211, 2212, 2213, 2214, 781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1605, 2220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2228, 0, 0, 0, 0, 0, 594, 1277,
	0, 1277, 0, 0, 1277, 0, 0, 0, 0, 1277,
	0, 0, 0, 753, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 781, 0, 0, 0, 0, 0, 0,
	774, 0, 0, 753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 957,
	0, 0, 0, 0, 0, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1277, 0, 0, 0, 0, 1277, 536, 536,
	536, 536, 536, 0, 0, 0, 0, 0, 0, 0,
	2352, 0, 0, 0, 0, 536, 0, 1508, 0, 536,
	0, 0, 536, 2362, 1556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2292, 2293, 0, 0,
	0, 0, 1277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 0, 0, 0, 0, 0, 2408,
	0, 0, 0, 0, 0, 0, 0, 0, 536, 0,
	0, 536, 0, 0, 0, 692, 693, 0, 0, 0,
	2335, 1652, 0, 0, 0, 2446, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2455, 2353, 2354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2467, 0, 0, 2470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 0, 2530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 2475, 0, 0,
	0, 0, 0, 0, 2479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 2489, 2490,
	2492, 2494, 0, 0, 0, 0, 0, 0, 2500, 0,
	0, 0, 2503, 2504, 0, 0, 536, 0, 2507, 536,
	536, 536, 0, 0, 2509, 0, 0, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 0, 0, 2523,
	2592, 0, 0, 0, 0, 2528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2606,
	0, 0, 2607, 2608, 2609, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2550, 2551,
	0, 0, 2555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 0, 1277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1131, 1131, 1131, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 1169, 1277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 753, 1204,
	1205, 1206, 0, 1209, 1216, 1211, 1212, 1213, 1214, 2632,
	1217, 1219, 1219, 0, 1219, 1223, 1223, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 0, 1260, 1261, 1262, 1263, 1264, 1508, 0, 0,
	0, 1223, 1223, 1223, 1223, 1223, 0, 0, 0, 0,
	2659, 0, 594, 0, 0, 0, 2663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1286,
	0, 0, 0, 0, 0, 753, 0, 0, 0, 753,
	0, 0, 0, 0, 0, 753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 2763, 0, 0, 0, 0, 0, 0,
	0, 0, 2770, 0, 0, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2780, 2781, 2782, 0,
	2783, 2784, 0, 0, 0, 2787, 0, 2788, 0, 2790,
	2793, 0, 0, 0, 0, 0, 2797, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 0, 0, 0, 2844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 685, 692, 693,
	694, 695, 696, 686, 688, 0, 0, 0, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 690, 697, 698, 0, 0, 0, 0, 1414, 0,
	0, 0, 2845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2850, 0, 0, 0,
	0, 2855, 0, 0, 0, 0, 0, 2856, 2857, 0,
	0, 0, 0, 0, 2452, 2453, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2863, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2914, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2920, 0, 0, 0, 2921,
	0, 0, 0, 1559, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1131, 1131, 1131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1612, 1613, 1614, 1615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 1658, 0, 0,
	0, 0, 0, 0, 1663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1699,
	1700, 1701, 1702, 1703, 1704, 594, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 685, 692, 693, 694, 695, 696, 686,
	688, 0, 0, 0, 687, 0, 0, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 697, 698,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 1782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2452, 2453, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 1817, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	957, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 675, 0, 0,
	679, 0, 676, 677, 0, 0, 0, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1974, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2043, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 753, 0,
	0, 0, 0, 0, 1326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2095, 2096,
	0, 0, 0, 0, 0, 0, 0, 2115, 0, 2116,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2255, 2256, 0, 0, 0, 2259, 0,
	0, 0, 0, 2261, 2262, 2263, 0, 0, 0, 0,
	0, 2267, 2268, 0, 0, 1710, 2270, 0, 2271, 2272,
	0, 0, 0, 2279, 2280, 0, 0, 0, 0, 0,
	0, 1710, 1710, 1710, 1710, 1710, 594, 594, 594, 594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2324, 0, 0, 0, 0, 0, 0, 0, 2333,
	0, 79, 0, 0, 1801, 1801, 1801, 1801, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 2356, 0, 0,
	0, 2115, 0, 0, 0, 1801, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2651, 0, 2652, 0, 0, 0, 0, 2655,
	2656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2662, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2671, 0, 2675, 2676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2695,
	0, 0, 0, 0, 0, 2333, 0, 79, 0, 2333,
	2703, 0, 0, 2705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2806, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 594, 0, 0, 2833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2864, 0, 0,
	0, 0, 79, 0, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 0, 0, 927, 913, 458,
	2912, 860, 930, 829, 848, 940, 851, 854, 895, 808,
	873, 376, 845, 801, 833, 804, 840, 805, 831, 862,
	250, 828, 915, 877, 929, 332, 247, 810, 834, 390,
	850, 197, 897, 432, 234, 342, 339, 465, 262, 253,
	249, 233, 288, 348, 388, 452, 382, 936, 336, 883,
	0, 442, 361, 0, 0, 0, 864, 919, 871, 909,
	859, 896, 818, 882, 931, 846, 892, 932, 294, 232,
	196, 373, 443, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 2884, 0, 2885, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 842, 889, 926, 843, 891, 245,
	292, 252, 244, 462, 937, 918, 0, 0, 214, 928,
	866, 0, 894, 0, 943, 803, 885, 0, 806, 809,
	939, 922, 837, 255, 0, 0, 0, 0, 0, 0,
	0, 863, 872, 906, 857, 0, 0, 0, 0, 0,
	0, 0, 835, 0, 881, 0, 0, 0, 814, 807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 861, 0, 0, 0, 817, 0, 836, 907, 0,
	800, 275, 811, 362, 237, 0, 911, 921, 858, 495,
	925, 856, 855, 901, 815, 917, 849, 331, 813, 300,
	192, 210, 0, 847, 372, 414, 420, 916, 832, 841,
	235, 839, 418, 386, 479, 218, 264, 411, 392, 416,
	399, 267, 880, 899, 417, 337, 467, 406, 477, 496,
	497, 243, 366, 486, 456, 492, 508, 211, 240, 380,
	449, 482, 439, 359, 463, 464, 299, 438, 273, 195,
	335, 502, 209, 426, 227, 216, 202, 451, 475, 224,
	430, 0, 0, 510, 204, 473, 448, 355, 296, 297,
	203, 0, 410, 248, 271, 238, 375, 470, 471, 236,
	511, 213, 491, 206, 1133, 490, 368, 466, 474, 356,
	347, 205, 472, 354, 346, 302, 321, 322, 260, 282,
	404, 340, 405, 283, 364, 363, 365, 198, 483, 0,
	199, 0, 444, 484, 512, 219, 220, 222, 827, 259,
	263, 270, 272, 278, 279, 286, 333, 379, 403, 401,
	407, 912, 461, 478, 487, 494, 500, 501, 503, 504,
	505, 506, 507, 367, 285, 440, 301, 338, 904, 942,
	385, 419, 225, 481, 441, 822, 826, 820, 886, 821,
	875, 876, 823, 933, 934, 935, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 0, 908, 816, 0, 824, 825,
	0, 914, 923, 924, 531, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 879, 191, 207, 334, 938, 408, 268, 509,
	489, 485, 802, 819, 242, 830, 838, 0, 844, 852,
	853, 865, 867, 868, 869, 870, 887, 888, 890, 898,
	900, 903, 905, 910, 920, 941, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 391,
	395, 396, 397, 398, 400, 402, 409, 413, 421, 422,
	423, 424, 425, 428, 429, 433, 434, 435, 436, 437,
	445, 446, 450, 468, 469, 480, 493, 498, 427, 277,
	476, 499, 0, 343, 878, 884, 345, 261, 280, 291,
	893, 488, 447, 212, 415, 269, 201, 231, 215, 239,
	254, 257, 295, 353, 360, 389, 394, 274, 251, 229,
	412, 226, 431, 453, 454, 455, 457, 357, 246, 393,
	874, 902, 341, 459, 460, 287, 358, 0, 0, 927,
	913, 458, 0, 860, 930, 829, 848, 940, 851, 854,
	895, 808, 873, 376, 845, 801, 833, 804, 840, 805,
	831, 862, 250, 828, 915, 877, 929, 332, 247, 810,
	834, 390, 850, 197, 897, 432, 234, 342, 339, 465,
	262, 253, 249, 233, 288, 348, 388, 452, 382, 936,
	336, 883, 0, 442, 361, 0, 0, 0, 864, 919,
	871, 909, 859, 896, 818, 882, 931, 846, 892, 932,
	294, 232, 196, 373, 443, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 842, 889, 926, 843,
	891, 245, 292, 252, 244, 462, 937, 918, 0, 0,
	214, 928, 866, 0, 894, 0, 943, 803, 885, 0,
	806, 809, 939, 922, 837, 255, 0, 0, 0, 0,
	0, 0, 0, 863, 872, 906, 857, 0, 0, 0,
	0, 0, 2363, 0, 835, 0, 881, 0, 0, 0,
	814, 807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 861, 0, 0, 0, 817, 0, 836,
	907, 0, 800, 275, 811, 362, 237, 0, 911, 921,
	858, 495, 925, 856, 855, 901, 815, 917, 849, 331,
	813, 300, 192, 210, 0, 847, 372, 414, 420, 916,
	832, 841, 235, 839, 418, 386, 479, 218, 264, 411,
	392, 416, 399, 267, 880, 899, 417, 337, 467, 406,
	477, 496, 497, 243, 366, 486, 456, 492, 508, 211,
	240, 380, 449, 482, 439, 359, 463, 464, 299, 438,
	273, 195, 335, 502, 209, 426, 227, 216, 202, 451,
	475, 224, 430, 0, 0, 510, 204, 473, 448, 355,
	296, 297, 203, 0, 410, 248, 271, 238, 375, 470,
	471, 236, 511, 213, 491, 206, 1133, 490, 368, 466,
	474, 356, 347, 205, 472, 354, 346, 302, 321, 322,
	260, 282, 404, 340, 405, 283, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 512, 219, 220, 222,
	827, 259, 263, 270, 272, 278, 279, 286, 333, 379,
	403, 401, 407, 912, 461, 478, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 367, 285, 440, 301, 338,
	904, 942, 385, 419, 225, 481, 441, 822, 826, 820,
	886, 821, 875, 876, 823, 933, 934, 935, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 908, 816, 0,
	824, 825, 0, 914, 923, 924, 531, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 879, 191, 207, 334, 938, 408,
	268, 509, 489, 485, 802, 819, 242, 830, 838, 0,
	844, 852, 853, 865, 867, 868, 869, 870, 887, 888,
	890, 898, 900, 903, 905, 910, 920, 941, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 433, 434, 435,
	436, 437, 445, 446, 450, 468, 469, 480, 493, 498,
	427, 277, 476, 499, 0, 343, 878, 884, 345, 261,
	280, 291, 893, 488, 447, 212, 415, 269, 201, 231,
	215, 239, 254, 257, 295, 353, 360, 389, 394, 274,
	251, 229, 412, 226, 431, 453, 454, 455, 457, 357,
	246, 393, 874, 902, 341, 459, 460, 287, 358, 0,
	0, 927, 913, 458, 0, 860, 930, 829, 848, 940,
	851, 854, 895, 808, 873, 376, 845, 801, 833, 804,
	840, 805, 831, 862, 250, 828, 915, 877, 929, 332,
	247, 810, 834, 390, 850, 197, 897, 432, 234, 342,
	339, 465, 262, 253, 249, 233, 288, 348, 388, 452,
	382, 936, 336, 883, 0, 442, 361, 0, 0, 0,
	864, 919, 871, 909, 859, 896, 818, 882, 931, 846,
	892, 932, 294, 232, 196, 373, 443, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 842, 889,
	926, 843, 891, 245, 292, 252, 244, 462, 937, 918,
	0, 0, 214, 928, 866, 0, 894, 0, 943, 803,
	885, 0, 806, 809, 939, 922, 837, 255, 0, 0,
	0, 0, 0, 0, 0, 863, 872, 906, 857, 0,
	0, 0, 0, 0, 2322, 0, 835, 0, 881, 0,
	0, 0, 814, 807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 861, 0, 0, 0, 817,
	0, 836, 907, 0, 800, 275, 811, 362, 237, 0,
	911, 921, 858, 495, 925, 856, 855, 901, 815, 917,
	849, 331, 813, 300, 192, 210, 0, 847, 372, 414,
	420, 916, 832, 841, 235, 839, 418, 386, 479, 218,
	264, 411, 392, 416, 399, 267, 880, 899, 417, 337,
	467, 406, 477, 496, 497, 243, 366, 486, 456, 492,
	508, 211, 240, 380, 449, 482, 439, 359, 463, 464,
	299, 438, 273, 195, 335, 502, 209, 426, 227, 216,
	202, 451, 475, 224, 430, 0, 0, 510, 204, 473,
	448, 355, 296, 297, 203, 0, 410, 248, 271, 238,
	375, 470, 471, 236, 511, 213, 491, 206, 1133, 490,
	368, 466, 474, 356, 347, 205, 472, 354, 346, 302,
	321, 322, 260, 282, 404, 340, 405, 283, 364, 363,
	365, 198, 483, 0, 199, 0, 444, 484, 512, 219,
	220, 222, 827, 259, 263, 270, 272, 278, 279, 286,
	333, 379, 403, 401, 407, 912, 461, 478, 487, 494,
	500, 501, 503, 504, 505, 506, 507, 367, 285, 440,
	301, 338, 904, 942, 385, 419, 225, 481, 441, 822,
	826, 820, 886, 821, 875, 876, 823, 933, 934, 935,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 908,
	816, 0, 824, 825, 0, 914, 923, 924, 531, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 879, 191, 207, 334,
	938, 408, 268, 509, 489, 485, 802, 819, 242, 830,
	838, 0, 844, 852, 853, 865, 867, 868, 869, 870,
	887, 888, 890, 898, 900, 903, 905, 910, 920, 941,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 433,
	434, 435, 436, 437, 445, 446, 450, 468, 469, 480,
	493, 498, 427, 277, 476, 499, 0, 343, 878, 884,
	345, 261, 280, 291, 893, 488, 447, 212, 415, 269,
	201, 231, 215, 239, 254, 257, 295, 353, 360, 389,
	394, 274, 251, 229, 412, 226, 431, 453, 454, 455,
	457, 357, 246, 393, 874, 902, 341, 459, 460, 287,
	358, 0, 0, 927, 913, 458, 0, 860, 930, 829,
	848, 940, 851, 854, 895, 808, 873, 376, 845, 801,
	833, 804, 840, 805, 831, 862, 250, 828, 915, 877,
	929, 332, 247, 810, 834, 390, 850, 197, 897, 432,
	234, 342, 339, 465, 262, 253, 249, 233, 288, 348,
	388, 452, 382, 936, 336, 883, 0, 442, 361, 0,
	0, 0, 864, 919, 871, 909, 859, 896, 818, 882,
	931, 846, 892, 932, 294, 232, 196, 373, 443, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	842, 889, 926, 843, 891, 245, 292, 252, 244, 462,
	937, 918, 0, 0, 214, 928, 866, 0, 894, 0,
	943, 803, 885, 0, 806, 809, 939, 922, 837, 255,
	0, 0, 0, 0, 0, 0, 0, 863, 872, 906,
	857, 0, 0, 0, 0, 0, 1789, 0, 835, 0,
	881, 0, 0, 0, 814, 807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 861, 0, 0,
	0, 817, 0, 836, 907, 0, 800, 275, 811, 362,
	237, 0, 911, 921, 858, 495, 925, 856, 855, 901,
	815, 917, 849, 331, 813, 300, 192, 210, 0, 847,
	372, 414, 420, 916, 832, 841, 235, 839, 418, 386,
	479, 218, 264, 411, 392, 416, 399, 267, 880, 899,
	417, 337, 467, 406, 477, 496, 497, 243, 366, 486,
	456, 492, 508, 211, 240, 380, 449, 482, 439, 359,
	463, 464, 299, 438, 273, 195, 335, 502, 209, 426,
	227, 216, 202, 451, 475, 224, 430, 0, 0, 510,
	204, 473, 448, 355, 296, 297, 203, 0, 410, 248,
	271, 238, 375, 470, 471, 236, 511, 213, 491, 206,
	1133, 490, 368, 466, 474, 356, 347, 205, 472, 354,
	346, 302, 321, 322, 260, 282, 404, 340, 405, 283,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	512, 219, 220, 222, 827, 259, 263, 270, 272, 278,
	279, 286, 333, 379, 403, 401, 407, 912, 461, 478,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 367,
	285, 440, 301, 338, 904, 942, 385, 419, 225, 481,
	441, 822, 826, 820, 886, 821, 875, 876, 823, 933,
	934, 935, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 908, 816, 0, 824, 825, 0, 914, 923, 924,
	531, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 879, 191,
	207, 334, 938, 408, 268, 509, 489, 485, 802, 819,
	242, 830, 838, 0, 844, 852, 853, 865, 867, 868,
	869, 870, 887, 888, 890, 898, 900, 903, 905, 910,
	920, 941, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 391, 395, 396, 397, 398,
	400, 402, 409, 413, 421, 422, 423, 424, 425, 428,
	429, 433, 434, 435, 436, 437, 445, 446, 450, 468,
	469, 480, 493, 498, 427, 277, 476, 499, 0, 343,
	878, 884, 345, 261, 280, 291, 893, 488, 447, 212,
	415, 269, 201, 231, 215, 239, 254, 257, 295, 353,
	360, 389, 394, 274, 251, 229, 412, 226, 431, 453,
	454, 455, 457, 357, 246, 393, 874, 902, 341, 459,
	460, 287, 358, 0, 0, 927, 913, 458, 0, 860,
	930, 829, 848, 940, 851, 854, 895, 808, 873, 376,
	845, 801, 833, 804, 840, 805, 831, 862, 250, 828,
	915, 877, 929, 332, 247, 810, 834, 390, 850, 197,
	897, 432, 234, 342, 339, 465, 262, 253, 249, 233,
	288, 348, 388, 452, 382, 936, 336, 883, 0, 442,
	361, 0, 0, 0, 864, 919, 871, 909, 859, 896,
	818, 882, 931, 846, 892, 932, 294, 232, 196, 373,
	443, 266, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 842, 889, 926, 843, 891, 245, 292, 252,
	244, 462, 937, 918, 0, 0, 214, 928, 866, 0,
	894, 0, 943, 803, 885, 0, 806, 809, 939, 922,
	837, 255, 0, 0, 0, 0, 0, 0, 0, 863,
	872, 906, 857, 0, 0, 0, 0, 0, 0, 0,
	835, 0, 881, 0, 0, 0, 814, 807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 861,
	0, 0, 0, 817, 0, 836, 907, 0, 800, 275,
	811, 362, 237, 0, 911, 921, 858, 495, 925, 856,
	855, 901, 815, 917, 849, 331, 813, 300, 192, 210,
	0, 847, 372, 414, 420, 916, 832, 841, 235, 839,
	418, 386, 479, 218, 264, 411, 392, 416, 399, 267,
	880, 899, 417, 337, 467, 406, 477, 496, 497, 243,
	366, 486, 456, 492, 508, 211, 240, 380, 449, 482,
	439, 359, 463, 464, 299, 438, 273, 195, 335, 502,
	209, 426, 227, 216, 202, 451, 475, 224, 430, 0,
	0, 510, 204, 473, 448, 355, 296, 297, 203, 0,
	410, 248, 271, 238, 375, 470, 471, 236, 511, 213,
	491, 206, 1133, 490, 368, 466, 474, 356, 347, 205,
	472, 354, 346, 302, 321, 322, 260, 282, 404, 340,
	405, 283, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 512, 219, 220, 222, 827, 259, 263, 270,
	272, 278, 279, 286, 333, 379, 403, 401, 407, 912,
	461, 478, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 367, 285, 440, 301, 338, 904, 942, 385, 419,
	225, 481, 441, 822, 826, 820, 886, 821, 875, 876,
	823, 933, 934, 935, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 908, 816, 0, 824, 825, 0, 914,
	923, 924, 531, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	879, 191, 207, 334, 938, 408, 268, 509, 489, 485,
	802, 819, 242, 830, 838, 0, 844, 852, 853, 865,
	867, 868, 869, 870, 887, 888, 890, 898, 900, 903,
	905, 910, 920, 941, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 433, 434, 435, 436, 437, 445, 446,
	450, 468, 469, 480, 493, 498, 427, 277, 476, 499,
	0, 343, 878, 884, 345, 261, 280, 291, 893, 488,
	447, 212, 415, 269, 201, 231, 215, 239, 254, 257,
	295, 353, 360, 389, 394, 274, 251, 229, 412, 226,
	431, 453, 454, 455, 457, 357, 246, 393, 874, 902,
	341, 459, 460, 287, 358, 0, 0, 927, 913, 458,
	0, 860, 930, 829, 848, 940, 851, 854, 895, 808,
	873, 376, 845, 801, 833, 804, 840, 805, 831, 862,
	250, 828, 915, 877, 929, 332, 247, 810, 834, 390,
	850, 197, 897, 432, 234, 342, 339, 465, 262, 253,
	249, 233, 288, 348, 388, 452, 382, 936, 336, 883,
	0, 442, 361, 0, 0, 0, 864, 919, 871, 909,
	859, 896, 818, 882, 931, 846, 892, 932, 294, 232,
	196, 373, 443, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 842, 889, 926, 843, 891, 245,
	292, 252, 244, 462, 937, 918, 0, 0, 214, 928,
	866, 0, 894, 0, 943, 803, 885, 0, 806, 809,
	939, 922, 837, 255, 0, 0, 0, 0, 0, 0,
	0, 863, 872, 906, 857, 0, 0, 0, 0, 0,
	0, 0, 835, 0, 881, 0, 0, 0, 814, 807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 861, 0, 0, 0, 817, 0, 836, 907, 0,
	800, 275, 811, 362, 237, 0, 911, 921, 858, 495,
	925, 856, 855, 901, 815, 917, 849, 331, 813, 300,
	192, 210, 0, 847, 372, 414, 420, 916, 832, 841,
	235, 839, 418, 386, 479, 218, 264, 411, 392, 416,
	399, 267, 880, 899, 417, 337, 467, 406, 477, 496,
	497, 243, 366, 486, 456, 492, 508, 211, 240, 380,
	449, 482, 439, 359, 463, 464, 299, 438, 273, 195,
	335, 502, 209, 426, 227, 216, 202, 451, 475, 224,
	430, 0, 0, 510, 204, 473, 448, 355, 296, 297,
	203, 0, 410, 248, 271, 238, 375, 470, 471, 236,
	511, 213, 491, 206, 1133, 490, 368, 466, 474, 356,
	347, 205, 472, 354, 346, 302, 321, 322, 260, 282,
	404, 340, 405, 283, 364, 363, 365, 198, 483, 0,
	199, 0, 444, 484, 512, 219, 220, 222, 827, 259,
	263, 270, 272, 278, 279, 286, 333, 379, 403, 401,
	407, 912, 461, 478, 487, 494, 500, 501, 503, 504,
	505, 506, 507, 367, 285, 440, 301, 338, 904, 942,
	385, 419, 225, 481, 441, 822, 826, 820, 886, 821,
	875, 876, 823, 933, 934, 935, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 0, 908, 816, 0, 824, 825,
	0, 914, 923, 924, 531, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 879, 191, 207, 334, 938, 408, 268, 509,
	489, 485, 802, 819, 242, 830, 838, 0, 844, 852,
	853, 865, 867, 868, 869, 870, 887, 888, 890, 898,
	900, 903, 905, 910, 920, 941, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 391,
	395, 396, 397, 398, 400, 402, 409, 413, 421, 422,
	423, 424, 425, 428, 429, 433, 434, 435, 436, 437,
	445, 446, 450, 468, 469, 480, 493, 498, 427, 277,
	476, 499, 0, 343, 878, 884, 345, 261, 280, 291,
	893, 488, 447, 212, 415, 269, 201, 231, 215, 239,
	254, 257, 295, 353, 360, 389, 394, 274, 251, 229,
	412, 226, 431, 453, 454, 455, 457, 357, 246, 393,
	874, 902, 341, 459, 460, 287, 358, 0, 0, 927,
	913, 458, 0, 860, 930, 829, 848, 940, 851, 854,
	895, 808, 873, 376, 845, 801, 833, 804, 840, 805,
	831, 862, 250, 828, 915, 877, 929, 332, 247, 810,
	834, 390, 850, 197, 897, 432, 234, 342, 339, 465,
	262, 253, 249, 233, 288, 348, 388, 452, 382, 936,
	336, 883, 0, 442, 361, 0, 0, 0, 864, 919,
	871, 909, 859, 896, 818, 882, 931, 846, 892, 932,
	294, 232, 196, 373, 443, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 842, 889, 926, 843,
	891, 245, 292, 252, 244, 462, 937, 918, 0, 0,
	944, 928, 866, 0, 894, 0, 943, 803, 885, 0,
	806, 809, 939, 922, 837, 255, 0, 0, 0, 0,
	0, 0, 0, 863, 872, 906, 857, 0, 0, 0,
	0, 0, 0, 0, 835, 0, 881, 0, 0, 0,
	814, 807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 861, 0, 0, 0, 817, 0, 836,
	907, 0, 800, 275, 811, 362, 237, 0, 911, 921,
	858, 495, 925, 856, 855, 901, 815, 917, 849, 331,
	813, 300, 192, 210, 0, 847, 372, 414, 420, 916,
	832, 841, 235, 839, 418, 386, 479, 218, 264, 411,
	392, 416, 399, 267, 880, 899, 417, 337, 467, 406,
	477, 496, 497, 243, 366, 486, 456, 492, 508, 211,
	240, 380, 449, 482, 439, 359, 463, 464, 299, 438,
	273, 195, 335, 502, 209, 426, 227, 216, 202, 451,
	475, 224, 430, 0, 0, 510, 204, 473, 448, 355,
	296, 297, 203, 0, 410, 248, 271, 238, 375, 470,
	471, 236, 511, 213, 491, 206, 812, 490, 368, 466,
	474, 356, 347, 205, 472, 354, 346, 302, 321, 322,
	260, 282, 404, 340, 405, 283, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 512, 219, 220, 222,
	827, 259, 263, 270, 272, 278, 279, 286, 333, 379,
	403, 401, 407, 912, 461, 478, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 799, 793, 792, 301, 338,
	904, 942, 385, 419, 225, 481, 441, 822, 826, 820,
	886, 821, 875, 876, 823, 933, 934, 935, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 908, 816, 0,
	824, 825, 0, 914, 923, 924, 531, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 879, 191, 207, 334, 938, 408,
	268, 509, 489, 485, 802, 819, 242, 830, 838, 0,
	844, 852, 853, 865, 867, 868, 869, 870, 887, 888,
	890, 898, 900, 903, 905, 910, 920, 941, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 433, 434, 435,
	436, 437, 445, 446, 450, 468, 469, 480, 493, 498,
	427, 277, 476, 499, 0, 343, 878, 884, 345, 261,
	280, 291, 893, 488, 447, 212, 415, 269, 201, 231,
	215, 239, 254, 257, 295, 353, 360, 389, 394, 274,
	251, 229, 412, 226, 431, 453, 454, 455, 457, 357,
	246, 393, 874, 902, 341, 459, 460, 287, 358, 0,
	0, 927, 913, 458, 0, 860, 930, 829, 848, 940,
	851, 854, 895, 808, 873, 376, 845, 801, 833, 804,
	840, 805, 831, 862, 250, 828, 915, 877, 929, 332,
	247, 810, 834, 390, 850, 197, 897, 432, 234, 342,
	339, 465, 262, 253, 249, 233, 288, 348, 388, 452,
	382, 936, 336, 883, 0, 442, 361, 0, 0, 0,
	864, 919, 871, 909, 859, 896, 818, 882, 931, 846,
	892, 932, 294, 232, 196, 373, 443, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 842, 889,
	926, 843, 891, 245, 292, 252, 244, 462, 937, 918,
	0, 0, 944, 928, 866, 0, 894, 0, 943, 803,
	885, 0, 806, 809, 939, 922, 837, 255, 0, 0,
	0, 0, 0, 0, 0, 863, 872, 906, 857, 0,
	0, 0, 0, 0, 0, 0, 835, 0, 881, 0,
	0, 0, 814, 807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 861, 0, 0, 0, 817,
	0, 836, 907, 0, 800, 275, 811, 362, 237, 0,
	911, 921, 858, 495, 925, 856, 855, 901, 815, 917,
	849, 331, 813, 300, 192, 210, 0, 847, 372, 414,
	420, 916, 832, 841, 235, 839, 418, 386, 479, 218,
	264, 411, 392, 416, 399, 267, 880, 899, 417, 337,
	467, 406, 477, 496, 497, 243, 366, 486, 456, 492,
	508, 211, 240, 380, 449, 482, 439, 359, 463, 464,
	299, 438, 273, 195, 335, 502, 209, 426, 227, 216,
	202, 451, 1343, 224, 430, 0, 0, 510, 204, 473,
	448, 355, 296, 297, 203, 0, 410, 248, 271, 238,
	375, 470, 471, 236, 511, 213, 491, 206, 812, 490,
	368, 466, 474, 356, 347, 205, 472, 354, 346, 302,
	321, 322, 260, 282, 404, 340, 405, 283, 364, 363,
	365, 198, 483, 0, 199, 0, 444, 484, 512, 219,
	220, 222, 827, 259, 263, 270, 272, 278, 279, 286,
	333, 379, 403, 401, 407, 912, 461, 478, 487, 494,
	500, 501, 503, 504, 505, 506, 507, 799, 793, 792,
	301, 338, 904, 942, 385, 419, 225, 481, 441, 822,
	826, 820, 886, 821, 875, 876, 823, 933, 934, 935,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 908,
	816, 0, 824, 825, 0, 914, 923, 924, 531, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 879, 191, 207, 334,
	938, 408, 268, 509, 489, 485, 802, 819, 242, 830,
	838, 0, 844, 852, 853, 865, 867, 868, 869, 870,
	887, 888, 890, 898, 900, 903, 905, 910, 920, 941,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 433,
	434, 435, 436, 437, 445, 446, 450, 468, 469, 480,
	493, 498, 427, 277, 476, 499, 0, 343, 878, 884,
	345, 261, 280, 291, 893, 488, 447, 212, 415, 269,
	201, 231, 215, 239, 254, 257, 295, 353, 360, 389,
	394, 274, 251, 229, 412, 226, 431, 453, 454, 455,
	457, 357, 246, 393, 874, 902, 341, 459, 460, 287,
	358, 0, 0, 927, 913, 458, 0, 860, 930, 829,
	848, 940, 851, 854, 895, 808, 873, 376, 845, 801,
	833, 804, 840, 805, 831, 862, 250, 828, 915, 877,
	929, 332, 247, 810, 834, 390, 850, 197, 897, 432,
	234, 342, 339, 465, 262, 253, 249, 233, 288, 348,
	388, 452, 382, 936, 336, 883, 0, 442, 361, 0,
	0, 0, 864, 919, 871, 909, 859, 896, 818, 882,
	931, 846, 892, 932, 294, 232, 196, 373, 443, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	842, 889, 926, 843, 891, 245, 292, 252, 244, 462,
	937, 918, 0, 0, 944, 928, 866, 0, 894, 0,
	943, 803, 885, 0, 806, 809, 939, 922, 837, 255,
	0, 0, 0, 0, 0, 0, 0, 863, 872, 906,
	857, 0, 0, 0, 0, 0, 0, 0, 835, 0,
	881, 0, 0, 0, 814, 807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 861, 0, 0,
	0, 817, 0, 836, 907, 0, 800, 275, 811, 362,
	237, 0, 911, 921, 858, 495, 925, 856, 855, 901,
	815, 917, 849, 331, 813, 300, 192, 210, 0, 847,
	372, 414, 420, 916, 832, 841, 235, 839, 418, 386,
	479, 218, 264, 411, 392, 416, 399, 267, 880, 899,
	417, 337, 467, 406, 477, 496, 497, 243, 366, 486,
	456, 492, 508, 211, 240, 380, 449, 482, 439, 359,
	463, 464, 299, 438, 273, 195, 335, 502, 209, 426,
	227, 216, 202, 451, 790, 224, 430, 0, 0, 510,
	204, 473, 448, 355, 296, 297, 203, 0, 410, 248,
	271, 238, 375, 470, 471, 236, 511, 213, 491, 206,
	812, 490, 368, 466, 474, 356, 347, 205, 472, 354,
	346, 302, 321, 322, 260, 282, 404, 340, 405, 283,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	512, 219, 220, 222, 827, 259, 263, 270, 272, 278,
	279, 286, 333, 379, 403, 401, 407, 912, 461, 478,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 799,
	793, 792, 301, 338, 904, 942, 385, 419, 225, 481,
	441, 822, 826, 820, 886, 821, 875, 876, 823, 933,
	934, 935, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 908, 816, 0, 824, 825, 0, 914, 923, 924,
	531, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 879, 191,
	207, 334, 938, 408, 268, 509, 489, 485, 802, 819,
	242, 830, 838, 0, 844, 852, 853, 865, 867, 868,
	869, 870, 887, 888, 890, 898, 900, 903, 905, 910,
	920, 941, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 391, 395, 396, 397, 398,
	400, 402, 409, 413, 421, 422, 423, 424, 425, 428,
	429, 433, 434, 435, 436, 437, 445, 446, 450, 468,
	469, 480, 493, 498, 427, 277, 476, 499, 0, 343,
	878, 884, 345, 261, 280, 291, 893, 488, 447, 212,
	415, 269, 201, 231, 215, 239, 254, 257, 295, 353,
	360, 389, 394, 274, 251, 229, 412, 226, 431, 453,
	454, 455, 457, 357, 246, 393, 874, 902, 341, 459,
	460, 287, 358, 0, 0, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 1734, 0, 612, 0, 0, 0, 250, 617,
	0, 0, 0, 332, 247, 0, 1735, 390, 0, 197,
	0, 432, 234, 342, 339, 465, 262, 253, 249, 233,
	288, 348, 388, 452, 382, 624, 336, 0, 0, 442,
	361, 0, 0, 0, 0, 0, 619, 620, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 373,
	443, 266, 0, 87, 0, 0, 188, 189, 190, 685,
	692, 693, 694, 695, 696, 686, 688, 0, 0, 223,
	687, 230, 635, 637, 636, 643, 644, 645, 646, 647,
	648, 649, 633, 690, 697, 698, 0, 245, 292, 252,
	244, 462, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 595, 609, 0, 623, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 606, 607, 779, 0,
	0, 0, 669, 0, 608, 0, 0, 616, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 362, 237, 0, 668, 0, 0, 495, 0, 0,
	666, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 372, 414, 420, 0, 0, 0, 235, 0,
	418, 386, 479, 218, 264, 411, 392, 416, 399, 267,
	0, 0, 417, 337, 467, 406, 477, 496, 497, 243,
	366, 486, 456, 492, 508, 211, 240, 380, 449, 482,
	439, 359, 463, 464, 299, 438, 273, 195, 335, 502,
	209, 426, 227, 216, 202, 451, 475, 224, 430, 0,
	0, 510, 204, 473, 448, 355, 296, 297, 203, 0,
	410, 248, 271, 238, 375, 470, 471, 236, 511, 213,
	491, 206, 0, 490, 368, 466, 474, 356, 347, 205,
	472, 354, 346, 302, 638, 639, 260, 282, 404, 340,
	405, 283, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 512, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 379, 403, 401, 407, 0,
	461, 478, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 367, 285, 440, 301, 338, 0, 0, 385, 419,
	225, 481, 441, 675, 667, 628, 679, 630, 676, 677,
	625, 626, 629, 678, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 670, 615, 614, 0, 621, 622, 0,
	631, 632, 634, 640, 641, 642, 650, 652, 653, 651,
	654, 655, 656, 659, 660, 661, 662, 657, 658, 663,
	613, 191, 207, 334, 0, 408, 268, 509, 489, 485,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 433, 434, 435, 436, 437, 445, 446,
	450, 468, 469, 480, 493, 498, 427, 277, 476, 499,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 488,
	447, 212, 415, 269, 201, 231, 215, 239, 254, 257,
	295, 353, 360, 389, 394, 274, 251, 229, 412, 226,
	431, 453, 454, 455, 457, 357, 246, 393, 0, 358,
	341, 459, 460, 287, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 612, 0, 0, 0, 250, 617, 0, 0, 0,
	332, 247, 0, 0, 390, 0, 197, 0, 432, 234,
	342, 339, 465, 262, 253, 249, 233, 288, 348, 388,
	452, 382, 624, 336, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 619, 620, 0, 0, 0, 0, 0,
	0, 1815, 0, 294, 232, 196, 373, 443, 266, 0,
	87, 0, 0, 188, 189, 190, 685, 692, 693, 694,
	695, 696, 686, 688, 0, 0, 223, 687, 230, 635,
	637, 636, 643, 644, 645, 646, 647, 648, 649, 633,
	690, 697, 698, 1816, 245, 292, 252, 244, 462, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 595, 609, 0, 623, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 607, 0, 0, 0, 0, 669,
	0, 608, 0, 0, 616, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 362, 237,
	0, 668, 0, 0, 495, 0, 0, 666, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 235, 0, 418, 386, 479,
	218, 264, 411, 392, 416, 399, 267, 0, 0, 417,
	337, 467, 406, 477, 496, 497, 243, 366, 486, 456,
	492, 508, 211, 240, 380, 449, 482, 439, 359, 463,
	464, 299, 438, 273, 195, 335, 502, 209, 426, 227,
	216, 202, 451, 475, 224, 430, 0, 0, 510, 204,
	473, 448, 355, 296, 297, 203, 0, 410, 248, 271,
	238, 375, 470, 471, 236, 511, 213, 491, 206, 0,
	490, 368, 466, 474, 356, 347, 205, 472, 354, 346,
	302, 638, 639, 260, 282, 404, 340, 405, 283, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 512,
	219, 220, 222, 0, 259, 263, 270, 272, 278, 279,
	286, 333, 379, 403, 401, 407, 0, 461, 478, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 367, 285,
	440, 301, 338, 0, 0, 385, 419, 225, 481, 441,
	675, 667, 628, 679, 630, 676, 677, 625, 626, 629,
	678, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	670, 615, 614, 0, 621, 622, 0, 631, 632, 634,
	640, 641, 642, 650, 652, 653, 651, 654, 655, 656,
	659, 660, 661, 662, 657, 658, 663, 613, 191, 207,
	334, 0, 408, 268, 509, 489, 485, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	433, 434, 435, 436, 437, 445, 446, 450, 468, 469,
	480, 493, 498, 427, 277, 476, 499, 0, 343, 0,
	0, 345, 261, 280, 291, 0, 488, 447, 212, 415,
	269, 201, 231, 215, 239, 254, 257, 295, 353, 360,
	389, 394, 274, 251, 229, 412, 226, 431, 453, 454,
	455, 457, 357, 246, 393, 0, 0, 341, 459, 460,
	287, 358, 0, 0, 0, 78, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 612, 0, 0, 0, 250, 617, 0,
	0, 0, 332, 247, 0, 0, 390, 0, 197, 0,
	432, 234, 342, 339, 465, 262, 253, 249, 233, 288,
	348, 388, 452, 382, 624, 336, 0, 0, 442, 361,
	0, 0, 0, 0, 0, 619, 620, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 373, 443,
	266, 0, 87, 0, 0, 188, 189, 190, 685, 692,
	693, 694, 695, 696, 686, 688, 0, 0, 223, 687,
	230, 635, 637, 636, 643, 644, 645, 646, 647, 648,
	649, 633, 690, 697, 698, 0, 245, 292, 252, 244,
	462, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 595, 609, 0, 623, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 607, 0, 0, 0,
	0, 669, 0, 608, 0, 0, 616, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	362, 237, 0, 668, 0, 0, 495, 0, 0, 666,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 372, 414, 420, 0, 0, 0, 235, 0, 418,
	386, 479, 218, 264, 411, 392, 416, 399, 267, 0,
	0, 417, 337, 467, 406, 477, 496, 497, 243, 366,
	486, 456, 492, 508, 211, 240, 380, 449, 482, 439,
	359, 463, 464, 299, 438, 273, 195, 335, 502, 209,
	426, 227, 216, 202, 451, 475, 224, 430, 0, 0,
	510, 204, 473, 448, 355, 296, 297, 203, 0, 410,
	248, 271, 238, 375, 470, 471, 236, 511, 213, 491,
	206, 0, 490, 368, 466, 474, 356, 347, 205, 472,
	354, 346, 302, 638, 639, 260, 282, 404, 340, 405,
	283, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 512, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 379, 403, 401, 407, 0, 461,
	478, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	367, 285, 440, 301, 338, 0, 0, 385, 419, 225,
	481, 441, 675, 667, 628, 679, 630, 676, 677, 625,
	626, 629, 678, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 670, 615, 614, 0, 621, 622, 0, 631,
	632, 634, 640, 641, 642, 650, 652, 653, 651, 654,
	655, 656, 659, 660, 661, 662, 657, 658, 663, 613,
	191, 207, 334, 86, 408, 268, 509, 489, 485, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 391, 395, 396, 397,
	398, 400, 402, 409, 413, 421, 422, 423, 424, 425,
	428, 429, 433, 434, 435, 436, 437, 445, 446, 450,
	468, 469, 480, 493, 498, 427, 277, 476, 499, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 488, 447,
	212, 415, 269, 201, 231, 215, 239, 254, 257, 295,
	353, 360, 389, 394, 274, 251, 229, 412, 226, 431,
	453, 454, 455, 457, 357, 246, 393, 0, 358, 341,
	459, 460, 287, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	612, 0, 0, 0, 250, 617, 0, 0, 0, 332,
	247, 0, 0, 390, 0, 197, 0, 432, 234, 342,
	339, 465, 262, 253, 249, 233, 288, 348, 388, 452,
	382, 624, 336, 0, 0, 442, 361, 0, 0, 0,
	0, 0, 619, 620, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 373, 443, 266, 0, 87,
	0, 0, 188, 189, 190, 685, 692, 693, 694, 695,
	696, 686, 688, 0, 0, 223, 687, 230, 635, 637,
	636, 643, 644, 645, 646, 647, 648, 649, 633, 690,
	697, 698, 0, 245, 292, 252, 244, 462, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	595, 609, 0, 623, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 606, 607, 0, 0, 0, 0, 669, 0,
	608, 0, 0, 616, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 618, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 362, 237, 0,
	668, 0, 0, 495, 0, 0, 666, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 372, 414,
	420, 0, 0, 0, 235, 0, 418, 386, 479, 218,
	264, 411, 392, 416, 399, 267, 2871, 0, 417, 337,
	467, 406, 477, 496, 497, 243, 366, 486, 456, 492,
	508, 211, 240, 380, 449, 482, 439, 359, 463, 464,
	299, 438, 273, 195, 335, 502, 209, 426, 227, 216,
	202, 451, 475, 224, 430, 0, 0, 510, 204, 473,
	448, 355, 296, 297, 203, 0, 410, 248, 271, 238,
	375, 470, 471, 236, 511, 213, 491, 206, 0, 490,
	368, 466, 474, 356, 347, 205, 472, 354, 346, 302,
	638, 639, 260, 282, 404, 340, 405, 283, 364, 363,
	365, 198, 483, 0, 199, 0, 444, 484, 512, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 379, 403, 401, 407, 0, 461, 478, 487, 494,
	500, 501, 503, 504, 505, 506, 507, 367, 285, 440,
	301, 338, 0, 0, 385, 419, 225, 481, 441, 675,
	667, 628, 679, 630, 676, 677, 625, 626, 629, 678,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 670,
	615, 614, 0, 621, 622, 0, 631, 632, 634, 640,
	641, 642, 650, 652, 653, 651, 654, 655, 656, 659,
	660, 661, 662, 657, 658, 663, 613, 191, 207, 334,
	0, 408, 268, 509, 489, 485, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 433,
	434, 435, 436, 437, 445, 446, 450, 468, 469, 480,
	493, 498, 427, 277, 476, 499, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 488, 447, 212, 415, 269,
	201, 231, 215, 239, 254, 257, 295, 353, 360, 389,
	394, 274, 251, 229, 412, 226, 431, 453, 454, 455,
	457, 357, 246, 393, 0, 358, 341, 459, 460, 287,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 612, 0, 0,
	0, 250, 617, 0, 0, 0, 332, 247, 0, 0,
	390, 0, 197, 0, 432, 234, 342, 339, 465, 262,
	253, 249, 233, 288, 348, 388, 452, 382, 624, 336,
	0, 0, 442, 361, 0, 0, 0, 0, 0, 619,
	620, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 373, 443, 266, 0, 87, 0, 1310, 188,
	189, 190, 685, 692, 693, 694, 695, 696, 686, 688,
	0, 0, 223, 687, 230, 635, 637, 636, 643, 644,
	645, 646, 647, 648, 649, 633, 690, 697, 698, 0,
	245, 292, 252, 244, 462, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 595, 609, 0,
	623, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 606,
	607, 0, 0, 0, 0, 669, 0, 608, 0, 0,
	616, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 362, 237, 0, 668, 0, 0,
	495, 0, 0, 666, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 372, 414, 420, 0, 0,
	0, 235, 0, 418, 386, 479, 218, 264, 411, 392,
	416, 399, 267, 0, 0, 417, 337, 467, 406, 477,
	496, 497, 243, 366, 486, 456, 492, 508, 211, 240,
	380, 449, 482, 439, 359, 463, 464, 299, 438, 273,
	195, 335, 502, 209, 426, 227, 216, 202, 451, 475,
	224, 430, 0, 0, 510, 204, 473, 448, 355, 296,
	297, 203, 0, 410, 248, 271, 238, 375, 470, 471,
	236, 511, 213, 491, 206, 0, 490, 368, 466, 474,
	356, 347, 205, 472, 354, 346, 302, 638, 639, 260,
	282, 404, 340, 405, 283, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 512, 219, 220, 222, 0,
	259, 263, 270, 272, 278, 279, 286, 333, 379, 403,
	401, 407, 0, 461, 478, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 367, 285, 440, 301, 338, 0,
	0, 385, 419, 225, 481, 441, 675, 667, 628, 679,
	630, 676, 677, 625, 626, 629, 678, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 0, 670, 615, 614, 0,
	621, 622, 0, 631, 632, 634, 640, 641, 642, 650,
	652, 653, 651, 654, 655, 656, 659, 660, 661, 662,
	657, 658, 663, 613, 191, 207, 334, 0, 408, 268,
	509, 489, 485, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 433, 434, 435, 436,
	437, 445, 446, 450, 468, 469, 480, 493, 498, 427,
	277, 476, 499, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 488, 447, 212, 415, 269, 201, 231, 215,
	239, 254, 257, 295, 353, 360, 389, 394, 274, 251,
	229, 412, 226, 431, 453, 454, 455, 457, 357, 246,
	393, 0, 358, 341, 459, 460, 287, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 612, 0, 0, 0, 250, 617,
	0, 0, 0, 332, 247, 0, 0, 390, 0, 197,
	0, 432, 234, 342, 339, 465, 262, 253, 249, 233,
	288, 348, 388, 452, 382, 624, 336, 0, 0, 442,
	361, 0, 0, 0, 0, 0, 619, 620, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 373,
	443, 266, 0, 87, 0, 0, 188, 189, 190, 685,
	692, 693, 694, 695, 696, 686, 688, 0, 0, 223,
	687, 230, 635, 637, 636, 643, 644, 645, 646, 647,
	648, 649, 633, 690, 697, 698, 0, 245, 292, 252,
	244, 462, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 595, 609, 0, 623, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 606, 607, 779, 0,
	0, 0, 669, 0, 608, 0, 0, 616, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 362, 237, 0, 668, 0, 0, 495, 0, 0,
	666, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 372, 414, 420, 0, 0, 0, 235, 0,
	418, 386, 479, 218, 264, 411, 392, 416, 399, 267,
	0, 0, 417, 337, 467, 406, 477, 496, 497, 243,
	366, 486, 456, 492, 508, 211, 240, 380, 449, 482,
	439, 359, 463, 464, 299, 438, 273, 195, 335, 502,
	209, 426, 227, 216, 202, 451, 475, 224, 430, 0,
	0, 510, 204, 473, 448, 355, 296, 297, 203, 0,
	410, 248, 271, 238, 375, 470, 471, 236, 511, 213,
	491, 206, 0, 490, 368, 466, 474, 356, 347, 205,
	472, 354, 346, 302, 638, 639, 260, 282, 404, 340,
	405, 283, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 512, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 379, 403, 401, 407, 0,
	461, 478, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 367, 285, 440, 301, 338, 0, 0, 385, 419,
	225, 481, 441, 675, 667, 628, 679, 630, 676, 677,
	625, 626, 629, 678, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 670, 615, 614, 0, 621, 622, 0,
	631, 632, 634, 640, 641, 642, 650, 652, 653, 651,
	654, 655, 656, 659, 660, 661, 662, 657, 658, 663,
	613, 191, 207, 334, 0, 408, 268, 509, 489, 485,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 433, 434, 435, 436, 437, 445, 446,
	450, 468, 469, 480, 493, 498, 427, 277, 476, 499,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 488,
	447, 212, 415, 269, 201, 231, 215, 239, 254, 257,
	295, 353, 360, 389, 394, 274, 251, 229, 412, 226,
	431, 453, 454, 455, 457, 357, 246, 393, 0, 358,
	341, 459, 460, 287, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 612, 0, 0, 0, 250, 617, 0, 0, 0,
	332, 247, 0, 0, 390, 0, 197, 0, 432, 234,
	342, 339, 465, 262, 253, 249, 233, 288, 348, 388,
	452, 382, 624, 336, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 619, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 373, 443, 266, 0,
	87, 0, 0, 188, 189, 190, 685, 692, 693, 694,
	695, 696, 686, 688, 0, 0, 223, 687, 230, 635,
	637, 636, 643, 644, 645, 646, 647, 648, 649, 633,
	690, 697, 698, 0, 245, 292, 252, 244, 462, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 595, 609, 0, 623, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 607, 0, 0, 0, 0, 669,
	0, 608, 0, 0, 616, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 362, 237,
	0, 668, 0, 0, 495, 0, 0, 666, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 235, 0, 418, 386, 479,
	218, 264, 411, 392, 416, 399, 267, 0, 0, 417,
	337, 467, 406, 477, 496, 497, 243, 366, 486, 456,
	492, 508, 211, 240, 380, 449, 482, 439, 359, 463,
	464, 299, 438, 273, 195, 335, 502, 209, 426, 227,
	216, 202, 451, 475, 224, 430, 0, 0, 510, 204,
	473, 448, 355, 296, 297, 203, 0, 410, 248, 271,
	238, 375, 470, 471, 236, 511, 213, 491, 206, 0,
	490, 368, 466, 474, 356, 347, 205, 472, 354, 346,
	302, 638, 639, 260, 282, 404, 340, 405, 283, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 512,
	219, 220, 222, 0, 259, 263, 270, 272, 278, 279,
	286, 333, 379, 403, 401, 407, 0, 461, 478, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 367, 285,
	440, 301, 338, 0, 0, 385, 419, 225, 481, 441,
	675, 667, 628, 679, 630, 676, 677, 625, 626, 629,
	678, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	670, 615, 614, 0, 621, 622, 0, 631, 632, 634,
	640, 641, 642, 650, 652, 653, 651, 654, 655, 656,
	659, 660, 661, 662, 657, 658, 663, 613, 191, 207,
	334, 0, 408, 268, 509, 489, 485, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	433, 434, 435, 436, 437, 445, 446, 450, 468, 469,
	480, 493, 498, 427, 277, 476, 499, 0, 343, 0,
	0, 345, 261, 280, 291, 0, 488, 447, 212, 415,
	269, 201, 231, 215, 239, 254, 257, 295, 353, 360,
	389, 394, 274, 251, 229, 412, 226, 431, 453, 454,
	455, 457, 357, 246, 393, 0, 358, 341, 459, 460,
	287, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 612, 0,
	0, 0, 250, 617, 0, 0, 0, 332, 247, 0,
	0, 390, 0, 197, 0, 432, 234, 342, 339, 465,
	262, 253, 249, 233, 288, 348, 388, 452, 382, 624,
	336, 0, 0, 442, 361, 0, 0, 0, 0, 0,
	619, 620, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 232, 196, 373, 443, 266, 0, 87, 0, 0,
	188, 189, 190, 685, 692, 693, 694, 695, 696, 686,
	688, 0, 0, 223, 687, 230, 635, 637, 636, 643,
	644, 645, 646, 647, 648, 649, 633, 690, 697, 698,
	0, 245, 292, 252, 244, 462, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 609,
	0, 623, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 607, 0, 0, 0, 0, 669, 0, 608, 0,
	0, 616, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 362, 237, 0, 668, 0,
	0, 495, 0, 0, 666, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 235, 0, 418, 386, 479, 218, 264, 411,
	392, 416, 399, 267, 0, 0, 417, 337, 467, 406,
	477, 496, 497, 243, 366, 486, 456, 492, 508, 211,
	240, 380, 449, 482, 439, 359, 463, 464, 299, 438,
	273, 195, 335, 502, 209, 426, 227, 216, 202, 451,
	475, 224, 430, 0, 0, 510, 204, 473, 448, 355,
	296, 297, 203, 0, 410, 248, 271, 238, 375, 470,
	471, 236, 511, 213, 491, 206, 0, 490, 368, 466,
	474, 356, 347, 205, 472, 354, 346, 302, 638, 639,
	260, 282, 404, 340, 405, 283, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 512, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 379,
	403, 401, 407, 0, 461, 478, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 367, 285, 440, 301, 338,
	0, 0, 385, 419, 225, 481, 441, 675, 667, 628,
	679, 630, 676, 677, 625, 626, 629, 678, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 670, 615, 614,
	0, 621, 622, 0, 631, 632, 634, 640, 641, 642,
	650, 652, 653, 651, 654, 655, 656, 659, 660, 661,
	662, 657, 658, 663, 613, 191, 207, 334, 0, 408,
	268, 509, 489, 485, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 433, 434, 435,
	436, 437, 445, 446, 450, 468, 469, 480, 493, 498,
	427, 277, 476, 499, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 488, 447, 212, 415, 269, 201, 231,
	215, 239, 254, 257, 295, 353, 360, 389, 394, 274,
	251, 229, 412, 226, 431, 453, 454, 455, 457, 357,
	246, 393, 0, 358, 341, 459, 460, 287, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 390, 0,
	197, 0, 432, 234, 342, 339, 465, 262, 253, 249,
	233, 288, 348, 388, 452, 382, 0, 336, 0, 0,
	442, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	373, 443, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 692, 693, 0, 0, 0, 0, 1652, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 462, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 362, 237, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 372, 414, 420, 0, 0, 0, 235,
	0, 418, 386, 479, 218, 264, 411, 392, 416, 399,
	267, 0, 0, 417, 337, 467, 406, 477, 496, 497,
	243, 366, 486, 456, 492, 508, 211, 240, 380, 449,
	482, 439, 359, 463, 464, 299, 438, 273, 195, 335,
	502, 209, 426, 227, 216, 202, 451, 475, 224, 430,
	0, 0, 510, 204, 473, 448, 355, 296, 297, 203,
	0, 410, 248, 271, 238, 375, 470, 471, 236, 511,
	213, 491, 206, 0, 490, 368, 466, 474, 356, 347,
	205, 472, 354, 346, 302, 321, 322, 260, 282, 404,
	340, 405, 283, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 512, 219, 220, 222, 0, 259, 263,
	270, 272, 278, 279, 286, 333, 379, 403, 401, 407,
	0, 461, 478, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 367, 285, 440, 301, 338, 0, 0, 385,
	419, 225, 481, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 303, 315, 318, 308, 327, 0,
	328, 304, 305, 310, 312, 313, 314, 319, 320, 324,
	330, 0, 191, 207, 334, 0, 408, 268, 509, 489,
	485, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 433, 434, 435, 436, 437, 445,
	446, 450, 468, 469, 480, 493, 498, 427, 277, 476,
	499, 0, 343, 0, 0, 345, 261, 280, 291, 0,
	488, 447, 212, 415, 269, 201, 231, 215, 239, 254,
	257, 295, 353, 360, 389, 394, 274, 251, 229, 412,
	226, 431, 453, 454, 455, 457, 357, 246, 393, 0,
	358, 341, 459, 460, 287, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 332, 247, 0, 0, 390, 0, 197, 0, 432,
	234, 342, 339, 465, 262, 253, 249, 233, 288, 348,
	388, 452, 382, 0, 336, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 232, 196, 373, 443, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 245, 292, 252, 244, 462,
	0, 0, 0, 0, 214, 0, 995, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 362,
	237, 0, 0, 0, 994, 495, 0, 0, 0, 0,
	0, 991, 992, 331, 952, 300, 192, 210, 985, 989,
	372, 414, 420, 0, 0, 0, 235, 0, 418, 386,
	479, 218, 264, 411, 392, 416, 399, 267, 0, 0,
	417, 337, 467, 406, 477, 496, 497, 243, 366, 486,
	456, 492, 508, 211, 240, 380, 449, 482, 439, 359,
	463, 464, 299, 438, 273, 195, 335, 502, 209, 426,
	227, 216, 202, 451, 475, 224, 430, 0, 0, 510,
	204, 473, 448, 355, 296, 297, 203, 0, 410, 248,
	271, 238, 375, 470, 471, 236, 511, 213, 491, 206,
	0, 490, 368, 466, 474, 356, 347, 205, 472, 354,
	346, 302, 321, 322, 260, 282, 404, 340, 405, 283,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	512, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 379, 403, 401, 407, 0, 461, 478,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 367,
	285, 440, 301, 338, 0, 0, 385, 419, 225, 481,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 408, 268, 509, 489, 485, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 391, 395, 396, 397, 398,
	400, 402, 409, 413, 421, 422, 423, 424, 425, 428,
	429, 433, 434, 435, 436, 437, 445, 446, 450, 468,
	469, 480, 493, 498, 427, 277, 476, 499, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 488, 447, 212,
	415, 269, 201, 231, 215, 239, 254, 257, 295, 353,
	360, 389, 394, 274, 251, 229, 412, 226, 431, 453,
	454, 455, 457, 357, 246, 393, 0, 1329, 341, 459,
	460, 287, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 1331, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 390, 0, 197, 0, 432, 234, 342, 339,
	465, 262, 253, 249, 233, 288, 348, 388, 452, 382,
	0, 336, 0, 0, 442, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 373, 443, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 462, 0, 0, 0,
	0, 214, 0, 0, 0, 1165, 0, 1166, 1167, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 362, 237, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 372, 414, 420,
	0, 0, 0, 235, 0, 418, 386, 479, 218, 264,
	411, 392, 416, 399, 267, 0, 0, 417, 337, 467,
	406, 477, 496, 497, 243, 366, 486, 456, 492, 508,
	211, 240, 380, 449, 482, 439, 359, 463, 464, 299,
	438, 273, 195, 335, 502, 209, 426, 227, 216, 202,
	451, 475, 224, 430, 0, 0, 510, 204, 473, 448,
	355, 296, 297, 203, 0, 410, 248, 271, 238, 375,
	470, 471, 236, 511, 213, 491, 206, 0, 490, 368,
	466, 474, 356, 347, 205, 472, 354, 346, 302, 321,
	322, 260, 282, 404, 340, 405, 283, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 512, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	379, 403, 401, 407, 0, 461, 478, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 367, 285, 440, 301,
	338, 0, 0, 385, 419, 225, 481, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 0, 191, 207, 334, 0,
	408, 268, 509, 489, 485, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	276, 281, 284, 289, 290, 293, 298, 344, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 433, 434,
	435, 436, 437, 445, 446, 450, 468, 469, 480, 493,
	498, 427, 277, 476, 499, 0, 343, 0, 0, 345,
	261, 280, 291, 0, 488, 447, 212, 415, 269, 201,
	231, 215, 239, 254, 257, 295, 353, 360, 389, 394,
	274, 251, 229, 412, 226, 431, 453, 454, 455, 457,
	357, 246, 393, 0, 358, 341, 459, 460, 287, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 332, 247, 0, 0, 390,
	0, 197, 0, 432, 234, 342, 339, 465, 262, 253,
	249, 233, 288, 348, 388, 452, 382, 0, 336, 0,
	0, 442, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 232,
	196, 373, 443, 266, 0, 0, 0, 0, 188, 189,
	190, 1272, 1275, 0, 0, 0, 0, 1271, 1274, 0,
	0, 223, 1270, 230, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 0, 0, 0, 0, 0, 245,
	292, 252, 244, 462, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 362, 237, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 372, 414, 420, 0, 0, 0,
	235, 0, 418, 386, 479, 218, 264, 411, 392, 416,
	399, 267, 0, 0, 417, 337, 467, 406, 477, 496,
	497, 243, 366, 486, 456, 492, 508, 211, 240, 380,
	449, 482, 439, 359, 463, 464, 299, 438, 273, 195,
	335, 502, 209, 426, 227, 216, 202, 451, 475, 224,
	430, 0, 0, 510, 204, 473, 448, 355, 296, 297,
	203, 0, 410, 248, 271, 238, 375, 470, 471, 236,
	511, 213, 491, 206, 0, 490, 368, 466, 474, 356,
	347, 205, 472, 354, 346, 302, 321, 322, 260, 282,
	404, 340, 405, 283, 364, 363, 365, 198, 483, 0,
	199, 0, 444, 484, 512, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 379, 403, 401,
	407, 0, 461, 478, 487, 494, 500, 501, 503, 504,
	505, 506, 507, 367, 285, 440, 301, 338, 0, 0,
	385, 419, 225, 481, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 408, 268, 509,
	489, 485, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 391,
	395, 396, 397, 398, 400, 402, 409, 413, 421, 422,
	423, 424, 425, 428, 429, 433, 434, 435, 436, 437,
	445, 446, 450, 468, 469, 480, 493, 498, 427, 277,
	476, 499, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 488, 447, 212, 415, 269, 201, 231, 215, 239,
	254, 257, 295, 353, 360, 389, 394, 274, 251, 229,
	412, 226, 431, 453, 454, 455, 457, 357, 246, 393,
	0, 0, 341, 459, 460, 287, 358, 0, 0, 0,
	78, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 332, 247, 0,
	0, 390, 0, 197, 0, 432, 234, 342, 339, 465,
	262, 253, 249, 233, 288, 348, 388, 452, 382, 0,
	336, 0, 0, 442, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 232, 196, 373, 443, 266, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 245, 292, 252, 244, 462, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 362, 237, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 235, 0, 418, 386, 479, 218, 264, 411,
	392, 416, 399, 267, 0, 0, 417, 337, 467, 406,
	477, 496, 497, 243, 366, 486, 456, 492, 508, 211,
	240, 380, 449, 482, 439, 359, 463, 464, 299, 438,
	273, 195, 335, 502, 209, 426, 227, 216, 202, 451,
	475, 224, 430, 0, 0, 510, 204, 473, 448, 355,
	296, 297, 203, 0, 410, 248, 271, 238, 375, 470,
	471, 236, 511, 213, 491, 206, 0, 490, 368, 466,
	474, 356, 347, 205, 472, 354, 346, 302, 321, 322,
	260, 282, 404, 340, 405, 283, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 512, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 379,
	403, 401, 407, 0, 461, 478, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 367, 285, 440, 301, 338,
	0, 0, 385, 419, 225, 481, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 86, 408,
	268, 509, 489, 485, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 433, 434, 435,
	436, 437, 445, 446, 450, 468, 469, 480, 493, 498,
	427, 277, 476, 499, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 488, 447, 212, 415, 269, 201, 231,
	215, 239, 254, 257, 295, 353, 360, 389, 394, 274,
	251, 229, 412, 226, 431, 453, 454, 455, 457, 357,
	246, 393, 0, 0, 341, 459, 460, 287, 358, 0,
	0, 0, 78, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 390, 0, 197, 0, 432, 234, 342,
	339, 465, 262, 253, 249, 233, 288, 348, 388, 452,
	382, 0, 336, 0, 0, 442, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 373, 443, 266, 0, 87,
	0, 1310, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 462, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 362, 237, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 372, 414,
	420, 0, 0, 0, 235, 0, 418, 386, 479, 218,
	264, 411, 392, 416, 399, 267, 0, 0, 417, 337,
	467, 406, 477, 496, 497, 243, 366, 486, 456, 492,
	508, 211, 240, 380, 449, 482, 439, 359, 463, 464,
	299, 438, 273, 195, 335, 502, 209, 426, 227, 216,
	202, 451, 475, 224, 430, 0, 0, 510, 204, 473,
	448, 355, 296, 297, 203, 0, 410, 248, 271, 238,
	375, 470, 471, 236, 511, 213, 491, 206, 0, 490,
	368, 466, 474, 356, 347, 205, 472, 354, 346, 302,
	321, 322, 260, 282, 404, 340, 405, 283, 364, 363,
	365, 198, 483, 0, 199, 0, 444, 484, 512, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 379, 403, 401, 407, 0, 461, 478, 487, 494,
	500, 501, 503, 504, 505, 506, 507, 367, 285, 440,
	301, 338, 0, 0, 385, 419, 225, 481, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	86, 408, 268, 509, 489, 485, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 433,
	434, 435, 436, 437, 445, 446, 450, 468, 469, 480,
	493, 498, 427, 277, 476, 499, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 488, 447, 212, 415, 269,
	201, 231, 215, 239, 254, 257, 295, 353, 360, 389,
	394, 274, 251, 229, 412, 226, 431, 453, 454, 455,
	457, 357, 246, 393, 0, 358, 341, 459, 460, 287,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 1756, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	390, 0, 197, 0, 432, 234, 342, 339, 465, 262,
	253, 249, 233, 288, 348, 388, 452, 382, 0, 336,
	0, 0, 442, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 373, 443, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 462, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 362, 237, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 372, 414, 420, 0, 0,
	0, 235, 0, 418, 386, 479, 218, 264, 411, 392,
	416, 399, 267, 0, 1754, 417, 337, 467, 406, 477,
	496, 497, 243, 366, 486, 456, 492, 508, 211, 240,
	380, 449, 482, 439, 359, 463, 464, 299, 438, 273,
	195, 335, 502, 209, 426, 227, 216, 202, 451, 475,
	224, 430, 0, 0, 510, 204, 473, 448, 355, 296,
	297, 203, 0, 410, 248, 271, 238, 375, 470, 471,
	236, 511, 213, 491, 206, 0, 490, 368, 466, 474,
	356, 347, 205, 472, 354, 346, 302, 321, 322, 260,
	282, 404, 340, 405, 283, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 512, 219, 220, 222, 0,
	259, 263, 270, 272, 278, 279, 286, 333, 379, 403,
	401, 407, 0, 461, 478, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 367, 285, 440, 301, 338, 0,
	0, 385, 419, 225, 481, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 408, 268,
	509, 489, 485, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 433, 434, 435, 436,
	437, 445, 446, 450, 468, 469, 480, 493, 498, 427,
	277, 476, 499, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 488, 447, 212, 415, 269, 201, 231, 215,
	239, 254, 257, 295, 353, 360, 389, 394, 274, 251,
	229, 412, 226, 431, 453, 454, 455, 457, 357, 246,
	393, 0, 358, 341, 459, 460, 287, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 390, 0, 197,
	0, 432, 234, 342, 339, 465, 262, 253, 249, 233,
	288, 348, 388, 452, 382, 0, 336, 0, 0, 442,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 373,
	443, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 462, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	946, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 362, 237, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 331, 952, 300, 192, 210,
	950, 0, 372, 414, 420, 0, 0, 0, 235, 0,
	418, 386, 479, 218, 264, 411, 392, 416, 399, 267,
	0, 0, 417, 337, 467, 406, 477, 496, 497, 243,
	366, 486, 456, 492, 508, 211, 240, 380, 449, 482,
	439, 359, 463, 464, 299, 438, 273, 195, 335, 502,
	209, 426, 227, 216, 202, 451, 475, 224, 430, 0,
	0, 510, 204, 473, 448, 355, 296, 297, 203, 0,
	410, 248, 271, 238, 375, 470, 471, 236, 511, 213,
	491, 206, 0, 490, 368, 466, 474, 356, 347, 205,
	472, 354, 346, 302, 321, 322, 260, 282, 404, 340,
	405, 283, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 512, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 379, 403, 401, 407, 0,
	461, 478, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 367, 285, 440, 301, 338, 0, 0, 385, 419,
	225, 481, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 408, 268, 509, 489, 485,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 433, 434, 435, 436, 437, 445, 446,
	450, 468, 469, 480, 493, 498, 427, 277, 476, 499,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 488,
	447, 212, 415, 269, 201, 231, 215, 239, 254, 257,
	295, 353, 360, 389, 394, 274, 251, 229, 412, 226,
	431, 453, 454, 455, 457, 357, 246, 393, 0, 358,
	341, 459, 460, 287, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	1756, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 390, 0, 197, 0, 432, 234,
	342, 339, 465, 262, 253, 249, 233, 288, 348, 388,
	452, 382, 0, 336, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 373, 443, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 462, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 362, 237,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 235, 0, 418, 386, 479,
	218, 264, 411, 392, 416, 399, 267, 0, 0, 417,
	337, 467, 406, 477, 496, 497, 243, 366, 486, 456,
	492, 508, 211, 240, 380, 449, 482, 439, 359, 463,
	464, 299, 438, 273, 195, 335, 502, 209, 426, 227,
	216, 202, 451, 475, 224, 430, 0, 0, 510, 204,
	473, 448, 355, 296, 297, 203, 0, 410, 248, 271,
	238, 375, 470, 471, 236, 511, 213, 491, 206, 0,
	490, 368, 466, 474, 356, 347, 205, 472, 354, 346,
	302, 321, 322, 260, 282, 404, 340, 405, 283, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 512,
	219, 220, 222, 0, 259, 263, 270, 272, 278, 279,
	286, 333, 379, 403, 401, 407, 0, 461, 478, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 367, 285,
	440, 301, 338, 0, 0, 385, 419, 225, 481, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	303, 315, 318, 308, 327, 0, 328, 304, 305, 310,
	312, 313, 314, 319, 320, 324, 330, 0, 191, 207,
	334, 0, 408, 268, 509, 489, 485, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	433, 434, 435, 436, 437, 445, 446, 450, 468, 469,
	480, 493, 498, 427, 277, 476, 499, 0, 343, 0,
	0, 345, 261, 280, 291, 0, 488, 447, 212, 415,
	269, 201, 231, 215, 239, 254, 257, 295, 353, 360,
	389, 394, 274, 251, 229, 412, 226, 431, 453, 454,
	455, 457, 357, 246, 393, 0, 358, 341, 459, 460,
	287, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 332, 247, 0,
	0, 390, 0, 197, 0, 432, 234, 342, 339, 465,
	262, 253, 249, 233, 288, 348, 388, 452, 382, 0,
	336, 0, 0, 442, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 232, 196, 373, 443, 266, 0, 0, 0, 1310,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 245, 292, 252, 244, 462, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 362, 237, 0, 0, 0,
	0, 495, 0, 0, 0, 2799, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 235, 0, 418, 386, 479, 218, 264, 411,
	392, 416, 399, 267, 0, 0, 417, 337, 467, 406,
	477, 496, 497, 243, 366, 486, 456, 492, 508, 211,
	240, 380, 449, 482, 439, 359, 463, 464, 299, 438,
	273, 195, 335, 502, 209, 426, 227, 216, 202, 451,
	475, 224, 430, 0, 0, 510, 204, 473, 448, 355,
	296, 297, 203, 0, 410, 248, 271, 238, 375, 470,
	471, 236, 511, 213, 491, 206, 0, 490, 368, 466,
	474, 356, 347, 205, 472, 354, 346, 302, 321, 322,
	260, 282, 404, 340, 405, 283, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 512, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 379,
	403, 401, 407, 0, 461, 478, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 367, 285, 440, 301, 338,
	0, 0, 385, 419, 225, 481, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 408,
	268, 509, 489, 485, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 433, 434, 435,
	436, 437, 445, 446, 450, 468, 469, 480, 493, 498,
	427, 277, 476, 499, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 488, 447, 212, 415, 269, 201, 231,
	215, 239, 254, 257, 295, 353, 360, 389, 394, 274,
	251, 229, 412, 226, 431, 453, 454, 455, 457, 357,
	246, 393, 0, 358, 341, 459, 460, 287, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 390, 0,
	197, 0, 432, 234, 342, 339, 465, 262, 253, 249,
	233, 288, 348, 388, 452, 382, 0, 336, 0, 0,
	442, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	373, 443, 266, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 462, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 362, 237, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 372, 414, 420, 0, 0, 0, 235,
	0, 418, 386, 479, 218, 264, 411, 392, 416, 399,
	267, 0, 0, 417, 337, 467, 406, 477, 496, 497,
	243, 366, 486, 456, 492, 508, 211, 240, 380, 449,
	482, 439, 359, 463, 464, 299, 438, 273, 195, 335,
	502, 209, 426, 227, 216, 202, 451, 475, 224, 430,
	0, 0, 510, 204, 473, 448, 355, 296, 297, 203,
	0, 410, 248, 271, 238, 375, 470, 471, 236, 511,
	213, 491, 206, 0, 490, 368, 466, 474, 356, 347,
	205, 472, 354, 346, 302, 321, 322, 260, 282, 404,
	340, 405, 283, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 512, 219, 220, 222, 0, 259, 263,
	270, 272, 278, 279, 286, 333, 379, 403, 401, 407,
	0, 461, 478, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 367, 285, 440, 301, 338, 0, 0, 385,
	419, 225, 481, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 303, 315, 318, 308, 327, 0,
	328, 304, 305, 310, 312, 313, 314, 319, 320, 324,
	330, 0, 191, 207, 334, 0, 408, 268, 509, 489,
	485, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 433, 434, 435, 436, 437, 445,
	446, 450, 468, 469, 480, 493, 498, 427, 277, 476,
	499, 0, 343, 0, 0, 345, 261, 280, 291, 0,
	488, 447, 212, 415, 269, 201, 231, 215, 239, 254,
	257, 295, 353, 360, 389, 394, 274, 251, 229, 412,
	226, 431, 453, 454, 455, 457, 357, 246, 393, 0,
	358, 341, 459, 460, 287, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 332, 247, 0, 0, 390, 0, 197, 0, 432,
	234, 342, 339, 465, 262, 253, 249, 233, 288, 348,
	388, 452, 382, 0, 336, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 232, 196, 373, 443, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 2085, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 245, 292, 252, 244, 462,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 362,
	237, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	372, 414, 420, 0, 0, 0, 235, 0, 418, 386,
	479, 218, 264, 411, 392, 416, 399, 267, 0, 0,
	417, 337, 467, 406, 477, 496, 497, 243, 366, 486,
	456, 492, 508, 211, 240, 380, 449, 482, 439, 359,
	463, 464, 299, 438, 273, 195, 335, 502, 209, 426,
	227, 216, 202, 451, 475, 224, 430, 0, 0, 510,
	204, 473, 448, 355, 296, 297, 203, 0, 410, 248,
	271, 238, 375, 470, 471, 236, 511, 213, 491, 206,
	0, 490, 368, 466, 474, 356, 347, 205, 472, 354,
	346, 302, 321, 322, 260, 282, 404, 340, 405, 283,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	512, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 379, 403, 401, 407, 0, 461, 478,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 367,
	285, 440, 301, 338, 0, 0, 385, 419, 225, 481,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 408, 268, 509, 489, 485, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 391, 395, 396, 397, 398,
	400, 402, 409, 413, 421, 422, 423, 424, 425, 428,
	429, 433, 434, 435, 436, 437, 445, 446, 450, 468,
	469, 480, 493, 498, 427, 277, 476, 499, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 488, 447, 212,
	415, 269, 201, 231, 215, 239, 254, 257, 295, 353,
	360, 389, 394, 274, 251, 229, 412, 226, 431, 453,
	454, 455, 457, 357, 246, 393, 0, 358, 341, 459,
	460, 287, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 390, 0, 197, 0, 432, 234, 342, 339,
	465, 262, 253, 249, 233, 288, 348, 388, 452, 382,
	0, 336, 0, 0, 442, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 373, 443, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 2070, 0, 0,
	0, 2071, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 462, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 362, 237, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 372, 414, 420,
	0, 0, 0, 235, 0, 418, 386, 479, 218, 264,
	411, 392, 416, 399, 267, 0, 0, 417, 337, 467,
	406, 477, 496, 497, 243, 366, 486, 456, 492, 508,
	211, 240, 380, 449, 482, 439, 359, 463, 464, 299,
	438, 273, 195, 335, 502, 209, 426, 227, 216, 202,
	451, 475, 224, 430, 0, 0, 510, 204, 473, 448,
	355, 296, 297, 203, 0, 410, 248, 271, 238, 375,
	470, 471, 236, 511, 213, 491, 206, 0, 490, 368,
	466, 474, 356, 347, 205, 472, 354, 346, 302, 321,
	322, 260, 282, 404, 340, 405, 283, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 512, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	379, 403, 401, 407, 0, 461, 478, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 367, 285, 440, 301,
	338, 0, 0, 385, 419, 225, 481, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 0, 191, 207, 334, 0,
	408, 268, 509, 489, 485, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	276, 281, 284, 289, 290, 293, 298, 344, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 433, 434,
	435, 436, 437, 445, 446, 450, 468, 469, 480, 493,
	498, 427, 277, 476, 499, 0, 343, 0, 0, 345,
	261, 280, 291, 0, 488, 447, 212, 415, 269, 201,
	231, 215, 239, 254, 257, 295, 353, 360, 389, 394,
	274, 251, 229, 412, 226, 431, 453, 454, 455, 457,
	357, 246, 393, 0, 358, 341, 459, 460, 287, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 1354, 0, 0, 0, 332, 247, 0, 0, 390,
	0, 197, 0, 432, 234, 342, 339, 465, 262, 253,
	249, 233, 288, 348, 388, 452, 382, 0, 336, 0,
	0, 442, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 232,
	196, 373, 443, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 0, 0, 0, 0, 0, 245,
	292, 252, 244, 462, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 362, 237, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 372, 414, 420, 0, 0, 0,
	235, 0, 418, 386, 479, 218, 264, 411, 392, 416,
	399, 267, 0, 0, 417, 337, 467, 406, 477, 496,
	497, 243, 366, 486, 456, 492, 508, 211, 240, 380,
	449, 482, 439, 359, 463, 464, 299, 438, 273, 195,
	335, 502, 209, 426, 227, 216, 202, 451, 475, 224,
	430, 0, 0, 510, 204, 473, 448, 355, 296, 297,
	203, 0, 410, 248, 271, 238, 375, 470, 471, 236,
	511, 213, 491, 206, 0, 490, 368, 466, 474, 356,
	347, 205, 472, 354, 346, 302, 321, 322, 260, 282,
	404, 340, 405, 283, 364, 363, 365, 198, 483, 0,
	199, 0, 444, 484, 512, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 379, 403, 401,
	407, 0, 461, 478, 487, 494, 500, 501, 503, 504,
	505, 506, 507, 367, 285, 440, 301, 338, 0, 0,
	385, 419, 225, 481, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 408, 268, 509,
	489, 485, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 391,
	395, 396, 397, 398, 400, 402, 409, 413, 421, 422,
	423, 424, 425, 428, 429, 433, 434, 435, 436, 437,
	445, 446, 450, 468, 469, 480, 493, 498, 427, 277,
	476, 499, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 488, 447, 212, 415, 269, 201, 231, 215, 239,
	254, 257, 295, 353, 360, 389, 394, 274, 251, 229,
	412, 226, 431, 453, 454, 455, 457, 357, 246, 393,
	0, 358, 341, 459, 460, 287, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 390, 0, 197, 0,
	432, 234, 342, 339, 465, 262, 253, 249, 233, 288,
	348, 388, 452, 382, 0, 336, 0, 0, 442, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 373, 443,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	462, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	362, 237, 0, 0, 0, 0, 495, 0, 0, 0,
	2892, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 372, 414, 420, 0, 0, 0, 235, 0, 418,
	386, 479, 218, 264, 411, 392, 416, 399, 267, 0,
	0, 417, 337, 467, 406, 477, 496, 497, 243, 366,
	486, 456, 492, 508, 211, 240, 380, 449, 482, 439,
	359, 463, 464, 299, 438, 273, 195, 335, 502, 209,
	426, 227, 216, 202, 451, 475, 224, 430, 0, 0,
	510, 204, 473, 448, 355, 296, 297, 203, 0, 410,
	248, 271, 238, 375, 470, 471, 236, 511, 213, 491,
	206, 0, 490, 368, 466, 474, 356, 347, 205, 472,
	354, 346, 302, 321, 322, 260, 282, 404, 340, 405,
	283, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 512, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 379, 403, 401, 407, 0, 461,
	478, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	367, 285, 440, 301, 338, 0, 0, 385, 419, 225,
	481, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 408, 268, 509, 489, 485, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 391, 395, 396, 397,
	398, 400, 402, 409, 413, 421, 422, 423, 424, 425,
	428, 429, 433, 434, 435, 436, 437, 445, 446, 450,
	468, 469, 480, 493, 498, 427, 277, 476, 499, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 488, 447,
	212, 415, 269, 201, 231, 215, 239, 254, 257, 295,
	353, 360, 389, 394, 274, 251, 229, 412, 226, 431,
	453, 454, 455, 457, 357, 246, 393, 0, 358, 341,
	459, 460, 287, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 390, 0, 197, 0, 432, 234, 342,
	339, 465, 262, 253, 249, 233, 288, 348, 388, 452,
	382, 0, 336, 0, 0, 442, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 373, 443, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 462, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 362, 237, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 372, 414,
	420, 0, 0, 0, 235, 0, 418, 386, 479, 218,
	264, 411, 392, 416, 399, 267, 0, 0, 417, 337,
	467, 406, 477, 496, 497, 243, 366, 486, 456, 492,
	508, 211, 240, 380, 449, 482, 439, 359, 463, 464,
	299, 438, 273, 195, 335, 502, 209, 426, 227, 216,
	202, 451, 475, 224, 430, 0, 0, 510, 204, 473,
	448, 355, 296, 297, 203, 0, 410, 248, 271, 238,
	375, 470, 471, 236, 511, 213, 491, 206, 0, 490,
	368, 466, 474, 356, 347, 205, 472, 354, 346, 302,
	321, 322, 260, 282, 404, 340, 405, 283, 364, 363,
	365, 198, 483, 0, 199, 0, 444, 484, 512, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 379, 403, 401, 407, 0, 461, 478, 487, 494,
	500, 501, 503, 504, 505, 506, 507, 367, 285, 440,
	301, 338, 0, 0, 385, 419, 225, 481, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 408, 268, 509, 489, 485, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 433,
	434, 435, 436, 437, 445, 446, 450, 468, 469, 480,
	493, 498, 427, 277, 476, 499, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 488, 447, 212, 415, 269,
	201, 231, 215, 239, 254, 257, 295, 353, 360, 389,
	394, 274, 251, 229, 412, 226, 431, 453, 454, 455,
	457, 357, 246, 393, 0, 358, 341, 459, 460, 287,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	390, 0, 197, 0, 432, 234, 342, 339, 465, 262,
	253, 249, 233, 288, 348, 388, 452, 382, 0, 336,
	0, 0, 442, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 373, 443, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 462, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 362, 237, 0, 0, 0, 0,
	495, 0, 0, 0, 2799, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 372, 414, 420, 0, 0,
	0, 235, 0, 418, 386, 479, 218, 264, 411, 392,
	416, 399, 267, 0, 0, 417, 337, 467, 406, 477,
	496, 497, 243, 366, 486, 456, 492, 508, 211, 240,
	380, 449, 482, 439, 359, 463, 464, 299, 438, 273,
	195, 335, 502, 209, 426, 227, 216, 202, 451, 475,
	224, 430, 0, 0, 510, 204, 473, 448, 355, 296,
	297, 203, 0, 410, 248, 271, 238, 375, 470, 471,
	236, 511, 213, 491, 206, 0, 490, 368, 466, 474,
	356, 347, 205, 472, 354, 346, 302, 321, 322, 260,
	282, 404, 340, 405, 283, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 512, 219, 220, 222, 0,
	259, 263, 270, 272, 278, 279, 286, 333, 379, 403,
	401, 407, 0, 461, 478, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 367, 285, 440, 301, 338, 0,
	0, 385, 419, 225, 481, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 408, 268,
	509, 489, 485, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 433, 434, 435, 436,
	437, 445, 446, 450, 468, 469, 480, 493, 498, 427,
	277, 476, 499, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 488, 447, 212, 415, 269, 201, 231, 215,
	239, 254, 257, 295, 353, 360, 389, 394, 274, 251,
	229, 412, 226, 431, 453, 454, 455, 457, 357, 246,
	393, 0, 358, 341, 459, 460, 287, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 390, 0, 197,
	0, 432, 234, 342, 339, 465, 262, 253, 249, 233,
	288, 348, 388, 452, 382, 0, 336, 0, 0, 442,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 373,
	443, 266, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 462, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 362, 237, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 372, 414, 420, 0, 0, 0, 235, 0,
	418, 386, 479, 218, 264, 411, 392, 416, 399, 267,
	0, 0, 417, 337, 467, 406, 477, 496, 497, 243,
	366, 486, 456, 492, 508, 211, 240, 380, 449, 482,
	439, 359, 463, 464, 299, 438, 273, 195, 335, 502,
	209, 426, 227, 216, 202, 451, 475, 224, 430, 0,
	0, 510, 204, 473, 448, 355, 296, 297, 203, 0,
	410, 248, 271, 238, 375, 470, 471, 236, 511, 213,
	491, 206, 0, 490, 368, 466, 474, 356, 347, 205,
	472, 354, 346, 302, 321, 322, 260, 282, 404, 340,
	405, 283, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 512, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 379, 403, 401, 407, 0,
	461, 478, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 367, 285, 440, 301, 338, 0, 0, 385, 419,
	225, 481, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 408, 268, 509, 489, 485,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 433, 434, 435, 436, 437, 445, 446,
	450, 468, 469, 480, 493, 498, 427, 277, 476, 499,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 488,
	447, 212, 415, 269, 201, 231, 215, 239, 254, 257,
	295, 353, 360, 389, 394, 274, 251, 229, 412, 226,
	431, 453, 454, 455, 457, 357, 246, 393, 0, 358,
	341, 459, 460, 287, 458, 0, 0, 0, 0, 1804,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 390, 0, 197, 0, 432, 234,
	342, 339, 465, 262, 253, 249, 233, 288, 348, 388,
	452, 382, 0, 336, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 373, 443, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 462, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 362, 237,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 235, 0, 418, 386, 479,
	218, 264, 411, 392, 416, 399, 267, 0, 0, 417,
	337, 467, 406, 477, 496, 497, 243, 366, 486, 456,
	492, 508, 211, 240, 380, 449, 482, 439, 359, 463,
	464, 299, 438, 273, 195, 335, 502, 209, 426, 227,
	216, 202, 451, 475, 224, 430, 0, 0, 510, 204,
	473, 448, 355, 296, 297, 203, 0, 410, 248, 271,
	238, 375, 470, 471, 236, 511, 213, 491, 206, 0,
	490, 368, 466, 474, 356, 347, 205, 472, 354, 346,
	302, 321, 322, 260, 282, 404, 340, 405, 283, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 512,
	219, 220, 222, 0, 259, 263, 270, 272, 278, 279,
	286, 333, 379, 403, 401, 407, 0, 461, 478, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 367, 285,
	440, 301, 338, 0, 0, 385, 419, 225, 481, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	303, 315, 318, 308, 327, 0, 328, 304, 305, 310,
	312, 313, 314, 319, 320, 324, 330, 0, 191, 207,
	334, 0, 408, 268, 509, 489, 485, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	433, 434, 435, 436, 437, 445, 446, 450, 468, 469,
	480, 493, 498, 427, 277, 476, 499, 0, 343, 0,
	0, 345, 261, 280, 291, 0, 488, 447, 212, 415,
	269, 201, 231, 215, 239, 254, 257, 295, 353, 360,
	389, 394, 274, 251, 229, 412, 226, 431, 453, 454,
	455, 457, 357, 246, 393, 0, 358, 341, 459, 460,
	287, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 332, 247, 0,
	0, 390, 0, 197, 0, 432, 234, 342, 339, 465,
	262, 253, 249, 233, 288, 348, 388, 452, 382, 0,
	336, 0, 0, 442, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 232, 196, 373, 443, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 245, 292, 252, 244, 462, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 362, 237, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 235, 0, 418, 386, 479, 218, 264, 411,
	392, 416, 399, 267, 0, 0, 417, 337, 467, 406,
	477, 496, 497, 243, 366, 486, 456, 492, 508, 211,
	240, 380, 449, 482, 439, 359, 463, 464, 299, 438,
	273, 195, 335, 502, 209, 426, 227, 216, 202, 451,
	475, 224, 430, 0, 0, 510, 204, 473, 448, 355,
	296, 297, 203, 0, 410, 248, 271, 238, 375, 470,
	471, 236, 511, 213, 491, 206, 0, 490, 368, 466,
	474, 356, 347, 205, 472, 354, 346, 302, 321, 322,
	260, 282, 404, 340, 405, 283, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 512, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 379,
	403, 401, 407, 0, 461, 478, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 367, 285, 440, 301, 338,
	0, 0, 385, 419, 225, 481, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 408,
	268, 509, 489, 485, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 433, 434, 435,
	436, 437, 445, 446, 450, 468, 469, 480, 493, 498,
	427, 277, 476, 499, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 488, 447, 212, 415, 269, 201, 231,
	215, 239, 254, 257, 295, 353, 360, 389, 394, 274,
	251, 229, 412, 226, 431, 453, 454, 455, 457, 357,
	246, 393, 0, 358, 341, 459, 460, 287, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 390, 0,
	197, 0, 432, 234, 342, 339, 465, 262, 253, 249,
	233, 288, 348, 388, 452, 382, 0, 336, 0, 0,
	442, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	373, 443, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 462, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 362, 237, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 372, 414, 420, 0, 0, 0, 235,
	0, 418, 386, 479, 218, 264, 411, 392, 416, 399,
	267, 0, 0, 417, 337, 467, 406, 477, 496, 497,
	243, 366, 486, 456, 492, 508, 211, 240, 380, 449,
	482, 439, 359, 463, 464, 299, 438, 273, 195, 335,
	502, 209, 426, 227, 216, 202, 451, 475, 224, 430,
	0, 0, 510, 204, 473, 448, 355, 296, 297, 203,
	0, 410, 248, 271, 238, 375, 470, 471, 236, 511,
	213, 491, 206, 0, 490, 368, 466, 474, 356, 347,
	205, 472, 354, 346, 302, 321, 322, 260, 282, 404,
	340, 405, 283, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 512, 219, 220, 222, 0, 259, 263,
	270, 272, 278, 279, 286, 333, 379, 403, 401, 407,
	0, 461, 478, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 367, 285, 440, 301, 338, 0, 0, 385,
	419, 225, 481, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 303, 315, 318, 308, 327, 0,
	328, 304, 305, 310, 312, 313, 314, 319, 320, 324,
	330, 0, 191, 207, 334, 0, 408, 268, 509, 489,
	485, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 433, 434, 435, 436, 437, 445,
	446, 450, 468, 469, 480, 493, 498, 427, 277, 476,
	499, 0, 343, 0, 0, 345, 261, 280, 291, 0,
	488, 447, 212, 415, 269, 201, 231, 215, 239, 254,
	257, 295, 353, 360, 389, 394, 274, 251, 229, 412,
	226, 431, 453, 454, 455, 457, 357, 246, 393, 0,
	358, 341, 459, 460, 287, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 332, 247, 0, 0, 390, 0, 197, 0, 432,
	234, 342, 339, 465, 262, 253, 249, 233, 288, 348,
	388, 452, 382, 0, 336, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 232, 196, 373, 443, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 245, 292, 252, 244, 462,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 362,
	237, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	372, 414, 420, 0, 0, 0, 235, 0, 418, 386,
	479, 218, 264, 411, 392, 416, 399, 267, 0, 0,
	417, 337, 467, 406, 477, 496, 497, 243, 366, 486,
	456, 492, 508, 211, 240, 380, 449, 482, 439, 359,
	463, 464, 299, 438, 273, 195, 335, 502, 209, 426,
	227, 216, 202, 451, 475, 224, 430, 0, 0, 510,
	204, 473, 448, 355, 296, 297, 203, 0, 410, 248,
	271, 238, 375, 470, 471, 236, 511, 213, 491, 206,
	0, 490, 368, 466, 474, 356, 347, 205, 472, 354,
	346, 302, 321, 322, 260, 282, 404, 340, 405, 283,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	512, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 379, 403, 401, 407, 0, 461, 478,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 367,
	285, 440, 301, 338, 0, 0, 385, 419, 225, 481,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 1603, 408, 268, 509, 489, 485, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 391, 395, 396, 397, 398,
	400, 402, 409, 413, 421, 422, 423, 424, 425, 428,
	429, 433, 434, 435, 436, 437, 445, 446, 450, 468,
	469, 480, 493, 498, 427, 277, 476, 499, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 488, 447, 212,
	415, 269, 201, 231, 215, 239, 254, 257, 295, 353,
	360, 389, 394, 274, 251, 229, 412, 226, 431, 453,
	454, 455, 457, 357, 246, 393, 0, 358, 341, 459,
	460, 287, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 1479, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 390, 0, 197, 0, 432, 234, 342, 339,
	465, 262, 253, 249, 233, 288, 348, 388, 452, 382,
	0, 336, 0, 0, 442, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 373, 443, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 462, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 362, 237, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 372, 414, 420,
	0, 0, 0, 235, 0, 418, 386, 479, 218, 264,
	411, 392, 416, 399, 267, 0, 0, 417, 337, 467,
	406, 477, 496, 497, 243, 366, 486, 456, 492, 508,
	211, 240, 380, 449, 482, 439, 359, 463, 464, 299,
	438, 273, 195, 335, 502, 209, 426, 227, 216, 202,
	451, 475, 224, 430, 0, 0, 510, 204, 473, 448,
	355, 296, 297, 203, 0, 410, 248, 271, 238, 375,
	470, 471, 236, 511, 213, 491, 206, 0, 490, 368,
	466, 474, 356, 347, 205, 472, 354, 346, 302, 321,
	322, 260, 282, 404, 340, 405, 283, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 512, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	379, 403, 401, 407, 0, 461, 478, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 367, 285, 440, 301,
	338, 0, 0, 385, 419, 225, 481, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 0, 191, 207, 334, 0,
	408, 268, 509, 489, 485, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	276, 281, 284, 289, 290, 293, 298, 344, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 433, 434,
	435, 436, 437, 445, 446, 450, 468, 469, 480, 493,
	498, 427, 277, 476, 499, 0, 343, 0, 0, 345,
	261, 280, 291, 0, 488, 447, 212, 415, 269, 201,
	231, 215, 239, 254, 257, 295, 353, 360, 389, 394,
	274, 251, 229, 412, 226, 431, 453, 454, 455, 457,
	357, 246, 393, 0, 358, 341, 459, 460, 287, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 1477, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 332, 247, 0, 0, 390,
	0, 197, 0, 432, 234, 342, 339, 465, 262, 253,
	249, 233, 288, 348, 388, 452, 382, 0, 336, 0,
	0, 442, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 232,
	196, 373, 443, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 0, 0, 0, 0, 0, 245,
	292, 252, 244, 462, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 362, 237, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 372, 414, 420, 0, 0, 0,
	235, 0, 418, 386, 479, 218, 264, 411, 392, 416,
	399, 267, 0, 0, 417, 337, 467, 406, 477, 496,
	497, 243, 366, 486, 456, 492, 508, 211, 240, 380,
	449, 482, 439, 359, 463, 464, 299, 438, 273, 195,
	335, 502, 209, 426, 227, 216, 202, 451, 475, 224,
	430, 0, 0, 510, 204, 473, 448, 355, 296, 297,
	203, 0, 410, 248, 271, 238, 375, 470, 471, 236,
	511, 213, 491, 206, 0, 490, 368, 466, 474, 356,
	347, 205, 472, 354, 346, 302, 321, 322, 260, 282,
	404, 340, 405, 283, 364, 363, 365, 198, 483, 0,
	199, 0, 444, 484, 512, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 379, 403, 401,
	407, 0, 461, 478, 487, 494, 500, 501, 503, 504,
	505, 506, 507, 367, 285, 440, 301, 338, 0, 0,
	385, 419, 225, 481, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 408, 268, 509,
	489, 485, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 391,
	395, 396, 397, 398, 400, 402, 409, 413, 421, 422,
	423, 424, 425, 428, 429, 433, 434, 435, 436, 437,
	445, 446, 450, 468, 469, 480, 493, 498, 427, 277,
	476, 499, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 488, 447, 212, 415, 269, 201, 231, 215, 239,
	254, 257, 295, 353, 360, 389, 394, 274, 251, 229,
	412, 226, 431, 453, 454, 455, 457, 357, 246, 393,
	0, 358, 341, 459, 460, 287, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	1475, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 390, 0, 197, 0,
	432, 234, 342, 339, 465, 262, 253, 249, 233, 288,
	348, 388, 452, 382, 0, 336, 0, 0, 442, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 373, 443,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	462, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	362, 237, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 372, 414, 420, 0, 0, 0, 235, 0, 418,
	386, 479, 218, 264, 411, 392, 416, 399, 267, 0,
	0, 417, 337, 467, 406, 477, 496, 497, 243, 366,
	486, 456, 492, 508, 211, 240, 380, 449, 482, 439,
	359, 463, 464, 299, 438, 273, 195, 335, 502, 209,
	426, 227, 216, 202, 451, 475, 224, 430, 0, 0,
	510, 204, 473, 448, 355, 296, 297, 203, 0, 410,
	248, 271, 238, 375, 470, 471, 236, 511, 213, 491,
	206, 0, 490, 368, 466, 474, 356, 347, 205, 472,
	354, 346, 302, 321, 322, 260, 282, 404, 340, 405,
	283, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 512, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 379, 403, 401, 407, 0, 461,
	478, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	367, 285, 440, 301, 338, 0, 0, 385, 419, 225,
	481, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 408, 268, 509, 489, 485, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 391, 395, 396, 397,
	398, 400, 402, 409, 413, 421, 422, 423, 424, 425,
	428, 429, 433, 434, 435, 436, 437, 445, 446, 450,
	468, 469, 480, 493, 498, 427, 277, 476, 499, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 488, 447,
	212, 415, 269, 201, 231, 215, 239, 254, 257, 295,
	353, 360, 389, 394, 274, 251, 229, 412, 226, 431,
	453, 454, 455, 457, 357, 246, 393, 0, 358, 341,
	459, 460, 287, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 1473, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 390, 0, 197, 0, 432, 234, 342,
	339, 465, 262, 253, 249, 233, 288, 348, 388, 452,
	382, 0, 336, 0, 0, 442, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 373, 443, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 462, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 362, 237, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 372, 414,
	420, 0, 0, 0, 235, 0, 418, 386, 479, 218,
	264, 411, 392, 416, 399, 267, 0, 0, 417, 337,
	467, 406, 477, 496, 497, 243, 366, 486, 456, 492,
	508, 211, 240, 380, 449, 482, 439, 359, 463, 464,
	299, 438, 273, 195, 335, 502, 209, 426, 227, 216,
	202, 451, 475, 224, 430, 0, 0, 510, 204, 473,
	448, 355, 296, 297, 203, 0, 410, 248, 271, 238,
	375, 470, 471, 236, 511, 213, 491, 206, 0, 490,
	368, 466, 474, 356, 347, 205, 472, 354, 346, 302,
	321, 322, 260, 282, 404, 340, 405, 283, 364, 363,
	365, 198, 483, 0, 199, 0, 444, 484, 512, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 379, 403, 401, 407, 0, 461, 478, 487, 494,
	500, 501, 503, 504, 505, 506, 507, 367, 285, 440,
	301, 338, 0, 0, 385, 419, 225, 481, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 408, 268, 509, 489, 485, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 433,
	434, 435, 436, 437, 445, 446, 450, 468, 469, 480,
	493, 498, 427, 277, 476, 499, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 488, 447, 212, 415, 269,
	201, 231, 215, 239, 254, 257, 295, 353, 360, 389,
	394, 274, 251, 229, 412, 226, 431, 453, 454, 455,
	457, 357, 246, 393, 0, 358, 341, 459, 460, 287,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 1471, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	390, 0, 197, 0, 432, 234, 342, 339, 465, 262,
	253, 249, 233, 288, 348, 388, 452, 382, 0, 336,
	0, 0, 442, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 373, 443, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 462, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 362, 237, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 372, 414, 420, 0, 0,
	0, 235, 0, 418, 386, 479, 218, 264, 411, 392,
	416, 399, 267, 0, 0, 417, 337, 467, 406, 477,
	496, 497, 243, 366, 486, 456, 492, 508, 211, 240,
	380, 449, 482, 439, 359, 463, 464, 299, 438, 273,
	195, 335, 502, 209, 426, 227, 216, 202, 451, 475,
	224, 430, 0, 0, 510, 204, 473, 448, 355, 296,
	297, 203, 0, 410, 248, 271, 238, 375, 470, 471,
	236, 511, 213, 491, 206, 0, 490, 368, 466, 474,
	356, 347, 205, 472, 354, 346, 302, 321, 322, 260,
	282, 404, 340, 405, 283, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 512, 219, 220, 222, 0,
	259, 263, 270, 272, 278, 279, 286, 333, 379, 403,
	401, 407, 0, 461, 478, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 367, 285, 440, 301, 338, 0,
	0, 385, 419, 225, 481, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 408, 268,
	509, 489, 485, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 433, 434, 435, 436,
	437, 445, 446, 450, 468, 469, 480, 493, 498, 427,
	277, 476, 499, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 488, 447, 212, 415, 269, 201, 231, 215,
	239, 254, 257, 295, 353, 360, 389, 394, 274, 251,
	229, 412, 226, 431, 453, 454, 455, 457, 357, 246,
	393, 0, 358, 341, 459, 460, 287, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 1467, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 390, 0, 197,
	0, 432, 234, 342, 339, 465, 262, 253, 249, 233,
	288, 348, 388, 452, 382, 0, 336, 0, 0, 442,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 373,
	443, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 462, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 362, 237, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 372, 414, 420, 0, 0, 0, 235, 0,
	418, 386, 479, 218, 264, 411, 392, 416, 399, 267,
	0, 0, 417, 337, 467, 406, 477, 496, 497, 243,
	366, 486, 456, 492, 508, 211, 240, 380, 449, 482,
	439, 359, 463, 464, 299, 438, 273, 195, 335, 502,
	209, 426, 227, 216, 202, 451, 475, 224, 430, 0,
	0, 510, 204, 473, 448, 355, 296, 297, 203, 0,
	410, 248, 271, 238, 375, 470, 471, 236, 511, 213,
	491, 206, 0, 490, 368, 466, 474, 356, 347, 205,
	472, 354, 346, 302, 321, 322, 260, 282, 404, 340,
	405, 283, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 512, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 379, 403, 401, 407, 0,
	461, 478, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 367, 285, 440, 301, 338, 0, 0, 385, 419,
	225, 481, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 408, 268, 509, 489, 485,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 433, 434, 435, 436, 437, 445, 446,
	450, 468, 469, 480, 493, 498, 427, 277, 476, 499,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 488,
	447, 212, 415, 269, 201, 231, 215, 239, 254, 257,
	295, 353, 360, 389, 394, 274, 251, 229, 412, 226,
	431, 453, 454, 455, 457, 357, 246, 393, 0, 358,
	341, 459, 460, 287, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 1465, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 390, 0, 197, 0, 432, 234,
	342, 339, 465, 262, 253, 249, 233, 288, 348, 388,
	452, 382, 0, 336, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 373, 443, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 462, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 362, 237,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 235, 0, 418, 386, 479,
	218, 264, 411, 392, 416, 399, 267, 0, 0, 417,
	337, 467, 406, 477, 496, 497, 243, 366, 486, 456,
	492, 508, 211, 240, 380, 449, 482, 439, 359, 463,
	464, 299, 438, 273, 195, 335, 502, 209, 426, 227,
	216, 202, 451, 475, 224, 430, 0, 0, 510, 204,
	473, 448, 355, 296, 297, 203, 0, 410, 248, 271,
	238, 375, 470, 471, 236, 511, 213, 491, 206, 0,
	490, 368, 466, 474, 356, 347, 205, 472, 354, 346,
	302, 321, 322, 260, 282, 404, 340, 405, 283, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 512,
	219, 220, 222, 0, 259, 263, 270, 272, 278, 279,
	286, 333, 379, 403, 401, 407, 0, 461, 478, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 367, 285,
	440, 301, 338, 0, 0, 385, 419, 225, 481, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	303, 315, 318, 308, 327, 0, 328, 304, 305, 310,
	312, 313, 314, 319, 320, 324, 330, 0, 191, 207,
	334, 0, 408, 268, 509, 489, 485, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	433, 434, 435, 436, 437, 445, 446, 450, 468, 469,
	480, 493, 498, 427, 277, 476, 499, 0, 343, 0,
	0, 345, 261, 280, 291, 0, 488, 447, 212, 415,
	269, 201, 231, 215, 239, 254, 257, 295, 353, 360,
	389, 394, 274, 251, 229, 412, 226, 431, 453, 454,
	455, 457, 357, 246, 393, 0, 358, 341, 459, 460,
	287, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 1463, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 332, 247, 0,
	0, 390, 0, 197, 0, 432, 234, 342, 339, 465,
	262, 253, 249, 233, 288, 348, 388, 452, 382, 0,
	336, 0, 0, 442, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 232, 196, 373, 443, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 245, 292, 252, 244, 462, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 362, 237, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 235, 0, 418, 386, 479, 218, 264, 411,
	392, 416, 399, 267, 0, 0, 417, 337, 467, 406,
	477, 496, 497, 243, 366, 486, 456, 492, 508, 211,
	240, 380, 449, 482, 439, 359, 463, 464, 299, 438,
	273, 195, 335, 502, 209, 426, 227, 216, 202, 451,
	475, 224, 430, 0, 0, 510, 204, 473, 448, 355,
	296, 297, 203, 0, 410, 248, 271, 238, 375, 470,
	471, 236, 511, 213, 491, 206, 0, 490, 368, 466,
	474, 356, 347, 205, 472, 354, 346, 302, 321, 322,
	260, 282, 404, 340, 405, 283, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 512, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 379,
	403, 401, 407, 0, 461, 478, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 367, 285, 440, 301, 338,
	0, 0, 385, 419, 225, 481, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 408,
	268, 509, 489, 485, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 433, 434, 435,
	436, 437, 445, 446, 450, 468, 469, 480, 493, 498,
	427, 277, 476, 499, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 488, 447, 212, 415, 269, 201, 231,
	215, 239, 254, 257, 295, 353, 360, 389, 394, 274,
	251, 229, 412, 226, 431, 453, 454, 455, 457, 357,
	246, 393, 0, 358, 341, 459, 460, 287, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 390, 0,
	197, 0, 432, 234, 342, 339, 465, 262, 253, 249,
	233, 288, 348, 388, 452, 382, 0, 336, 0, 0,
	442, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	373, 443, 266, 0, 1438, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 462, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 362, 237, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 372, 414, 420, 0, 0, 0, 235,
	0, 418, 386, 479, 218, 264, 411, 392, 416, 399,
	267, 0, 0, 417, 337, 467, 406, 477, 496, 497,
	243, 366, 486, 456, 492, 508, 211, 240, 380, 449,
	482, 439, 359, 463, 464, 299, 438, 273, 195, 335,
	502, 209, 426, 227, 216, 202, 451, 475, 224, 430,
	0, 0, 510, 204, 473, 448, 355, 296, 297, 203,
	0, 410, 248, 271, 238, 375, 470, 471, 236, 511,
	213, 491, 206, 0, 490, 368, 466, 474, 356, 347,
	205, 472, 354, 346, 302, 321, 322, 260, 282, 404,
	340, 405, 283, 364, 363, 365, 198, 483, 0, 199,
	0, 444, 484, 512, 219, 220, 222, 0, 259, 263,
	270, 272, 278, 279, 286, 333, 379, 403, 401, 407,
	0, 461, 478, 487, 494, 500, 501, 503, 504, 505,
	506, 507, 367, 285, 440, 301, 338, 0, 0, 385,
	419, 225, 481, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 303, 315, 318, 308, 327, 0,
	328, 304, 305, 310, 312, 313, 314, 319, 320, 324,
	330, 0, 191, 207, 334, 0, 408, 268, 509, 489,
	485, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 433, 434, 435, 436, 437, 445,
	446, 450, 468, 469, 480, 493, 498, 427, 277, 476,
	499, 0, 343, 0, 0, 345, 261, 280, 291, 0,
	488, 447, 212, 415, 269, 201, 231, 215, 239, 254,
	257, 295, 353, 360, 389, 394, 274, 251, 229, 412,
	226, 431, 453, 454, 455, 457, 357, 246, 393, 0,
	358, 341, 459, 460, 287, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 1338, 250, 0, 0, 0,
	0, 332, 247, 0, 0, 390, 0, 197, 0, 432,
	234, 342, 339, 465, 262, 253, 249, 233, 288, 348,
	388, 452, 382, 0, 336, 0, 0, 442, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 232, 196, 373, 443, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 245, 292, 252, 244, 462,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 362,
	237, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	372, 414, 420, 0, 0, 0, 235, 0, 418, 386,
	479, 218, 264, 411, 392, 416, 399, 267, 0, 0,
	417, 337, 467, 406, 477, 496, 497, 243, 366, 486,
	456, 492, 508, 211, 240, 380, 449, 482, 439, 359,
	463, 464, 299, 438, 273, 195, 335, 502, 209, 426,
	227, 216, 202, 451, 475, 224, 430, 0, 0, 510,
	204, 473, 448, 355, 296, 297, 203, 0, 410, 248,
	271, 238, 375, 470, 471, 236, 511, 213, 491, 206,
	0, 490, 368, 466, 474, 356, 347, 205, 472, 354,
	346, 302, 321, 322, 260, 282, 404, 340, 405, 283,
	364, 363, 365, 198, 483, 0, 199, 0, 444, 484,
	512, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 379, 403, 401, 407, 0, 461, 478,
	487, 494, 500, 501, 503, 504, 505, 506, 507, 367,
	285, 440, 301, 338, 0, 0, 385, 419, 225, 481,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 408, 268, 509, 489, 485, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 391, 395, 396, 397, 398,
	400, 402, 409, 413, 421, 422, 423, 424, 425, 428,
	429, 433, 434, 435, 436, 437, 445, 446, 450, 468,
	469, 480, 493, 498, 427, 277, 476, 499, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 488, 447, 212,
	415, 269, 201, 231, 215, 239, 254, 257, 295, 353,
	360, 389, 394, 274, 251, 229, 412, 226, 431, 453,
	454, 455, 457, 357, 246, 393, 0, 358, 341, 459,
	460, 287, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 390, 0, 197, 0, 432, 234, 342, 339,
	465, 262, 253, 249, 233, 288, 348, 388, 452, 382,
	0, 336, 0, 0, 442, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 373, 443, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 1142, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 462, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 362, 237, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 372, 414, 420,
	0, 0, 0, 235, 0, 418, 386, 479, 218, 264,
	411, 392, 416, 399, 267, 0, 0, 417, 337, 467,
	406, 477, 496, 497, 243, 366, 486, 456, 492, 508,
	211, 240, 380, 449, 482, 439, 359, 463, 464, 299,
	438, 273, 195, 335, 502, 209, 426, 227, 216, 202,
	451, 475, 224, 430, 0, 0, 510, 204, 473, 448,
	355, 296, 297, 203, 0, 410, 248, 271, 238, 375,
	470, 471, 236, 511, 213, 491, 206, 0, 490, 368,
	466, 474, 356, 347, 205, 472, 354, 346, 302, 321,
	322, 260, 282, 404, 340, 405, 283, 364, 363, 365,
	198, 483, 0, 199, 0, 444, 484, 512, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	379, 403, 401, 407, 0, 461, 478, 487, 494, 500,
	501, 503, 504, 505, 506, 507, 367, 285, 440, 301,
	338, 0, 0, 385, 419, 225, 481, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 0, 191, 207, 334, 0,
	408, 268, 509, 489, 485, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	276, 281, 284, 289, 290, 293, 298, 344, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 433, 434,
	435, 436, 437, 445, 446, 450, 468, 469, 480, 493,
	498, 427, 277, 476, 499, 0, 343, 0, 0, 345,
	261, 280, 291, 0, 488, 447, 212, 415, 269, 201,
	231, 215, 239, 254, 257, 295, 353, 360, 389, 394,
	274, 251, 229, 412, 226, 431, 453, 454, 455, 457,
	357, 246, 393, 0, 358, 341, 459, 460, 287, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 332, 247, 0, 0, 390,
	0, 197, 0, 432, 234, 342, 339, 465, 262, 253,
	249, 233, 288, 348, 388, 452, 382, 0, 336, 0,
	0, 442, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 232,
	196, 373, 443, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 0, 0, 0, 0, 0, 245,
	292, 252, 244, 462, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 362, 237, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 372, 414, 420, 0, 0, 0,
	235, 0, 418, 386, 479, 218, 264, 411, 392, 416,
	399, 267, 0, 0, 417, 337, 467, 406, 477, 496,
	497, 243, 366, 486, 456, 492, 508, 211, 240, 380,
	449, 482, 439, 359, 463, 464, 299, 438, 273, 195,
	335, 502, 209, 426, 227, 216, 202, 451, 475, 224,
	430, 0, 0, 510, 204, 473, 448, 355, 296, 297,
	203, 0, 410, 248, 271, 238, 375, 470, 471, 236,
	511, 213, 491, 206, 0, 490, 368, 466, 474, 356,
	347, 205, 472, 354, 346, 302, 321, 322, 260, 282,
	404, 340, 405, 283, 364, 363, 365, 198, 483, 0,
	199, 0, 444, 484, 512, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 379, 403, 401,
	407, 0, 461, 478, 487, 494, 500, 501, 503, 504,
	505, 506, 507, 367, 285, 440, 301, 338, 0, 0,
	385, 419, 225, 481, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 408, 268, 509,
	489, 485, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 761, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 391,
	395, 396, 397, 398, 400, 402, 409, 413, 421, 422,
	423, 424, 425, 428, 429, 433, 434, 435, 436, 437,
	445, 446, 450, 468, 469, 480, 493, 498, 427, 277,
	476, 499, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 488, 447, 212, 415, 269, 201, 231, 215, 239,
	254, 257, 295, 353, 360, 389, 394, 274, 251, 229,
	412, 226, 431, 453, 454, 455, 457, 357, 246, 393,
	0, 358, 341, 459, 460, 287, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 390, 0, 197, 0,
	432, 234, 342, 339, 465, 262, 253, 249, 233, 288,
	348, 388, 452, 382, 0, 336, 0, 0, 442, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 373, 443,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	462, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 587, 0, 275, 0,
	362, 237, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 372, 414, 420, 0, 0, 0, 235, 0, 418,
	386, 479, 218, 264, 411, 392, 416, 399, 267, 0,
	0, 417, 337, 467, 406, 477, 496, 497, 243, 366,
	486, 456, 492, 508, 211, 240, 380, 449, 482, 439,
	359, 463, 464, 299, 438, 273, 195, 335, 502, 209,
	426, 227, 216, 202, 451, 475, 224, 430, 0, 0,
	510, 204, 473, 448, 355, 296, 297, 203, 0, 410,
	248, 271, 238, 375, 470, 471, 236, 511, 213, 491,
	206, 0, 490, 368, 466, 474, 356, 347, 205, 472,
	354, 346, 302, 321, 322, 260, 282, 404, 340, 405,
	283, 364, 363, 365, 198, 483, 0, 199, 0, 444,
	484, 512, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 379, 403, 401, 407, 0, 461,
	478, 487, 494, 500, 501, 503, 504, 505, 506, 507,
	367, 285, 440, 301, 338, 0, 0, 385, 419, 225,
	481, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 408, 268, 509, 489, 485, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 391, 395, 396, 397,
	398, 400, 402, 409, 413, 421, 422, 423, 424, 425,
	428, 429, 433, 434, 435, 436, 437, 445, 446, 450,
	468, 469, 480, 493, 498, 427, 586, 476, 499, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 488, 447,
	212, 415, 269, 201, 231, 215, 239, 254, 257, 295,
	353, 360, 389, 394, 274, 251, 229, 412, 226, 431,
	453, 454, 455, 457, 357, 246, 393, 0, 358, 341,
	459, 460, 287, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 390, 0, 197, 0, 432, 234, 342,
	339, 465, 262, 253, 249, 233, 288, 348, 388, 452,
	382, 0, 336, 0, 0, 442, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 373, 443, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 462, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 362, 237, 0,
	0, 534, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 372, 414,
	420, 0, 0, 0, 235, 0, 418, 386, 479, 218,
	264, 411, 392, 416, 399, 267, 0, 0, 417, 337,
	467, 406, 477, 496, 497, 243, 366, 486, 456, 492,
	508, 211, 240, 380, 449, 482, 439, 359, 463, 464,
	299, 438, 273, 195, 335, 502, 209, 426, 227, 216,
	202, 451, 475, 224, 430, 0, 0, 510, 204, 473,
	448, 355, 296, 297, 203, 0, 410, 248, 271, 238,
	375, 470, 471, 236, 511, 213, 491, 206, 0, 490,
	368, 466, 474, 356, 347, 205, 472, 354, 346, 302,
	321, 322, 260, 282, 404, 340, 405, 283, 364, 363,
	365, 198, 483, 0, 199, 0, 444, 484, 512, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 379, 403, 401, 407, 0, 461, 478, 487, 494,
	500, 501, 503, 504, 505, 506, 507, 367, 285, 440,
	301, 338, 0, 0, 385, 419, 225, 481, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 408, 268, 509, 489, 485, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 433,
	434, 435, 436, 437, 445, 446, 450, 468, 469, 480,
	493, 498, 427, 277, 476, 499, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 488, 447, 212, 415, 269,
	201, 231, 215, 239, 254, 257, 295, 353, 360, 389,
	394, 274, 251, 229, 412, 226, 431, 453, 454, 455,
	457, 357, 246, 393, 0, 358, 341, 459, 460, 287,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	390, 0, 197, 0, 432, 234, 342, 339, 465, 262,
	253, 249, 233, 288, 348, 388, 452, 382, 0, 336,
	0, 0, 442, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 373, 443, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 462, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 362, 237, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 372, 414, 420, 0, 0,
	0, 235, 0, 418, 386, 479, 218, 264, 411, 392,
	416, 399, 267, 0, 0, 417, 337, 467, 406, 477,
	496, 497, 243, 366, 486, 456, 492, 508, 211, 240,
	380, 449, 482, 439, 359, 463, 464, 299, 438, 273,
	195, 335, 502, 209, 426, 227, 216, 202, 451, 475,
	224, 430, 0, 0, 510, 204, 473, 448, 355, 296,
	297, 203, 0, 410, 248, 271, 238, 375, 470, 471,
	236, 511, 213, 491, 206, 0, 490, 368, 466, 474,
	356, 347, 205, 472, 354, 346, 302, 321, 322, 260,
	282, 404, 340, 405, 283, 364, 363, 365, 198, 483,
	0, 199, 0, 444, 484, 512, 219, 220, 222, 0,
	259, 263, 270, 272, 278, 279, 286, 333, 379, 403,
	401, 407, 0, 461, 478, 487, 494, 500, 501, 503,
	504, 505, 506, 507, 367, 285, 440, 301, 338, 0,
	0, 385, 419, 225, 481, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 408, 268,
	509, 489, 485, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 349, 350, 351, 352,
	2897, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 433, 434, 435, 436,
	437, 445, 446, 450, 468, 469, 480, 493, 498, 427,
	277, 476, 499, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 488, 447, 212, 415, 269, 201, 231, 215,
	239, 254, 257, 295, 353, 360, 389, 394, 274, 251,
	229, 412, 226, 431, 453, 454, 455, 457, 357, 246,
	393, 0, 358, 341, 459, 460, 287, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 390, 0, 197,
	0, 432, 234, 342, 339, 465, 262, 253, 249, 233,
	288, 348, 388, 452, 382, 0, 336, 0, 0, 442,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 373,
	443, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 462, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 362, 237, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 372, 414, 420, 0, 0, 0, 235, 0,
	418, 386, 479, 218, 264, 411, 392, 416, 399, 267,
	0, 0, 417, 337, 467, 406, 477, 496, 497, 243,
	366, 486, 456, 492, 508, 211, 240, 380, 449, 482,
	439, 359, 463, 464, 299, 438, 273, 195, 335, 502,
	209, 426, 227, 216, 202, 451, 475, 224, 430, 0,
	0, 510, 204, 473, 448, 355, 296, 297, 203, 0,
	410, 248, 271, 238, 375, 470, 471, 236, 511, 213,
	491, 206, 0, 490, 368, 466, 474, 356, 347, 205,
	472, 354, 346, 302, 321, 322, 260, 282, 404, 340,
	405, 283, 364, 363, 365, 198, 483, 0, 199, 0,
	444, 484, 512, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 379, 403, 401, 407, 0,
	461, 478, 487, 494, 500, 501, 503, 504, 505, 506,
	507, 367, 285, 440, 301, 338, 0, 0, 385, 419,
	225, 481, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 408, 268, 509, 489, 485,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 433, 434, 435, 436, 437, 445, 446,
	450, 468, 469, 480, 493, 498, 427, 277, 476, 499,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 488,
	447, 212, 415, 269, 201, 231, 215, 239, 254, 257,
	295, 353, 360, 389, 394, 274, 251, 229, 412, 226,
	431, 453, 454, 455, 457, 357, 246, 393, 0, 358,
	341, 459, 460, 287, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 390, 0, 197, 0, 432, 234,
	342, 339, 465, 262, 253, 249, 233, 288, 348, 388,
	452, 382, 0, 336, 0, 0, 442, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 373, 443, 266, 0,
	0, 0, 0, 188, 2529, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 462, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 362, 237,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 235, 0, 418, 386, 479,
	218, 264, 411, 392, 416, 399, 267, 0, 0, 417,
	337, 467, 406, 477, 496, 497, 243, 366, 486, 456,
	492, 508, 211, 240, 380, 449, 482, 439, 359, 463,
	464, 299, 438, 273, 195, 335, 502, 209, 426, 227,
	216, 202, 451, 475, 224, 430, 0, 0, 510, 204,
	473, 448, 355, 296, 297, 203, 0, 410, 248, 271,
	238, 375, 470, 471, 236, 511, 213, 491, 206, 0,
	490, 368, 466, 474, 356, 347, 205, 472, 354, 346,
	302, 321, 322, 260, 282, 404, 340, 405, 283, 364,
	363, 365, 198, 483, 0, 199, 0, 444, 484, 512,
	219, 220, 222, 0, 259, 263, 270, 272, 278, 279,
	286, 333, 379, 403, 401, 407, 0, 461, 478, 487,
	494, 500, 501, 503, 504, 505, 506, 507, 367, 285,
	440, 301, 338, 0, 0, 385, 419, 225, 481, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	303, 315, 318, 308, 327, 0, 328, 304, 305, 310,
	312, 313, 314, 319, 320, 324, 330, 0, 191, 207,
	334, 0, 408, 268, 509, 489, 485, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	433, 434, 435, 436, 437, 445, 446, 450, 468, 469,
	480, 493, 498, 427, 277, 476, 499, 0, 343, 0,
	0, 345, 261, 280, 291, 0, 488, 447, 212, 415,
	269, 201, 231, 215, 239, 254, 257, 295, 353, 360,
	389, 394, 274, 251, 229, 412, 226, 431, 453, 454,
	455, 457, 357, 246, 393, 0, 358, 341, 459, 460,
	287, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 332, 247, 0,
	0, 390, 0, 197, 0, 432, 234, 342, 339, 465,
	262, 253, 249, 233, 288, 348, 388, 452, 382, 0,
	336, 0, 0, 442, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 232, 196, 373, 443, 266, 0, 0, 0, 0,
	188, 2066, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 245, 292, 252, 244, 462, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 362, 237, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 235, 0, 418, 386, 479, 218, 264, 411,
	392, 416, 399, 267, 0, 0, 417, 337, 467, 406,
	477, 496, 497, 243, 366, 486, 456, 492, 508, 211,
	240, 380, 449, 482, 439, 359, 463, 464, 299, 438,
	273, 195, 335, 502, 209, 426, 227, 216, 202, 451,
	475, 224, 430, 0, 0, 510, 204, 473, 448, 355,
	296, 297, 203, 0, 410, 248, 271, 238, 375, 470,
	471, 236, 511, 213, 491, 206, 0, 490, 368, 466,
	474, 356, 347, 205, 472, 354, 346, 302, 321, 322,
	260, 282, 404, 340, 405, 283, 364, 363, 365, 198,
	483, 0, 199, 0, 444, 484, 512, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 379,
	403, 401, 407, 0, 461, 478, 487, 494, 500, 501,
	503, 504, 505, 506, 507, 367, 285, 440, 301, 338,
	0, 0, 385, 419, 225, 481, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 408,
	268, 509, 489, 485, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 433, 434, 435,
	436, 437, 445, 446, 450, 468, 469, 480, 493, 498,
	427, 277, 476, 499, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 488, 447, 212, 415, 269, 201, 231,
	215, 239, 254, 257, 295, 353, 360, 389, 394, 274,
	251, 229, 412, 226, 431, 453, 454, 455, 457, 357,
	246, 393, 0, 0, 341, 459, 460, 287,
}

var yyPact = [...]int{
	4241, -1000, -400, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1902, 1965, -1000, -1000,
	-1000, -1000, 2081, -1000, 671, 1650, -1000, 1913, 2959, -1000,
	40408, 459, -1000, 39234, 456, 297, 40408, -1000, 136, -1000,
	125, 40408, 129, 38647, -1000, -1000, -301, 17505, 1846, 8,
	7, 40408, -1000, -1000, -1000, -1000, 2052, 1637, -1000, 303,
	-1000, -1000, -1000, -1000, -1000, -1000, 38060, -1000, -1000, -1000,
	1917, 1910, 2096, 591, 1834, -1000, 1985, 1637, -1000, 17505,
	2034, 1973, 16918, -1000, 16918, 367, -1000, -1000, 13386, -1000,
	-1000, 22798, 40408, 28668, 335, -1000, 1913, -1000, -1000, -1000,
	102, -1000, 267, 1597, -1000, 1589, -1000, 578, 732, 302,
	406, 396, 299, 291, 287, 283, 281, 280, 279, 276,
	293, -1000, 616, 616, -171, -178, 3101, 348, 356, 356,
	393, 1868, 1866, -1000, 589, -1000, 616, 616, 616, 327,
	616, 616, 616, 616, 250, 249, 616, 616, 616, 616,
	616, 616, 616, 616, 616, 616, 616, 616, 616, 616,
	616, 616, 616, 331, 1913, 231, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 40408, 288, 40408, -1000, 511, 40408, 757, 757,
	84, 757, 757, 757, 757, 122, 576, 4, -1000, 116,
	235, 143, 225, 722, 185, 145, -1000, -1000, 217, 722,
	1146, 602, 101, -1000, 757, 11018, 11018, 11018, -1000, 1896,
	-1000, -1000, -1000, -1000, -1000, -1000, 1153, -1000, 386, -1000,
	-1000, -1000, -1000, 40408, 37473, 292, 654, -1000, -1000, -1000,
	44, -1000, -1000, 1386, 1216, 17505, 943, -1000, 1011, 562,
	-1000, -1000, -1000, -1000, -1000, 474, 18092, 18092, 18092, 18092,
	-1000, -1000, 1600, 1600, 1600, 1600, 18092, 1600, 18092, 1600,
	1600, 1600, 1600, 17505, 1600, 1600, 1600, -1000, 1600, 1600,
	1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600,
	1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600,
	1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600,
	1600, 1600, 1600, 1600, 1600, 510, 1600, 1600, 1600, 1600,
	1600, -1000, -1000, -1000, -1000, 1600, 1600, 1600, 1600, 1600,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20440,
	-1000, 15157, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 40408, -1000, 1600, 144, 40408, 40408, 295, 1985, 1637,
	-1000, 2052, 2022, 303, -1000, 2050, 1672, 1384, 1158, 1637,
	1551, 40408, -1000, 1612, -1000, -1000, -1000, 1781, 1058, 1142,
	-1000, -1000, -1000, -1000, 1485, 17505, -1000, -1000, 2076, -1000,
	19853, 509, 784, 2073, 36886, -1000, 367, 367, 1579, 12794,
	-49, -1000, -1000, -1000, 649, 26320, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1896, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1565, 40408, -1000, -1000, 4330,
	1118, -1000, 1649, -1000, 1557, -1000, 1626, 17505, 1658, 453,
	1118, 421, 420, 417, -1000, -103, -1000, -1000, -1000, -1000,
	-1000, -1000, 616, 616, 616, -1000, 289, 2030, 2959, 3940,
	-1000, -1000, -1000, 36299, 1648, 1118, -1000, 1646, -1000, 726,
	467, 516, 516, 1118, -1000, -1000, 40408, 1118, 723, 717,
	1118, 1118, 40408, 40408, -1000, 35712, -1000, 35125, 34538, 977,
	40408, 33951, 33364, 32777, 32190, 31603, -1000, 1721, -1000, 1633,
	-1000, -1000, -1000, 40408, 1118, 40408, 40408, 296, -1000, -1000,
	40408, 1118, -1000, -1000, 955, 953, 935, 616, 616, 932,
	1133, 1130, 1125, 616, 616, 916, 1124, 27494, 1123, 213,
	913, 911, 906, 1108, 1109, 190, 1106, 1047, 1002, 902,
	40408, 1645, 40408, -1000, 197, 613, 352, 644, 1913, 1845,
	1571, 383, 430, 1118, 359, 359, 40408, -1000, 11610, -1000,
	-1000, 1101, 17505, -1000, 739, 722, 722, -1000, -1000, -1000,
	-1000, -1000, -1000, 757, 40408, 739, -1000, -1000, -1000, 722,
	757, 40408, 757, 757, 757, 757, 722, 722, 722, 757,
	40408, 40408, 40408, 40408, 40408, 40408, 40408, 40408, 40408, 11018,
	11018, 11018, 602, 757, -306, -1000, 1100, -1000, 1740, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 128, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -82, 1562,
	31016, -1000, -308, -312, -313, -315, -1000, -1000, -1000, -316,
	-317, -1000, -1000, -1000, 17505, 17505, 17505, 17505, -200, -1000,
	816, 18092, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 801,
	711, 18092, 18092, 18092, 18092, 18092, 18092, 18092, 18092, 18092,
	18092, 18092, 18092, 18092, 18092, 18092, 865, 5973, 5973, 562,
	562, 562, 562, -1000, 16918, 17505, 17505, 562, -1000, 1118,
	30429, 16918, 16918, 17505, 1876, 617, 1216, 40408, -1000, 1158,
	-1000, -1000, -1000, 850, -1000, 40408, 40408, 506, 17505, 17505,
	17505, 17505, 17505, 17505, 17505, 17505, 17505, 17505, 17505, 17505,
	17505, 17505, 17505, 17505, 17505, 17505, 17505, 17505, 17505, 17505,
	17505, 17505, 17505, 17505, 17505, 17505, 17505, 17505, 13978, 11610,
	16918, 16918, 16918, 16918, 16918, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 508, 1305, 1327,
	1361, -1000, 1554, -1000, -151, 22211, 17505, 1090, 2061, 1666,
	40408, -1000, -1000, -1000, 1985, -1000, 1985, 1305, 1928, 1787,
	16918, -1000, -1000, 1928, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1222, -1000, 40408, 1551, 1961, 40408, 1762, 1088,
	270, -1000, 17505, 17505, 1549, -1000, 965, 40408, -1000, -200,
	-1000, 29842, -1000, -1000, 10426, -1000, 40408, 273, 40408, -1000,
	24559, 29255, 12202, -49, -1000, 12202, 1453, -1000, -36, -55,
	14565, 558, -1000, -1000, -1000, 3101, 19266, 1304, 558, 48,
	-1000, -1000, -1000, 1626, -1000, 1626, 1626, 1626, 1626, 270,
	270, 270, 270, -1000, -1000, -1000, -1000, -1000, 1642, 1641,
	-1000, 1626, 1626, 1626, 1626, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1640, 1640, 1640, 1627, 1627, 351, -1000, 17505,
	196, 28668, 1940, 897, 1475, 197, 363, 1664, 1118, 1118,
	1118, 363, -1000, 1296, 1281, 1185, -1000, -391, 1544, -1000,
	-1000, 2029, -1000, -1000, 653, 756, 746, 745, 40408, 161,
	271, -1000, 340, -1000, 28668, 1118, 715, 516, 1118, -1000,
	1118, -1000, -1000, -1000, -1000, -1000, 1118, -1000, -1000, 1520,
	-1000, 1350, 812, 735, 780, 734, 1520, -1000, -1000, -143,
	1520, -1000, 1520, -1000, 1520, -1000, 1520, -1000, 1520, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 677, 147, 40408,
	161, 865, -1000, 380, -1000, -1000, -1000, 865, 865, -1000,
	-1000, -1000, -1000, 1086, 1085, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -378, 40408, -1000, 198, 635, 254,
	284, 224, 40408, 168, 1964, 191, 244, 40408, 40408, 359,
	1735, 40408, 1945, 40408, -1000, -1000, -1000, -1000, -1000, 1216,
	40408, -1000, -1000, 757, 757, -1000, -1000, 40408, 757, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 757, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 40408, 40408, -1000, -1000, -1000,
	-1000, -1000, 76, -43, 305, -1000, -1000, -1000, -1000, -1000,
	1980, -1000, 1216, 697, 699, -1000, 1600, -1000, -1000, 847,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 801, 18092, 18092,
	18092, 1143, 439, 1425, 881, 1238, 859, 859, 905, 905,
	569, 569, 569, 569, 569, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1063, -1000, 1451, -1000, 1499, 1383, 1158,
	-1000, 1451, 1451, 1233, 16918, -1000, -1000, 669, -1000, 17505,
	1158, -1000, -1000, 1158, 1158, 1467, 1465, 2057, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 972,
	1475, 1475, 1475, 1930, 1904, 1158, 1386, 1158, 1461, -1000,
	1883, 1475, 1847, 1841, 1778, 1341, 1751, 1743, 1728, 1475,
	1475, 1475, 1224, 1720, 1715, 1709, 1704, 1678, 1654, 1643,
	1610, 1552, 1475, 1158, 16918, 16918, 1455, 1600, 504, -1000,
	1451, 1158, 1158, 1451, 1451, 11610, 1158, -1000, 40408, -1000,
	-297, -1000, -51, 518, 1600, -1000, 27494, 1158, -1000, 4617,
	-1000, 41582, -1000, -1000, -1000, -1000, -1000, 25733, 1543, 1928,
	-1000, -1000, 1600, 1525, -1000, -1000, 270, 35, 25146, -1000,
	-1000, 1216, 1216, 17505, -1000, -1000, -1000, -1000, -1000, -1000,
	503, 2026, 362, 1600, -1000, 1459, 1892, -1000, -1000, -1000,
	1959, 21032, -1000, 1600, 40408, 1550, 1430, -1000, 500, -1000,
	1453, -49, -58, -1000, -1000, -1000, -1000, 1216, -1000, 1160,
	274, 1796, -1000, 338, -1000, -1000, -1000, -1000, 1856, 29,
	-1000, -1000, -1000, 270, 270, -1000, -1000, -1000, -1000, -1000,
	-1000, 1062, 1062, -1000, -1000, -1000, -1000, -1000, 896, -1000,
	-1000, -1000, 891, -1000, -1000, 1559, 1713, 196, -1000, -1000,
	616, 1060, -1000, -1000, 1859, 616, 616, 40408, -1000, -1000,
	1288, 1940, 198, 40408, 693, 1733, -1000, 1664, 1664, 1664,
	40408, -1000, -1000, -1000, -1000, -1000, -1000, -379, 72, 314,
	-1000, -1000, -1000, 3128, 40408, 1518, -1000, 153, -1000, 1279,
	-1000, 40408, -1000, 1489, 1638, 1118, 1118, -1000, -1000, -1000,
	40408, 1600, -1000, -1000, -1000, -1000, 427, 1905, 1898, -1000,
	-1000, -225, 161, 153, 558, 1118, -1000, -1000, -1000, -1000,
	-1000, -381, 1473, 402, 163, 240, 40408, 40408, 40408, 40408,
	40408, 486, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	226, 369, -1000, 40408, 40408, 491, -1000, -1000, -1000, 722,
	-1000, -1000, 722, -1000, -1000, -1000, -1000, -1000, 1890, 40408,
	-47, -346, -1000, -343, 17505, -1000, -1000, -1000, -1000, 895,
	392, 1425, 18092, 18092, 16918, -137, 525, 525, 865, -1000,
	-1000, -1000, 17505, 17505, 1574, 662, -1000, 17505, 941, -1000,
	-1000, -1000, 17505, 17505, 17505, 1158, 220, -1000, -1000, -1000,
	17505, 17505, -1000, -1000, 17505, 17505, -1000, 17505, 17505, 18679,
	1158, 18679, 17505, 17505, 18679, -1000, -1000, -1000, -1000, 18679,
	17505, 17505, 17505, 17505, 17505, 17505, 17505, 17505, 17505, -1000,
	-1000, 1451, 1451, 16918, 11610, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 518, -1000, 516, 516, 516,
	40408, -1000, -1000, -1000, -1000, -1000, -1000, 1447, 1984, -1000,
	1810, 1804, 2055, 2026, -1000, 24559, 1928, -1000, -1000, 40408,
	-292, -1000, 1833, 1809, -1000, -1000, -1000, -1000, 9834, 1985,
	17505, 1718, 40408, 1600, -1000, 21624, 40408, 40408, 24559, 24559,
	24559, 24559, 24559, -1000, 1738, 1725, -1000, 1760, 1759, 1766,
	40408, -1000, 1441, 1158, 2022, 21032, 17505, 23385, 1261, 24559,
	-1000, -1000, 24559, 40408, 9242, -1000, -1000, -48, -69, -1000,
	-1000, -1000, -1000, 3101, -1000, -1000, 364, 1955, 1853, -1000,
	-1000, -1000, -1000, 1435, -1000, 1427, 1437, 1418, 147, -1000,
	1657, 1872, 616, 616, -1000, 883, -1000, 1118, 1056, 1053,
	-1000, -1000, -1000, 395, -1000, 1927, 40408, 1711, 1708, 1696,
	-1000, -389, 878, 1636, 1656, 17505, 1635, 2028, 1402, 40408,
	-1000, -1000, 40408, -1000, 192, -1000, 196, 40408, -1000, -1000,
	-1000, 271, 40408, -1000, 6626, -1000, 153, -1000, -1000, -1000,
	-1000, -1000, -1000, 40408, 219, -1000, 1632, 1014, -1000, -1000,
	1651, -1000, -1000, -1000, -1000, 146, 253, -1000, 40408, 483,
	1713, 40408, -1000, -1000, -1000, 757, 757, -1000, -1000, 1871,
	-1000, 1118, 1475, 18092, 18092, -1000, 562, -1000, 1600, 1158,
	1626, 1626, -1000, 1626, 1627, -1000, 1626, 114, 1626, 112,
	1626, -1000, -1000, 1158, 1158, 1201, 1192, -111, -1000, 1216,
	17505, 1546, 1542, 1475, -1000, 1625, 1622, 1475, 1475, -1000,
	1216, 1341, 1538, 1329, -1000, -1000, -1000, -1000, 1415, 1475,
	1527, -290, 1158, 1375, 1375, 1375, 1375, 1375, 1361, 1361,
	1361, 1361, -1000, -1000, 1158, -1000, -1000, 1977, 1977, 1977,
	1354, 40995, 40408, -1000, -1000, -1000, -1000, 2026, 2051, 1411,
	-1000, -1000, 35, 358, -1000, 1825, 1809, -1000, 2025, 1821,
	2024, -1000, -1000, -1000, 1216, -1000, 1915, 1268, -1000, 633,
	1364, -1000, -1000, 16331, 1356, 1801, 499, 1354, 1337, 1892,
	1731, 1693, 2183, -1000, -1000, -1000, -1000, 1714, -1000, 1688,
	-1000, -1000, 1612, -1000, -1000, 1327, 1507, 273, 24559, 1325,
	1325, -1000, 498, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	767, 6972, 2095, -1000, 1050, -1000, 1095, 186, 877, -1000,
	-1000, 616, 616, -1000, 713, 706, -1000, 40408, 1621, -1000,
	270, 1048, 270, 864, -1000, 855, -1000, -1000, -1000, -1000,
	1585, 1719, -1000, -1000, -1000, -1000, 40408, -1000, -1000, 40408,
	40408, 40408, 1618, 2013, -1000, 17505, 1615, 630, 1521, 40408,
	40408, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 374, 616, -353, 242, 236, 616, 616, 616,
	-390, -1000, -1000, 1348, 1346, -1000, -161, -1000, 17505, -1000,
	-1000, -1000, 886, 886, -1000, 1612, -1000, -1000, -1000, 1244,
	-1000, -1000, -147, 40408, 40408, 40408, 40408, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 562, 18092, -1000,
	-1000, 270, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 17505, -1000, 17505, -1000, 1985, 1040, 1216, 17505, 17505,
	-1000, 846, 842, -1000, -1000, 1158, 18679, -1000, 18679, -1000,
	17505, 193, 525, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1600, 1855, 1600, 1600, 23385, -1000,
	-1000, 2051, 2040, 2009, 1813, 1817, 1817, 1825, -1000, 2001,
	2000, -1000, 1039, 1994, 1034, 705, -1000, 40408, 17505, 1600,
	-1000, 317, 40408, 1600, 40408, -1000, 1986, -1000, -1000, 17505,
	1614, -1000, 17505, -1000, -1000, -1000, -1000, -1000, 5973, 2026,
	1325, -1000, -1000, 575, -1000, 17505, -1000, -1000, -1000, 4898,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1032, 1031,
	-1000, -1000, 1613, 17505, -1000, -1000, -1000, 1230, 1198, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1612, -1000, -1000, -1000,
	-1000, 271, -385, 1491, 40408, 813, -1000, 1344, 1402, 259,
	1600, 1013, 616, 616, 616, 810, 808, 27494, 1342, -1000,
	40408, 329, -1000, 271, -1000, -179, -181, 1475, -1000, -1000,
	1953, -1000, -1000, 11610, -1000, -1000, 1604, 1662, -1000, 326,
	-1000, 1475, 1475, 1158, -1000, 1475, 1475, 1193, 1167, -1000,
	1329, -1000, 1149, -1000, 193, 1158, 1691, -1000, -1000, 5973,
	-1000, 23972, -1000, 1993, 1991, 28081, 28081, 518, 2040, -1000,
	17505, 17505, 1799, 823, -1000, -1000, -1000, -1000, 1006, 992,
	-1000, 989, -1000, 2086, -1000, 1216, -1000, 1600, -1000, 481,
	1364, -1000, 1985, 1216, 40408, 1216, 25, 1986, -1000, 1475,
	-1000, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600,
	1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600,
	1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600,
	-1000, -1000, 40408, 1400, -1000, -1000, 1949, 1323, 67, -1000,
	1321, -1000, -1000, 442, -1000, 17505, -1000, 27494, 988, 980,
	-1000, -1000, -1000, -1000, -390, -1000, -1000, -1000, -1000, -1000,
	-1000, 303, 1388, -1000, 614, 40408, 40408, 1158, 248, -155,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 17505,
	-1000, 1158, 1682, -1000, -238, -1000, 1303, -1000, -1000, -1000,
	-1000, -1000, 1303, 1303, -1000, -1000, 1216, 1386, -1000, 821,
	-1000, -1000, -1000, -1000, -1000, 40408, 1364, 40408, -1000, 1291,
	1158, 1600, 1985, -1000, 1243, -1000, 303, -1000, 1586, 1656,
	-1000, -1000, -1000, 15744, -1000, -1000, -1000, -1000, -1000, 165,
	-144, 11610, 8650, 1234, -1000, -1000, 1755, -141, -162, 1341,
	-1000, -326, -1000, -1000, 26907, -1000, -1000, -1000, -1000, -1000,
	1352, -1000, -1000, 23385, 39821, -1000, -135, 307, -144, 17505,
	1492, 1158, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-22, -1000, -1000, -1000, -1000, -1000, 1651, -1000, 1686, -1000,
	1158, -1000, -1000, -1000, 1227, -1000, 3902, -257, 1680, -1000,
	-92, -1000, -1000, -1000, 765, 867, -1000, -1000, -1000, -1000,
	-1000, -1000, 1229, 40408, -1000, 349, -1000, -1000, -147, -149,
	-1000, -1000, 39821, -248, 558, 5973, -1000, 1675, 1619, 2065,
	-1000, -1000, -1000, -1000, -1000, -1000, -396, 1203, 223, -1000,
	-158, -1000, -1000, 1924, 25, -1000, 2067, -1000, 2053, 543,
	543, -1000, 798, -396, -1000, -168, -260, -1000, -1000, -1000,
	-1000, -1000, 339, 874, -1000, -1000, -1000, -1000, 5973, -1000,
	-1000, -1000, 195, 195, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2435, 2434, 36, 7, 33, 32, 2433, 26, 107,
	186, 40, 188, 111, 2432, 2431, 2430, 2428, 2427, 2424,
	2422, 216, 215, 214, 2419, 2418, 2417, 2416, 2415, 2414,
	2413, 2409, 2408, 2405, 211, 171, 181, 2403, 2402, 2401,
	128, 178, 94, 97, 183, 2400, 2397, 89, 2395, 2394,
	2393, 177, 175, 174, 725, 2392, 184, 127, 45, 2391,
	2390, 2389, 2387, 2386, 2385, 2382, 2376, 2375, 2374, 2361,
	2360, 2358, 2357, 2356, 2355, 2354, 331, 2353, 2352, 16,
	2351, 93, 2349, 2347, 2345, 135, 2344, 2342, 2337, 25,
	2336, 2335, 2334, 2330, 2329, 2328, 2327, 150, 2326, 2325,
	2324, 2322, 190, 2321, 2320, 265, 119, 120, 2319, 2318,
	118, 179, 2317, 138, 2316, 2315, 2314, 158, 2309, 5790,
	2308, 76, 74, 2307, 73, 88, 70, 67, 5, 14,
	2306, 2305, 75, 98, 2304, 108, 77, 2301, 110, 125,
	2300, 2299, 10, 4, 2298, 2, 6, 3, 80, 2297,
	2295, 152, 2292, 2290, 2289, 103, 2288, 2286, 3882, 2285,
	105, 143, 122, 84, 2283, 52, 65, 2282, 2280, 2274,
	2273, 2272, 53, 2271, 2270, 2268, 148, 47, 172, 43,
	41, 59, 142, 2267, 38, 90, 2266, 147, 2264, 2263,
	68, 48, 42, 2262, 39, 141, 131, 58, 95, 151,
	2261, 2258, 61, 83, 2257, 2254, 2243, 2241, 2240, 2239,
	81, 2238, 63, 2237, 192, 2236, 23, 2235, 46, 55,
	2233, 71, 121, 78, 34, 2231, 166, 2230, 60, 167,
	136, 164, 2224, 2220, 2217, 180, 262, 2216, 2215, 85,
	169, 155, 157, 96, 2214, 261, 2208, 2206, 102, 1709,
	2846, 37, 168, 2205, 2202, 3839, 145, 35, 20, 2201,
	132, 2199, 2198, 2196, 193, 173, 123, 890, 66, 2194,
	2192, 12, 2191, 2190, 2189, 2187, 2186, 2185, 99, 31,
	30, 29, 194, 82, 17, 165, 86, 2184, 2183, 2179,
	134, 101, 2174, 163, 162, 139, 117, 2173, 176, 153,
	149, 2166, 185, 28, 2165, 2164, 2162, 2161, 100, 2160,
	2159, 2157, 2156, 161, 154, 130, 91, 2155, 92, 129,
	160, 159, 49, 2154, 44, 2152, 2151, 22, 182, 21,
	2150, 13, 79, 69, 24, 126, 137, 2149, 0, 2147,
	15, 170, 274, 156, 2145, 2144, 8, 9, 11, 2143,
	2140, 2137, 2134, 2133, 144, 2130, 2129, 2128, 2127, 19,
	50, 18, 1, 2121, 2119, 5795, 3974, 140, 2110, 195,
}

//line sql.y:6951
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 363, 364, 364, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 338, 338,
	338, 341, 341, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 83, 83, 22, 23, 23, 23, 23,
	367, 367, 153, 153, 151, 151, 152, 152, 221, 221,
	24, 25, 25, 231, 231, 230, 230, 230, 232, 232,
	232, 232, 267, 267, 26, 26, 26, 26, 26, 103,
	103, 340, 340, 339, 331, 331, 330, 330, 329, 337,
	337, 336, 336, 335, 38, 39, 48, 48, 48, 48,
	49, 50, 342, 342, 304, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 306, 306, 292, 292, 305, 305, 305, 305, 305,
	305, 305, 291, 291, 114, 114, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 358, 358, 358, 357, 357, 201, 201,
	201, 201, 201, 201, 201, 201, 123, 123, 132, 132,
	132, 132, 132, 121, 121, 122, 120, 120, 120, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 131, 131, 127, 127, 127, 128, 128, 128,
	129, 129, 359, 359, 359, 359, 271, 271, 271, 271,
	274, 274, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 273, 273, 273, 273, 273, 275, 275, 275, 275,
	275, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 277, 277, 277, 277,
	277, 277, 277, 277, 290, 290, 278, 278, 285, 285,
	286, 286, 286, 287, 287, 287, 288, 288, 283, 283,
	283, 283, 283, 283, 284, 284, 284, 293, 318, 318,
	317, 317, 315, 315, 315, 315, 315, 315, 315, 315,
	302, 302, 312, 312, 312, 312, 312, 301, 301, 297,
	297, 297, 298, 298, 299, 299, 296, 296, 300, 300,
	314, 314, 313, 313, 294, 294, 295, 295, 320, 360,
	360, 360, 360, 360, 361, 361, 321, 349, 351, 351,
	351, 350, 350, 347, 348, 346, 346, 346, 346, 346,
	81, 81, 81, 243, 243, 244, 244, 310, 310, 309,
	309, 309, 311, 311, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 238, 238, 238, 345, 345,
	345, 345, 345, 345, 344, 344, 344, 307, 307, 307,
	343, 343, 57, 57, 185, 185, 45, 45, 45, 45,
	45, 45, 44, 44, 44, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 46, 46, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 85, 85, 86, 86, 86, 86, 88, 88,
	88, 323, 323, 58, 58, 3, 3, 141, 143, 144,
	144, 142, 142, 142, 142, 142, 142, 60, 60, 59,
	59, 146, 145, 147, 147, 147, 1, 1, 2, 2,
	4, 4, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 289, 289, 289, 322, 322, 324,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	91, 90, 90, 89, 92, 92, 92, 92, 92, 92,
	92, 92, 326, 326, 326, 61, 61, 327, 279, 280,
	281, 5, 6, 303, 325, 99, 99, 28, 37, 37,
	29, 29, 29, 29, 30, 30, 62, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 352, 352, 237, 237, 246,
	246, 236, 236, 260, 260, 260, 239, 239, 239, 240,
	240, 356, 356, 356, 64, 64, 64, 66, 66, 67,
	68, 68, 262, 262, 263, 263, 69, 70, 82, 82,
	82, 82, 82, 82, 84, 84, 84, 15, 15, 15,
	15, 78, 78, 78, 14, 14, 65, 65, 72, 353,
	353, 354, 355, 355, 355, 355, 73, 75, 31, 31,
	31, 31, 31, 31, 109, 109, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 97, 104, 104,
	104, 98, 98, 368, 76, 77, 77, 102, 102, 102,
	95, 95, 95, 101, 101, 101, 16, 16, 17, 220,
	220, 18, 18, 106, 106, 108, 108, 108, 108, 108,
	110, 110, 110, 110, 110, 110, 110, 105, 105, 107,
	107, 107, 107, 253, 253, 253, 252, 252, 135, 135,
	137, 136, 136, 138, 138, 139, 139, 139, 139, 183,
	161, 161, 218, 218, 216, 216, 217, 217, 219, 219,
	219, 219, 222, 222, 140, 140, 140, 140, 148, 148,
	149, 149, 150, 150, 261, 261, 258, 258, 258, 257,
	257, 154, 154, 154, 156, 155, 155, 155, 155, 157,
	157, 159, 159, 158, 158, 160, 165, 165, 164, 164,
	162, 162, 162, 162, 163, 163, 163, 163, 166, 166,
	119, 119, 119, 119, 119, 119, 119, 130, 130, 130,
	130, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 234, 234,
	167, 167, 175, 175, 175, 175, 168, 168, 168, 168,
	168, 168, 168, 176, 176, 176, 182, 177, 177, 173,
	173, 173, 173, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 269, 269, 334, 334,
	333, 333, 332, 332, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 369, 369, 282, 282, 282,
	282, 174, 174, 174, 174, 174, 100, 100, 100, 100,
	100, 266, 266, 266, 270, 270, 270, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 188, 188, 96, 96, 186, 186, 187, 189,
	189, 184, 184, 184, 170, 170, 170, 190, 190, 191,
	191, 192, 192, 194, 193, 193, 195, 196, 196, 196,
	197, 197, 198, 198, 198, 47, 47, 47, 47, 47,
	42, 42, 42, 42, 43, 43, 43, 111, 111, 111,
	111, 113, 113, 112, 112, 79, 79, 80, 80, 80,
	117, 117, 118, 118, 118, 115, 115, 116, 116, 214,
	214, 199, 199, 199, 206, 206, 206, 202, 202, 204,
	204, 204, 205, 205, 205, 203, 211, 211, 213, 213,
	212, 212, 208, 208, 209, 209, 210, 210, 210, 207,
	207, 169, 169, 169, 169, 169, 215, 215, 215, 215,
	223, 223, 179, 179, 181, 181, 180, 134, 224, 224,
	228, 225, 225, 229, 229, 229, 229, 229, 226, 226,
	227, 227, 254, 254, 254, 233, 233, 245, 245, 241,
	241, 242, 242, 235, 235, 247, 247, 247, 74, 178,
	178, 319, 319, 316, 250, 250, 251, 251, 255, 255,
	259, 259, 256, 256, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 365,
	366, 264, 265, 265, 265,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 3, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 5, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 0, 2,
	2, 2, 1, 1, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 1, 1, 3, 3, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 4, 3, 1, 3, 1, 7, 6,
	7, 7, 8, 8, 0, 1, 5, 2, 1, 1,
	1, 0, 1, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 1, 2, 0, 1, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 8, 4, 6, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 3, 3, 1, 3,
	5, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 4, 4, 2, 11, 3, 6, 8,
	6, 6, 6, 13, 8, 6, 10, 5, 5, 5,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 3, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 4, 2, 4,
	5, 4, 4, 4, 4, 4, 3, 3, 3, 5,
	2, 3, 3, 3, 3, 1, 1, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 2, 1, 3, 1, 2, 1,
	1, 5, 0, 1, 0, 1, 2, 3, 0, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 3, 2, 2, 3, 1,
	3, 2, 1, 2, 1, 2, 2, 4, 3, 3,
	6, 4, 7, 6, 1, 3, 2, 2, 2, 2,
	1, 1, 1, 3, 2, 1, 1, 1, 0, 1,
	1, 0, 3, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 1, 0, 1, 1, 5, 5, 4, 0,
	2, 4, 4, 0, 1, 0, 1, 2, 3, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 3, 1, 3,
	3, 7, 0, 3, 1, 3, 1, 3, 1, 1,
	3, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 1, 1, 2,
	6, 5, 6, 6, 0, 2, 3, 3, 0, 2,
	3, 3, 3, 2, 3, 1, 6, 3, 4, 3,
	1, 3, 4, 5, 6, 3, 4, 5, 6, 3,
	4, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 2, 2, 2, 2, 1, 1, 2, 9,
	6, 6, 6, 2, 2, 3, 3, 3, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	5, 5, 6, 4, 4, 8, 6, 8, 6, 8,
	5, 4, 2, 2, 1, 2, 2, 2, 8, 8,
	6, 5, 4, 4, 4, 6, 6, 4, 4, 4,
	7, 8, 6, 5, 6, 8, 11, 7, 8, 8,
	9, 4, 4, 4, 4, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 4, 0, 2, 0, 2,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 2, 2, 0, 3, 0,
	2, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 1, 0, 1, 2,
	4, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 3, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 1, 1, 5, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -363, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -83, -33, 32, -38, -48, 215, -49, -39, 216,
	-50, 218, 217, 254, 219, 247, 74, 296, 297, 299,
	300, 301, 302, -84, 252, 253, 221, 36, 45, 33,
	34, 37, 225, 260, 261, 224, -10, -34, 8, -365,
	11, 425, 249, 248, 28, -12, 456, 85, -364, 596,
	-214, -199, 22, 33, 29, -198, -194, -102, -199, 20,
	18, 7, -76, -368, -76, -76, 12, 13, -76, -304,
	-306, 85, 152, 85, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -328, -44, -41, 220, 217, 264,
	119, 120, 254, 255, 256, 219, 238, 253, 257, 252,
	273, -40, 80, 33, 456, 459, -311, 216, 222, 223,
	426, 122, 121, 75, 218, -308, 350, 488, 566, -56,
	568, 101, 103, 567, 44, 228, 569, 570, 571, 495,
	572, 237, 573, 574, 575, 576, 582, 537, 583, 584,
	585, 123, 7, -76, -259, -255, -338, -249, 88, 89,
	90, 453, 240, 486, 487, 289, 80, 41, 347, 350,
	488, 566, 296, 310, 304, 331, 323, 454, 489, 292,
	241, 277, 563, 321, 128, 568, 295, 490, 255, 355,
	356, 491, 357, 101, 299, 392, 581, 294, 492, 579,
	103, 567, 79, 51, 44, 250, 319, 224, 315, 569,
	278, 493, 464, 271, 122, 119, 588, 36, 313, 50,
	30, 578, 121, 49, 570, 143, 494, 571, 495, 359,
	338, 557, 48, 360, 256, 496, 83, 261, 458, 565,
	361, 314, 362, 288, 577, 221, 497, 549, 363, 364,
	558, 498, 339, 343, 499, 384, 365, 595, 52, 500,
	501, 559, 120, 502, 78, 572, 308, 309, 503, 286,
	239, 386, 335, 435, 442, 443, 107, 108, 438, 109,
	444, 110, 445, 446, 447, 436, 111, 104, 437, 448,
	449, 336, 337, 112, 450, 106, 105, 439, 441, 113,
	451, 237, 35, 366, 455, 290, 58, 265, 387, 46,
	341, 592, 45, 553, 504, 556, 334, 330, 53, 505,
	506, 507, 508, 573, 333, 307, 329, 587, 4, 283,
	574, 62, 223, 345, 344, 346, 272, 383, 326, 509,
	510, 511, 244, 81, 512, 316, 21, 513, 514, 367,
	279, 515, 56, 516, 517, 390, 253, 518, 54, 575,
	39, 519, 258, 589, 576, 520, 521, 522, 523, 260,
	524, 369, 525, 368, 340, 342, 267, 370, 457, 526,
	312, 257, 580, 527, 245, 564, 259, 264, 252, 391,
	246, 528, 529, 530, 531, 532, 293, 548, 533, 534,
	300, 582, 43, 535, 536, 537, 538, 539, 287, 282,
	385, 394, 61, 82, 352, 540, 541, 562, 306, 280,
	542, 297, 55, 583, 584, 585, 274, 586, 9, 593,
	594, 372, 123, 284, 285, 47, 327, 266, 543, 544,
	317, 318, 332, 305, 328, 298, 550, 268, 373, 254,
	545, 393, 281, 348, 353, 461, 273, 374, 561, 460,
	325, 322, 275, 546, 375, 229, 269, 270, 547, 551,
	376, 377, 291, 378, 379, 380, 381, 382, 276, 459,
	303, 320, 354, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 434, 227, -76, 227, -158, -255, 227, -226, 356,
	-246, 358, 371, 366, 376, 364, -237, 367, 369, 267,
	-356, 384, 227, 373, 215, 169, 359, 368, 377, 378,
	291, 379, 382, 276, -352, -338, 571, 586, 128, 324,
	363, 361, 385, 553, 381, 380, -255, 298, -262, 303,
	-250, -338, -249, 301, -158, -82, 549, 219, -264, -264,
	-104, 553, 555, -177, -119, 136, -130, -133, -124, -125,
	-171, -172, -173, -174, -131, -184, 158, 159, 166, 137,
	-182, -134, 26, 452, 427, 426, 169, 31, 211, 68,
	69, 429, 430, 139, 57, 402, 403, -132, 397, 404,
	399, 432, 433, 114, 434, 104, 106, 105, 336, 337,
	435, 436, 437, 107, 108, 109, 110, 111, 112, 113,
	438, 441, 439, 440, 442, 443, 444, 449, 450, 445,
	446, 447, 448, 451, -250, -255, 232, 396, 226, 164,
	425, -126, -122, -8, -180, 395, 400, 401, 405, 398,
	-338, -249, -128, -127, -167, 91, 97, 102, 98, -362,
	115, -365, 92, 93, 94, 95, 96, 116, 117, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	44, 372, 372, -158, -76, -76, -76, -76, -192, -102,
	-194, -10, -8, -365, 8, -76, -8, -9, -13, -34,
	-36, 482, -35, -255, -199, -214, 12, 154, 42, 50,
	-197, -198, -12, -8, -119, 19, 23, 24, -107, 160,
	-119, -255, -77, -107, -235, 231, -76, -76, -225, -267,
	298, -229, 385, 384, -251, -227, -250, -248, -226, 383,
	220, 23, 462, 135, 25, 27, 138, 169, 19, 139,
	37, 222, 324, 238, 168, 234, 426, 215, 72, 463,
	397, 399, 395, 402, 428, 429, 396, 358, 31, 13,
	465, 28, 248, 24, 38, 162, 217, 142, 466, 251,
	26, 249, 114, 117, 468, 22, 75, 243, 14, 236,
	40, 16, 469, 470, 17, 232, 231, 154, 228, 70,
	11, 211, 29, 151, 66, 471, 130, 472, 473, 474,
	475, 68, 152, 20, 590, 400, 401, 33, 554, 452,
	262, 164, 73, 59, 555, 136, 398, 476, 477, 115,
	478, 118, 76, 560, 132, 18, 71, 42, 479, 263,
	480, 233, 591, 481, 388, 482, 153, 218, 425, 69,
	483, 226, 371, 8, 431, 32, 247, 235, 125, 67,
	484, 227, 141, 432, 433, 230, 116, 7, 129, 34,
	12, 74, 77, 403, 404, 405, 57, 124, 456, 140,
	15, 485, 389, 134, 128, -305, 152, -291, -295, -250,
	242, -321, 238, -158, -314, -313, -250, -365, -103, -245,
	228, 236, 235, 129, -342, 132, 284, 396, 226, -51,
	-52, -53, -226, 168, 570, -85, 259, 263, 86, 86,
	-295, -294, -293, -343, 263, 242, -320, -312, 234, 243,
	-301, 235, 236, -296, 228, 130, -343, -296, 233, 243,
	238, 242, 263, 263, 123, 263, 123, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 258, -302, 144, -302,
	460, 460, -308, -343, 238, -343, -343, 230, 35, 35,
	-247, -296, 230, 25, -302, -302, -302, -226, 168, -302,
	-302, -302, -302, 271, 271, -302, -302, -302, -302, -302,
	-302, -302, -302, -302, -302, -302, -302, -302, -302, -302,
	-302, -302, 227, -342, -111, 382, 291, 80, -54, 273,
	-37, -158, -245, 228, 229, -342, 260, -158, 212, -158,
	-239, 152, 15, -239, -236, 372, 370, 357, 362, -239,
	-239, -239, -239, 274, 355, -297, 228, 35, 239, 372,
	274, 355, 274, 275, 274, 275, 365, 375, 274, -260,
	14, 154, 396, 360, 364, 267, 227, 268, 229, 374,
	-338, 556, 275, -260, 92, -240, 152, 372, 270, -239,
	-265, -365, -251, 324, -265, -265, 32, 89, 230, -250,
	-78, -250, 92, -15, -11, -22, -21, -23, 144, -109,
	372, -97, 169, 571, 557, 558, 559, 556, 369, 564,
	562, 560, 274, 561, 86, 132, 134, 135, 4, -119,
	151, -168, 144, 145, 146, 147, 148, 149, 150, 154,
	136, 138, 152, 153, 133, 155, 156, 157, 158, 159,
	160, 161, 163, 162, 164, 165, 168, 213, 214, -125,
	-125, -125, -125, -182, -365, -365, -365, -125, -234, -365,
	-125, -365, -365, -365, -365, -188, -119, -365, -369, -365,
	-369, -369, -282, -365, -282, -365, -365, -365, -365, -365,
	-365, -365, -365, -365, -365, -365, -365, -365, -365, -365,
	-365, -365, -365, -365, -365, -365, -365, -365, -365, -365,
	-365, -365, -365, -365, -365, -365, -365, -365, -365, 212,
	-365, -365, -365, -365, -365, -282, -282, -282, -282, -282,
	102, 97, 91, -184, 98, 92, -250, -255, -8, -9,
	-177, -264, -353, -354, -161, -158, -365, 291, -250, -250,
	260, -197, -12, -8, -192, -198, -194, -8, -76, -95,
	-108, 63, 64, -110, 24, 38, 67, 65, 23, -366,
	87, -366, -214, -366, 86, -36, -218, 85, 61, 43,
	92, 92, 86, 21, -193, -195, -119, 14, -253, 4,
	-252, 25, -250, 92, 212, 100, 14, -159, 29, -158,
	-235, -235, 86, 298, -229, -267, -231, -230, 386, 388,
	144, -254, -250, 92, 31, 87, 86, -158, -271, -274,
	-276, -275, -277, -272, -273, 321, 322, 169, 325, 327,
	328, 329, 330, 331, 332, 333, 334, 335, 338, 32,
	250, 317, 318, 319, 320, 339, 340, 341, 342, 343,
	344, 345, 346, 304, 323, 454, 305, 306, 307, 308,
	309, 310, 312, 313, 314, 315, 316, -341, -338, 85,
	87, 86, -278, 85, -119, -111, 227, -338, 228, 228,
	228, -76, 425, -302, -302, -302, 258, 19, -44, -41,
	-328, 18, -40, -41, 220, 119, 120, 217, 85, -291,
	85, -300, -341, -338, 85, 130, 233, 129, -299, -296,
	-299, -300, -338, -184, -338, 130, 130, -338, -338, -222,
	-250, -222, -222, 23, -222, 23, -222, 23, 94, -250,
	-222, 23, -222, 23, -222, 23, -222, 23, -222, 23,
	31, 78, 79, 31, 81, 82, 83, -184, -338, -184,
	-291, -226, -158, -338, 94, 94, 94, -302, -302, 94,
	92, 92, 92, -302, -302, 94, 92, -257, -255, 92,
	92, -344, 244, 288, 290, 94, 94, 94, 94, 31,
	92, -345, 31, 578, 577, 579, 580, 581, 92, 94,
	31, 94, 31, 94, -250, 85, -158, -117, 278, 215,
	217, 220, 76, 92, 292, 144, 44, 86, 230, 227,
	-338, -241, 232, -241, -250, -256, -255, -248, 92, -119,
	-298, 14, 154, -260, -260, -239, -158, -298, -260, -239,
	-158, -239, -239, -239, -239, -260, -260, -260, -239, -255,
	-255, -158, -158, -158, -158, -158, -158, -158, -265, -265,
	-265, -240, -239, 556, 92, 76, -263, 301, 335, 550,
	551, 552, 86, 456, -151, -158, 556, 556, 556, 556,
	556, 556, -119, -119, -119, -119, 478, -175, 115, 136,
	116, 117, -133, -176, -180, -182, 99, 154, 138, 152,
	153, -124, -125, -124, -124, -124, -124, -124, -124, -124,
	-124, -124, -124, -124, -124, -124, -266, -338, 92, 169,
	-129, -128, 98, -362, -129, -105, -107, -119, -119, -338,
	-250, -105, -105, -119, -101, 24, 38, -186, -187, 140,
	-184, -366, -366, 94, 98, -250, -250, -94, -93, 407,
	408, 409, 410, 412, 413, 414, 417, 418, 422, 423,
	406, 424, 411, 416, 419, 420, 421, 415, 320, -119,
	-119, -119, -119, -119, -119, -178, -177, -337, -336, -335,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -106, 24, 38, -105, -251, -256, -248,
	-105, -106, -106, -105, -105, 212, -214, -366, 86, -355,
	388, 389, 554, -258, 263, -257, 25, -178, 92, 14,
	-220, 77, -250, -197, -197, 63, 64, 59, -105, -110,
	-366, -35, 25, -216, -250, 62, 92, -283, -226, 347,
	348, -119, -119, 86, -196, 27, 28, -158, -252, 160,
	-256, -158, -221, 263, -158, -136, -138, -139, -140, -161,
	-183, -365, -141, 471, 14, -151, -152, -160, -255, -229,
	-231, 86, 387, 389, 390, 76, 118, -119, -284, 168,
	-310, -309, -308, -291, -293, -294, -295, 87, -284, -287,
	353, 352, -278, -278, -278, -278, -278, -283, -283, -283,
	-283, 85, 85, -278, -278, -278, -278, -285, 85, -285,
	-285, -286, 85, -286, -321, -119, -318, -317, -315, -316,
	237, 101, 547, 503, 456, 495, 537, 77, -313, -196,
	94, -366, -117, -242, 232, -319, -316, -338, -338, -338,
	-242, -338, 92, -338, 92, -338, 92, -86, -58, -1,
	590, 591, 592, 86, 19, -292, -291, -57, 288, -324,
	-325, 263, -320, -314, -300, 130, -299, -300, -300, -338,
	86, 29, 123, 123, 123, 123, 456, 217, 32, -243,
	494, 136, -291, -57, -266, 230, -266, -266, 92, 92,
	-238, 586, -151, -113, 280, 144, 269, 269, 227, 227,
	282, -158, 293, 295, 294, 292, 23, 281, 283, 285,
	271, -158, -158, -241, 76, -153, -158, 26, -255, -158,
	-239, -239, -158, -239, -239, -158, -250, -97, 388, 86,
	456, 22, -98, 22, -365, 115, 116, 117, -176, -124,
	-125, -124, 135, 251, 86, -366, 25, 86, 77, -366,
	-366, -366, 86, 14, -105, -189, -187, 142, -119, -366,
	-366, -366, 86, 86, 14, -270, 25, -366, -366, -366,
	86, 86, -366, -366, 86, 86, -366, 86, 86, 86,
	-334, 86, 86, 86, 86, -366, -366, -366, -366, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, -366,
	-366, -105, -105, -365, 212, -366, -366, -366, -366, -366,
	-251, -354, 553, 389, -165, -164, -162, 74, 231, 75,
	-365, -257, -366, -129, 89, -217, 89, -216, -170, -250,
	94, 98, -199, -135, -137, 14, -110, -182, 87, 86,
	-283, -203, -208, -236, -250, 92, 169, -195, 212, -166,
	15, -169, 32, 57, -11, -365, -365, 32, 86, -154,
	-156, -155, -157, 66, 70, 72, 67, 68, 69, 73,
	-261, 25, -136, -9, -8, -365, -365, -158, -151, -367,
	14, 77, -367, 86, 212, -230, -232, 391, 388, 394,
	-338, 92, -85, 86, -308, -295, -200, -114, 40, -288,
	354, -283, -283, -290, 92, -290, 94, 94, 87, -47,
	-42, -43, 33, 80, -315, -302, 92, 39, -302, -302,
	-250, 87, -196, -113, -158, 136, 76, -319, -319, -319,
	-255, -2, 589, 595, 130, 85, 357, 18, -216, 86,
	87, -185, 289, 87, -87, -250, 87, 85, -300, -300,
	-250, -365, 227, 31, 31, 494, -57, -185, -284, -338,
	588, 587, 87, 229, 287, -118, 402, -115, 92, 88,
	-158, -158, -158, -158, -158, 220, 217, 272, 230, -151,
	-158, 86, -81, 246, 241, -260, -260, 33, -158, 388,
	565, 563, -119, 135, 251, -133, -125, -107, 453, -268,
	169, 321, 250, 319, 315, 335, 326, 352, 317, 353,
	314, 313, 312, -268, -266, -119, -119, -192, 143, -119,
	141, -119, -119, -119, -366, 169, 321, -119, -119, -335,
	-119, -119, -119, -333, -332, -129, -184, -366, -333, -119,
	-119, -332, -332, -336, -336, -336, -336, -336, -177, -177,
	-177, -177, -366, -366, -106, -251, -162, -296, -296, -296,
	-222, 86, -233, 22, 14, 57, 57, -135, -166, -136,
	-110, -250, -206, 549, -211, 46, -209, -210, 47, -207,
	48, 56, 160, -197, -119, -223, 76, -224, -228, -184,
	-179, -181, -180, -365, -215, -366, -250, -222, -224, -138,
	-139, -139, -138, -139, 66, 66, 66, 71, 66, 71,
	66, -155, -255, -366, -366, -9, -119, -258, 77, -136,
	-136, -160, -255, 160, 388, 392, 393, -308, -361, 115,
	136, 31, 76, 350, 101, -359, 168, 491, 542, 547,
	503, 495, 537, -360, 233, 129, 130, 245, 25, 41,
	87, 86, 87, 86, 87, 86, -244, -243, -43, -42,
	-302, -302, 94, -338, 92, 92, 229, 26, -158, 76,
	76, 76, -88, 593, 94, 85, -3, 80, -119, 85,
	19, -291, -184, -326, -279, -327, -280, -281, -5, -6,
	-303, -91, 57, 101, -61, 44, 228, 573, 574, 123,
	-365, 586, -318, -216, -322, -324, -158, -121, -365, -120,
	-122, -126, 158, 159, -185, -158, -112, 278, 286, 85,
	-116, 89, -340, 77, 269, 350, 269, -158, -81, -47,
	-158, -239, -239, 33, -338, -366, -133, -125, -365, -366,
	-278, -278, -278, -286, -278, 309, -278, 309, -278, -366,
	-366, 86, -366, 22, -366, -96, 431, -119, 86, 86,
	-366, 85, 85, -366, -366, -334, 86, -366, 86, -366,
	86, -269, 548, -366, -366, -366, -366, -366, -366, -366,
	-366, -366, -366, -366, -163, 22, -163, -163, -366, 89,
	-158, -166, -190, 16, -203, 51, 327, -213, -212, 55,
	47, -210, 19, 49, 19, 30, -223, 86, 144, 86,
	-366, -366, 86, 57, 212, -366, -166, -149, -148, 76,
	77, -150, 76, -148, 66, 66, -218, -366, 86, -221,
	-136, -166, -166, 212, 115, -365, -123, -132, -121, 12,
	92, 92, -338, -358, 577, 578, 31, 94, -302, -302,
	130, 130, -158, 85, -283, 92, -283, 94, 94, 31,
	81, 82, 83, 31, 78, 79, -158, -158, -158, -158,
	-323, 85, 19, -119, 85, 144, 87, -216, -216, 265,
	154, -302, 571, 271, 271, -302, -302, -302, -90, -89,
	593, 87, -366, 86, -289, 456, 459, -119, -127, -127,
	-218, 87, -331, 456, -339, -250, -250, -250, -250, -124,
	-283, -119, -119, -197, 92, -119, -119, 94, 94, -366,
	-333, -332, -119, -366, -146, -145, -147, 557, 115, 31,
	-268, -365, 66, 18, 16, -365, -365, -258, -190, -191,
	17, 19, -204, 53, -202, 52, -202, -212, 19, 19,
	92, 19, 92, 130, -228, -119, -181, 57, -11, -250,
	-179, -250, -192, -119, 85, -119, -129, -166, -166, -119,
	-172, 434, 104, 106, 105, 336, 337, 435, 436, 437,
	107, 108, 109, 110, 111, 112, 113, 438, 441, 439,
	442, 443, 444, 449, 450, 445, 446, 447, 448, 451,
	92, 92, 85, -119, 87, 87, -218, -322, -58, 87,
	-216, 94, 87, 266, -180, -365, 92, -302, -302, -302,
	94, 94, -257, -366, 86, -250, -360, -324, 460, 460,
	-366, 25, -330, -329, -251, 85, 77, -100, 154, 456,
	-366, -366, -366, -366, -366, 87, 87, -366, -366, 86,
	-366, -145, -147, -366, 76, -129, -219, -366, -250, 233,
	19, 19, -219, -219, -165, -191, -119, -177, -205, 54,
	76, 118, 92, 92, 92, 12, -179, 212, -197, -216,
	-143, 357, -192, -366, -216, 87, 25, 87, 595, 130,
	87, -180, -99, -365, 262, -257, 92, 92, -89, -92,
	-11, 86, 144, -216, -158, -366, 454, 73, 457, -119,
	-366, 76, 466, 557, 86, -366, -366, -366, 76, 118,
	-224, -250, 87, -366, -365, -197, 87, -201, -11, 85,
	-3, 262, -279, -327, -280, -281, -5, -6, -303, -79,
	456, -329, -307, -251, 92, 94, 87, 62, 455, 458,
	-334, -250, 233, -258, -144, -142, -250, 509, -350, -349,
	452, -361, -357, 115, 136, 101, -359, 547, 503, 124,
	125, -79, -119, 85, -366, -80, 277, 553, -340, 62,
	-366, -366, 86, 22, -271, -60, 520, -347, -348, 76,
	-351, 363, 519, 540, 115, 92, 87, -216, 238, -331,
	456, -142, 516, -284, -129, -348, 76, -347, 76, 13,
	12, -4, 594, 87, 279, 457, -59, 26, -143, -346,
	246, 241, 244, 32, -346, 94, -4, 458, 520, 240,
	31, 115, -129, -146, -145, -145,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 803,
	803, 803, 0, 803, 0, 0, 803, -2, -2, 803,
	1280, 0, 803, 0, 0, -2, 735, 737, 0, 739,
	-2, 0, 0, 748, 1771, 1771, 798, 0, 0, 0,
	0, 0, 803, 803, 803, 803, 1141, 48, 803, 0,
	83, 84, 754, 755, 756, 63, 0, 1769, 1, 3,
	69, 73, 0, 0, 0, 56, 1150, 0, 76, 0,
	0, 807, 0, 805, 0, 1263, 803, 803, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 552, 489, 535, 487, 521, -2, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 370, 370, 0, 0, -2, 480, 480, 480,
	0, 0, 0, 518, 1265, 432, 370, 370, 370, 0,
	370, 370, 370, 370, 0, 0, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 1167, 153, 1281, 1278, 1279, 38, 39,
	40, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 0, 1257, 0, 665, 903, 0, 726, 726,
	0, 726, 726, 726, 726, 0, 0, 0, 677, 0,
	0, 0, 0, 723, 0, 0, 696, 698, 0, 723,
	0, 729, 0, 710, 726, 1772, 1772, 1772, 1248, 0,
	720, 718, 732, 733, 715, 716, 734, 738, 0, 743,
	746, 1274, 1275, 0, 761, 47, 1514, 753, 766, 767,
	0, 799, 800, 43, 997, 0, 925, 930, 941, 954,
	955, 956, 957, 958, 960, 961, 0, 0, 0, 0,
	966, 967, 0, 0, 0, 0, 0, 978, 0, 0,
	0, 0, 0, 1122, 0, 1085, 1085, 1014, 1085, 1087,
	1087, 0, 0, 0, 1768, 1554, 1562, 1563, 1558, 1559,
	1540, 1552, 1555, 1543, 1544, 1546, 1548, 1553, 1560, 1566,
	1545, 1565, 1564, 0, 1541, 1542, 1547, 1557, 1561, 1549,
	1550, 1551, 1556, 1567, 1131, 0, 0, 0, 0, 0,
	0, 272, 273, 996, 1237, 1087, 1087, 1087, 1087, 1087,
	-2, -2, 219, 220, 221, 222, 223, 224, 225, 0,
	215, 0, 277, 278, 274, 275, 276, 980, 981, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	1771, 0, 776, 0, 0, 0, 0, 0, 1150, 0,
	1142, 1141, 61, 0, 803, -2, 0, 0, 0, 0,
	45, 0, 50, 862, 75, 74, 1189, 0, 0, 0,
	57, 1151, 65, 67, 1152, 0, 808, 809, 0, 839,
	843, 0, 804, 0, 0, 1264, 1263, 1263, 100, 0,
	1712, 1241, -2, -2, 0, 0, 1276, 1277, 1250, -2,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, -2, 0, 0, 165, 166, 0,
	41, 397, 0, 161, 0, 390, 336, 0, 1167, 0,
	0, 0, 0, 0, 803, 0, 1258, 142, 143, 150,
	151, 152, 370, 370, 370, 532, 0, 0, 153, 153,
	496, 497, 498, 0, 0, -2, 395, 0, 481, 0,
	0, 384, 384, 388, 386, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 0, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 613, 0, 371, 0,
	530, 531, 433, 0, 0, 0, 0, 0, 508, 509,
	0, 0, 1266, 1267, 0, 0, 0, 370, 370, 0,
	0, 0, 0, 370, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 1180, 0, 0, 0, -2, 0,
	657, 0, 0, 0, 1259, 1259, 0, 664, 0, 666,
	667, 0, 0, 668, 0, 723, 723, 721, 722, 670,
	671, 672, 673, 726, 0, 0, 379, 380, 381, 723,
	726, 0, 726, 726, 726, 726, 723, 723, 723, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	1772, 1772, 729, 726, 0, 706, 0, 707, 708, 711,
	712, 1773, 1774, 1296, 713, 714, 1249, 736, 744, 747,
	764, 762, 763, 765, 757, 758, 759, 760, 0, 778,
	779, 784, 0, 0, 0, 0, 790, 791, 792, 0,
	0, 795, 796, 797, 0, 0, 0, 0, 0, 923,
	0, 0, 986, 987, 988, 989, 990, 991, 992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 962,
	963, 964, 965, 968, 0, 0, 0, 973, 974, 0,
	0, 0, 0, 0, 813, 0, 1123, 0, 1012, 0,
	1013, 1015, 1016, 0, 1017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1269, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 823, 0,
	0, 823, 823, 0, 0, 208, 209, 210, 211, 212,
	226, 227, 228, 229, 230, 279, 1131, 0, 996, 0,
	0, 44, 768, 769, 0, 886, 1269, 0, 0, 819,
	0, 55, 64, 66, 1150, 59, 1150, 0, 825, 0,
	0, -2, -2, 826, 832, 833, 834, 835, 836, 52,
	1770, 53, 0, 72, 0, 46, 0, 0, 0, 0,
	348, 1192, 0, 0, 1143, 1144, 1147, 0, 840, 1595,
	844, 0, 846, 847, 0, 806, 0, 98, 0, 902,
	0, 0, 0, 1712, 1247, 0, 102, 103, 0, 0,
	0, 354, 1252, 1253, 1254, -2, 377, 0, 354, 343,
	287, 288, 289, 336, 291, 336, 336, 336, 336, 348,
	348, 348, 348, 319, 320, 321, 322, 323, 0, 0,
	306, 336, 336, 336, 336, 326, 327, 328, 329, 330,
	331, 332, 333, 292, 293, 294, 295, 296, 297, 298,
	299, 300, 338, 338, 338, 340, 340, 0, 42, 0,
	358, 0, 1147, 0, 0, 1180, 1261, 1271, 0, 0,
	0, 1261, 120, 0, 0, 0, 533, 563, 490, 522,
	534, 0, 493, 494, -2, 0, 0, 480, 0, 482,
	0, 378, 0, -2, 0, 388, 0, 384, 388, 385,
	388, 376, 389, 512, 513, 514, 0, 516, 517, 593,
	872, 0, 0, 0, 0, 0, 599, 600, 601, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	523, 524, 525, 526, 527, 528, 529, 0, 0, 0,
	482, 0, 519, 0, 434, 435, 436, 0, 0, 439,
	440, 441, 442, 0, 0, 445, 446, 447, 889, 890,
	448, 449, 474, 475, 476, 450, 451, 452, 453, 454,
	455, 456, 468, 469, 470, 471, 472, 473, 457, 458,
	459, 460, 461, 462, 465, 0, 135, 1171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1259,
	0, 0, 0, 0, 822, 904, 1282, 1283, 727, 728,
	0, 382, 383, 726, 726, 674, 697, 0, 726, 678,
	699, 679, 681, 680, 682, 701, 702, 726, 685, 724,
	725, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 703, 704, 705, 730, 0, 0, 745, 749, 750,
	751, 752, 0, 0, 781, 94, 786, 787, 788, 789,
	801, 794, 998, 920, 921, 922, 0, 924, 927, 0,
	982, 984, 929, 931, 993, 994, 995, 0, 0, 0,
	0, 0, 935, 939, 942, 943, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 959, 1101, 1102, 1103,
	976, 280, 281, 0, 977, 0, 837, 0, 0, 0,
	975, 0, 0, 0, 0, 814, 815, 1129, 1126, 0,
	0, 1086, 1088, 0, 0, 0, 0, 0, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1104,
	0, 0, 0, 0, 0, 0, 1270, 0, 130, 131,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 824, 1132, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 1236, 0, 771,
	772, 774, 0, 906, 0, 887, 0, 0, 777, 0,
	818, 0, 821, 58, 60, 830, 831, 0, 848, 827,
	54, 49, 0, 0, 864, 1190, 348, 1212, 0, 352,
	353, 1153, 1154, 0, 1146, 1148, 1149, 77, 845, 841,
	0, 918, 0, 0, 901, 0, 851, 853, 854, 855,
	884, 0, 858, 0, 0, 0, 0, 96, 903, 1242,
	101, 0, 0, 106, 107, 1243, 1244, 1245, 1246, 0,
	552, -2, 429, 167, 169, 170, 171, 162, -2, 346,
	344, 345, 290, 348, 348, 313, 314, 315, 316, 317,
	318, 0, 0, 307, 308, 309, 310, 301, 0, 302,
	303, 304, 0, 305, 396, 0, 1155, 359, 360, 362,
	370, 0, 365, 366, 0, 370, 370, 0, 391, 392,
	0, 1147, 1171, 0, 0, 0, 1272, 1271, 1271, 1271,
	0, 155, 156, 157, 158, 159, 160, 588, 0, 0,
	564, 586, 587, 153, 0, 0, 163, 484, 483, 0,
	620, 0, 394, 0, 0, 388, 388, 373, 374, 515,
	0, 0, 595, 596, 597, 598, 0, 0, 0, 504,
	423, 0, 482, 484, 354, 0, 437, 438, 443, 444,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 547, 548, 549, 550, 551, 1168, 1169, 1170,
	0, 0, 658, 0, 0, 420, 92, 1260, 663, 723,
	684, 700, 723, 676, 683, 709, 741, 785, 0, 0,
	0, 0, 793, 0, 0, 928, 983, 985, 932, 0,
	936, 940, 0, 0, 0, 0, 0, 0, 0, 979,
	1003, 1004, 0, 0, 1141, 0, 1127, 0, 0, 1011,
	1089, 1090, 0, 0, 0, 0, 0, 1022, 1023, 1024,
	0, 0, 1027, 1028, 0, 0, 1029, 0, 0, 0,
	0, 0, 0, 0, 0, 1041, 1042, 1043, 1044, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1055,
	999, 0, 0, 823, 0, 1091, 1092, 1093, 1094, 1095,
	1132, 770, 773, 775, 860, 907, 908, 0, 0, 0,
	0, 888, 1268, 816, 817, 820, -2, 0, 0, 1134,
	0, 0, 848, 918, 849, 0, 828, 51, 863, 0,
	1194, 1193, 1206, 1219, 349, 350, 351, 1145, 0, 1150,
	0, 1230, 0, 0, 1222, 0, 0, 0, 0, 0,
	0, 0, 0, 891, 0, 0, 894, 0, 0, 0,
	0, 885, 0, 0, 0, 0, 0, -2, 0, 0,
	90, 91, 0, 0, 0, 104, 105, 0, 0, 111,
	355, 356, 144, 153, 431, 168, 404, 0, 0, 286,
	347, 311, 312, 0, 334, 0, 0, 0, 425, 116,
	1159, 1158, 370, 370, 361, 0, 364, 0, 0, 0,
	1273, 337, 393, 0, 134, 0, 0, 0, 0, 0,
	140, 558, 0, 0, 565, 0, 0, 0, 488, 0,
	499, 500, 0, 592, -2, 654, 358, 0, 372, 375,
	873, 0, 0, 501, 0, 424, 484, 506, 507, 520,
	466, 467, 464, 0, 0, 1181, 1182, 1187, 1185, 1186,
	121, 540, 542, 541, 545, 0, 0, 538, 0, 420,
	1155, 0, 662, 421, 422, 726, 726, 780, 95, 0,
	783, 0, 0, 0, 0, 933, 937, 838, 0, 0,
	336, 336, 1109, 336, 340, 1112, 336, 1114, 336, 1117,
	336, 1120, 1121, 0, 0, 0, 0, 1124, 1010, 1130,
	0, 0, 0, 0, 1021, 0, 0, 0, 0, 132,
	133, 1058, 0, 0, 1060, 1062, 1063, 1033, 1059, 0,
	0, 1056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1000, 1001, 0, 1133, 909, 914, 914, 914,
	0, 0, 0, 1255, 1256, 1135, 1136, 918, 1137, 850,
	829, 865, 1212, 0, 1205, 0, -2, 1214, 0, 0,
	0, 1220, 842, 78, 919, 81, 0, 1230, 1238, 0,
	1221, 1232, 1234, 0, 0, 0, 1226, 0, 918, 852,
	880, 882, 0, 877, 892, 893, 895, 0, 897, 0,
	899, 900, 862, 857, 859, 0, 0, 98, 0, 918,
	918, 97, 0, 905, 108, 109, 110, 430, 172, 177,
	0, 0, 0, 182, 0, 184, 0, 0, 0, 189,
	190, 370, 370, 405, 0, 283, 285, 0, 0, 175,
	348, 0, 348, 0, 341, 0, 406, 426, 1156, 1157,
	0, 0, 363, 367, 368, 369, 0, 1262, 136, 0,
	0, 0, 561, 0, 589, 0, 0, 0, 0, 0,
	0, 164, 485, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 0, 370, 0, 0, 0, 370, 370, 370,
	0, 646, 357, 0, 0, 617, 614, 502, 0, 213,
	214, 216, 0, 0, 505, 862, 1172, 1173, 1174, 0,
	1184, 1188, 124, 0, 0, 0, 0, 659, 660, 661,
	93, 669, 675, 782, 802, 926, 934, 938, 0, 970,
	1107, 348, 1110, 1111, 1113, 1115, 1116, 1118, 1119, 971,
	972, 0, 1006, 0, 1008, 1150, 0, 1128, 0, 0,
	1020, 0, 0, 1025, 1026, 0, 0, 1032, 0, 1034,
	0, 0, 0, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1002, 0, 0, 0, 0, 886, -2,
	62, 1137, 1139, 0, 1199, 1197, 1197, 1207, 1208, 0,
	0, 1215, 0, 0, 0, 0, 82, 0, 0, 0,
	1235, 0, 0, 0, 0, 99, 1141, 874, 881, 0,
	0, 875, 0, 876, 896, 898, 856, -2, 0, 918,
	918, 88, 89, 0, 178, 0, 180, 206, 207, 0,
	183, 185, 186, 187, 193, 194, 195, 188, 0, 0,
	282, 284, 0, 0, 324, 335, 325, 0, 0, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 862, 137, 138, 139,
	553, 0, 563, 0, 0, 0, 556, 0, 491, 0,
	0, 0, 370, 370, 370, 0, 0, 0, 0, 631,
	0, 0, 594, 0, 602, 0, 0, 0, 217, 218,
	0, 1183, 539, 0, 122, 123, 0, 0, 544, 1096,
	1108, 0, 0, 0, 1125, 0, 0, 0, 0, 1030,
	0, 1061, 0, 1037, 0, 0, 0, 583, 584, 0,
	1057, 0, 915, 0, 0, 0, 0, 906, 1139, 80,
	0, 0, 1202, 0, 1195, 1198, 1196, 1209, 0, 0,
	1216, 0, 1218, 0, 1239, 1240, 1233, 0, 1225, 1228,
	1224, 1227, 1150, 878, 0, 883, 0, 1141, 87, 0,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 192, 0, 0, 339, 342, 0, 0, 0, 554,
	0, 566, 557, 0, 644, 0, 648, 0, 0, 0,
	651, 652, 653, 630, 0, 634, 398, 618, 615, 616,
	503, 0, 125, 126, 0, 0, 0, 0, 0, 0,
	1005, 1007, 1009, 1018, 1019, 1105, 1106, 1031, 1035, 0,
	1038, 0, 0, 1039, 0, 585, 0, 911, 868, 869,
	916, 917, 0, 0, 861, 79, 1140, 1138, 1191, 0,
	1200, 1201, 1210, 1211, 1217, 0, 1223, 0, 85, 0,
	0, 0, 1150, 179, 0, 198, 0, 562, 0, 565,
	555, 642, 643, 0, 655, 647, 649, 650, 632, -2,
	1175, 0, 0, 0, 546, 969, 0, 0, 0, 1058,
	1040, 0, 581, 582, 0, 910, 912, 913, 1203, 1204,
	1231, 1229, 879, 886, 0, 86, 411, 404, 1175, 0,
	0, 0, 635, 636, 637, 638, 639, 640, 641, 536,
	1177, 127, 128, 477, 478, 479, 121, 1097, 0, 1100,
	0, 870, 871, 567, 0, 569, 0, -2, 399, 412,
	0, 173, 199, 200, 0, 0, 203, 204, 205, 196,
	197, 117, 0, 0, 656, 0, 1178, 1179, 124, 1098,
	1036, 568, 0, 0, 354, 0, 578, 400, 401, 0,
	407, 408, 409, 410, 201, 202, 590, 0, 0, 543,
	0, 570, 571, 579, 0, 402, 0, 403, 0, 0,
	0, 559, 0, 590, 1176, 0, 0, 580, 576, 413,
	415, 416, 0, 0, 414, 591, 560, 1099, 0, 417,
	418, 419, 572, 573, 574, 575,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 137, 3, 3, 3, 163, 155, 3,
	85, 87, 160, 158, 86, 159, 212, 161, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 596,
	145, 144, 146, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 165, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 166,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 134, 135,
	136, 138, 139, 140, 141, 142, 143, 147, 148, 149,
	150, 151, 152, 153, 154, 156, 157, 162, 164, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:524
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:529
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:530
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:534
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:570
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:576
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:580
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:584
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:589
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:593
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:599
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:605
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:611
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:615
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:620
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:624
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:630
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:634
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:640
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:646
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:650
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:654
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:677
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:683
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:694
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:701
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:707
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:714
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:718
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:724
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:728
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:732
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:736
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:759
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:765
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:769
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:780
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:786
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:793
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:799
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:807
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:811
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:819
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:831
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:843
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:847
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:853
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:859
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:863
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:867
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:871
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:876
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:877
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:881
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:885
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:891
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:895
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:901
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:905
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:910
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:914
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:926
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:930
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:936
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:940
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:946
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:950
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:954
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:960
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:964
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:968
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:972
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:978
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:982
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:988
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:994
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1001
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1010
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1014
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1021
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1025
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1030
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1034
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1040
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1045
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1050
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1056
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1061
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1067
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1072
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1076
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1082
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1086
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1092
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1098
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1105
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1112
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1117
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1122
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1127
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1134
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1141
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1152
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1163
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1169
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1173
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1177
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1181
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1185
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1189
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1195
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1199
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1205
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1209
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1215
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1219
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1225
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1229
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1235
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1239
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1245
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1249
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1255
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1260
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1265
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1269
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1274
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1278
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1282
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1293
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1302
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1311
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1324
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1328
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1334
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1340
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1345
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1355
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1360
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1365
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1370
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1374
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1379
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1383
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1388
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1394
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1400
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1404
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1410
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1414
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1418
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1424
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1428
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1433
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1437
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1442
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1448
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1454
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1459
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1464
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1470
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1478
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1485
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1489
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1493
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1497
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1501
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1512
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1519
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1523
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1529
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1533
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1537
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1541
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1545
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1549
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1553
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1558
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1562
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1566
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1570
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1574
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1581
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1585
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1589
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1593
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1597
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1601
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1605
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1609
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1617
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1633
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1709
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1713
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1721
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1729
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1733
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = Utf8mb4Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1751
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1755
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1759
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1765
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1769
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1773
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1779
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1783
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1790
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1794
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1798
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1802
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1808
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1819
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1874
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1930
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1934
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1938
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1942
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1946
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1950
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1954
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1958
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1962
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1966
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1970
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1974
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1979
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1993
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2024
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2033
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2038
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2042
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2050
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2054
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2060
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2068
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2072
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2076
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2081
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2085
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2090
		{
			yyVAL.str = ""
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2094
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2098
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2102
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2117
		{
			yyVAL.str = ""
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2121
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2125
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2132
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2141
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2147
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2157
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2161
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2166
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2170
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2174
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2178
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2182
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2186
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2192
		{
			yyVAL.str = ""
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2202
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2206
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2210
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2214
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2218
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2223
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2227
		{
			yyVAL.str = yyDollar[2].str
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2233
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2237
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2241
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2248
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2252
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2257
		{
			yyVAL.str = "key"
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.str = yyDollar[1].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2267
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2276
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2286
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2290
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2296
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2300
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2306
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2310
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2316
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2320
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2326
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2332
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2336
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2340
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2344
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2348
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2357
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2363
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2369
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2375
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2379
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2383
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2388
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2392
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2398
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2404
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2410
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2414
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2418
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2422
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2426
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2431
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2439
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2445
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2449
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2454
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2458
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2463
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2467
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2473
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2477
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2481
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2487
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2491
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2497
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2501
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2505
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2509
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2513
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2517
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2521
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2525
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2529
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2533
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2537
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2541
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2545
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2549
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2553
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2557
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2561
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2565
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2569
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2573
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2577
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2581
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2585
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2589
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2593
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2597
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2601
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2605
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2609
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2613
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2617
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2622
		{
			yyVAL.str = ""
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2626
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2630
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2649
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2657
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2662
		{
			yyVAL.str = ""
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2668
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2672
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2677
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2681
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2690
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2694
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2698
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2702
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 491:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2706
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2712
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2716
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2720
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2726
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2730
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2734
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2738
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2742
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2746
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2750
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2754
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2758
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2762
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2766
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2770
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2774
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2778
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2782
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2786
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2790
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2794
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2798
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2802
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2806
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2810
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2814
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2818
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2822
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2826
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2832
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2836
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2842
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2846
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2850
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2854
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2858
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2862
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2866
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2870
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2874
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2880
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2887
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2894
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2901
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2907
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2917
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2924
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2931
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2943
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2953
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2957
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2961
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2974
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2984
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2988
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2999
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3006
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3013
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3020
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3027
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3034
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3038
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3047
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3055
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3064
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3071
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3079
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3083
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3092
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3103
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3107
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3112
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3116
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3121
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3125
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3131
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3137
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3143
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3147
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3153
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3157
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3163
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3169
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3175
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3181
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3187
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3191
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3195
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3199
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3205
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3211
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3217
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3221
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3225
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3231
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3235
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3240
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3244
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3249
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3253
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3259
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3263
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3267
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3271
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3275
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3279
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3283
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3287
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3291
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3295
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3299
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3303
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3307
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3311
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3315
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3319
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3323
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3327
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3331
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3335
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3339
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3343
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3348
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3352
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3356
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3363
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3367
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3373
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3378
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3382
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3387
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3392
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3397
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3402
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3407
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3413
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3419
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3424
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3430
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3436
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3440
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3446
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3451
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3455
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3460
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3465
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3470
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3475
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3481
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3487
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3494
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3501
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3508
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3516
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3520
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3526
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3532
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3538
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3544
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3550
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3556
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3562
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3568
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3574
		{
			yyVAL.str = ""
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3578
		{
			yyVAL.str = ""
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3584
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3590
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3594
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 660:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3600
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3604
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3613
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3617
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3623
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3627
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3632
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3638
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3642
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3646
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3650
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3654
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3658
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3662
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3666
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3670
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3674
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3678
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3682
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3686
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3690
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3694
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3698
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3702
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3706
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3710
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3714
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3718
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3722
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3726
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3730
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3734
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3738
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3742
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3746
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3750
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3754
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3758
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3762
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3766
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3770
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3774
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3778
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3782
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3787
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3791
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3795
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3800
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3804
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3808
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3812
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3817
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3831
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3835
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3839
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3845
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3855
		{
			yyVAL.str = ""
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.str = "extended "
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3865
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3869
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3885
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3889
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3893
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3899
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3903
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3907
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3917
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3923
		{
			yyVAL.empty = struct{}{}
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.empty = struct{}{}
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3931
		{
			yyVAL.empty = struct{}{}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3937
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3951
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3967
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3976
		{
			yyVAL.empty = struct{}{}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3978
		{
			yyVAL.empty = struct{}{}
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3981
		{
			yyVAL.empty = struct{}{}
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3983
		{
			yyVAL.empty = struct{}{}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3994
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3999
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4003
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4007
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4011
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4015
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4019
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4025
		{
			yyVAL.str = yyDollar[1].str
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4029
		{
			yyVAL.str = yyDollar[1].str
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4033
		{
			yyVAL.str = yyDollar[1].str
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4056
		{
			yyVAL.str = ""
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4060
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4064
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4070
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4074
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4090
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4096
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4100
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4106
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4112
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4116
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4120
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4124
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4130
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4142
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4146
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4150
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4154
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4158
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4162
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4172
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4178
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4182
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4186
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4190
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4194
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4198
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4202
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4206
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4210
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4214
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4227
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4231
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4235
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4240
		{
			yyVAL.str = ""
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4244
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4249
		{
			setAllowComments(yylex, true)
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4253
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4259
		{
			yyVAL.strs = nil
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4263
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4269
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4273
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4277
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4282
		{
			yyVAL.str = ""
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
			yyVAL.str = SQLCacheStr
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4295
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4299
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4303
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4309
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4313
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: yyDollar[2].strs,
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4325
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4334
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4340
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4344
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4349
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4353
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4358
		{
			yyVAL.strs = nil
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4362
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4366
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4370
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4374
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4380
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4384
		{
			yyVAL.str = SQLCacheStr
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4388
		{
			yyVAL.str = DistinctStr
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4392
		{
			yyVAL.str = DistinctStr
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = StraightJoinHint
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4400
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4404
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4410
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4414
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4420
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4424
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4428
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4432
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4437
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4441
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4445
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4452
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4457
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4461
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4467
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4473
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4477
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4487
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4491
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4495
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4499
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4505
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4511
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4515
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4520
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4524
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4530
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4534
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4540
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4544
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4550
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4554
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4558
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4562
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4568
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4572
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4585
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4589
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4593
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4597
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4603
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4605
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4609
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4611
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4615
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4617
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4620
		{
			yyVAL.empty = struct{}{}
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4622
		{
			yyVAL.empty = struct{}{}
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4625
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4629
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4633
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4640
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4646
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4650
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4654
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4660
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4666
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4670
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4674
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4678
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4684
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4688
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4698
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4702
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4708
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4712
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4718
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4723
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4727
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4733
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4737
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 910:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4743
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4747
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4751
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4755
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4760
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4764
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4768
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4772
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4782
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4789
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4793
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4797
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4801
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4805
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4809
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4813
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4820
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4824
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4828
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4832
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4838
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4842
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4846
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4850
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4854
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4858
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4862
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4866
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4870
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4874
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4878
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4884
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4888
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4892
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4896
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4900
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4904
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4908
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4912
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4916
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4920
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4924
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4928
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4932
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4938
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4942
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4946
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4950
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4954
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4958
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4962
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4966
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4970
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4974
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4978
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4982
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4986
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4990
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4994
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4998
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5002
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5006
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5010
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5018
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5022
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5041
		{
			yyVAL.str = ""
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5045
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5051
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5055
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5062
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5066
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5070
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5074
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5080
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5084
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5088
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5092
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5096
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5100
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5104
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5110
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5114
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5118
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5125
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5131
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5135
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5145
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5149
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5153
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5157
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5167
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5171
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5175
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5179
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5183
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5187
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5191
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5195
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5199
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5203
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5214
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5218
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5224
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5228
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5245
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5261
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5273
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5277
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5321
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5325
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5337
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5349
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5361
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5365
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5373
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5390
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5394
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5399
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5403
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5409
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5413
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5419
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5423
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5429
		{
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5431
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5435
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5439
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5443
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5447
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5451
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5455
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5459
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5463
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5467
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5471
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5477
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5481
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5485
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5489
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5493
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5497
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5501
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5505
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5509
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5519
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5523
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5527
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5531
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5542
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5546
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5550
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5554
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5558
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5564
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5568
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5572
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5576
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5580
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5586
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5590
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5594
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5600
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5604
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5608
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5614
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5618
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5622
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5626
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5630
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5636
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5640
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5644
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5648
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5652
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5656
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5660
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5664
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5668
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5672
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5682
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5687
		{
			yyVAL.str = string("")
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5691
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5697
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5701
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5707
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5712
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5716
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5722
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5726
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5730
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5736
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5745
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5749
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5759
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5764
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5768
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5773
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5777
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5783
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5789
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5793
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5799
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5804
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5808
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5812
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5817
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5821
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5827
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5831
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5835
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5840
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5844
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5848
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5852
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5856
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5863
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5867
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5871
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5875
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5881
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5885
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5889
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5894
		{
			yyVAL.str = ""
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5898
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5902
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5906
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5911
		{
			yyVAL.str = ""
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5915
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5921
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5925
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5930
		{
			yyVAL.str = ""
		}
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5934
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5939
		{
			yyVAL.str = "cascaded"
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5943
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5947
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5956
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5962
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5968
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5974
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5983
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5987
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5992
		{
			yyVAL.str = ""
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5996
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6002
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6006
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6012
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6016
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6020
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6025
		{
			yyVAL.str = ""
		}
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6029
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6033
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6038
		{
			yyVAL.str = ""
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6042
		{
			yyVAL.str = " header"
		}
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6047
		{
			yyVAL.str = ""
		}
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6051
		{
			yyVAL.str = " manifest on"
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6055
		{
			yyVAL.str = " manifest off"
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6060
		{
			yyVAL.str = ""
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6064
		{
			yyVAL.str = " overwrite on"
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6068
		{
			yyVAL.str = " overwrite off"
		}
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6074
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6079
		{
			yyVAL.str = ""
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6083
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6089
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6093
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6099
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6103
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6108
		{
			yyVAL.str = ""
		}
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6112
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6118
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6122
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6128
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6132
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6136
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6141
		{
			yyVAL.str = ""
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6145
		{
			yyVAL.str = " optionally"
		}
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6158
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6162
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6166
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6170
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6174
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6180
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6184
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6188
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1229:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6192
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6201
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6207
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6211
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6217
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6221
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6227
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6242
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6246
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6252
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6258
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6262
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6268
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6272
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6276
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6280
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6284
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6292
		{
			yyVAL.str = "charset"
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6319
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6321
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6324
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6326
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6329
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6331
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6334
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6336
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6339
		{
			yyVAL.empty = struct{}{}
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6341
		{
			yyVAL.empty = struct{}{}
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6343
		{
			yyVAL.empty = struct{}{}
		}
	case 1268:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6347
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6352
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6356
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6361
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6363
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6367
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6373
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6377
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6384
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6390
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6394
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6400
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6404
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6411
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6921
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6930
		{
			decNesting(yylex)
		}
	case 1771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6935
		{
			skipToEnd(yylex)
		}
	case 1772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6940
		{
			skipToEnd(yylex)
		}
	case 1773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6944
		{
			skipToEnd(yylex)
		}
	case 1774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6948
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
